
DispStepsGPS.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000018c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000ad88  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000129c  0800af18  0800af18  0001af18  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800c1b4  0800c1b4  000201f0  2**0
                  CONTENTS
  4 .ARM          00000008  0800c1b4  0800c1b4  0001c1b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800c1bc  0800c1bc  000201f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800c1bc  0800c1bc  0001c1bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800c1c0  0800c1c0  0001c1c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001f0  20000000  0800c1c4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000da4  200001f0  0800c3b4  000201f0  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  20000f94  0800c3b4  00020f94  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201f0  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020220  2**0
                  CONTENTS, READONLY
 13 .debug_info   000117a3  00000000  00000000  00020263  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00002ca9  00000000  00000000  00031a06  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000f38  00000000  00000000  000346b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000ba8  00000000  00000000  000355e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001b205  00000000  00000000  00036190  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000137cf  00000000  00000000  00051395  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000a51ba  00000000  00000000  00064b64  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00005410  00000000  00000000  00109d20  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000071  00000000  00000000  0010f130  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001f0 	.word	0x200001f0
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800af00 	.word	0x0800af00

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001f4 	.word	0x200001f4
 80001cc:	0800af00 	.word	0x0800af00

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <strcmp>:
 8000280:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000284:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000288:	2a01      	cmp	r2, #1
 800028a:	bf28      	it	cs
 800028c:	429a      	cmpcs	r2, r3
 800028e:	d0f7      	beq.n	8000280 <strcmp>
 8000290:	1ad0      	subs	r0, r2, r3
 8000292:	4770      	bx	lr

08000294 <__aeabi_drsub>:
 8000294:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000298:	e002      	b.n	80002a0 <__adddf3>
 800029a:	bf00      	nop

0800029c <__aeabi_dsub>:
 800029c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002a0 <__adddf3>:
 80002a0:	b530      	push	{r4, r5, lr}
 80002a2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002aa:	ea94 0f05 	teq	r4, r5
 80002ae:	bf08      	it	eq
 80002b0:	ea90 0f02 	teqeq	r0, r2
 80002b4:	bf1f      	itttt	ne
 80002b6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002ba:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002be:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002c2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c6:	f000 80e2 	beq.w	800048e <__adddf3+0x1ee>
 80002ca:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ce:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002d2:	bfb8      	it	lt
 80002d4:	426d      	neglt	r5, r5
 80002d6:	dd0c      	ble.n	80002f2 <__adddf3+0x52>
 80002d8:	442c      	add	r4, r5
 80002da:	ea80 0202 	eor.w	r2, r0, r2
 80002de:	ea81 0303 	eor.w	r3, r1, r3
 80002e2:	ea82 0000 	eor.w	r0, r2, r0
 80002e6:	ea83 0101 	eor.w	r1, r3, r1
 80002ea:	ea80 0202 	eor.w	r2, r0, r2
 80002ee:	ea81 0303 	eor.w	r3, r1, r3
 80002f2:	2d36      	cmp	r5, #54	; 0x36
 80002f4:	bf88      	it	hi
 80002f6:	bd30      	pophi	{r4, r5, pc}
 80002f8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002fc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000300:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000304:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x70>
 800030a:	4240      	negs	r0, r0
 800030c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000310:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000314:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000318:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800031c:	d002      	beq.n	8000324 <__adddf3+0x84>
 800031e:	4252      	negs	r2, r2
 8000320:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000324:	ea94 0f05 	teq	r4, r5
 8000328:	f000 80a7 	beq.w	800047a <__adddf3+0x1da>
 800032c:	f1a4 0401 	sub.w	r4, r4, #1
 8000330:	f1d5 0e20 	rsbs	lr, r5, #32
 8000334:	db0d      	blt.n	8000352 <__adddf3+0xb2>
 8000336:	fa02 fc0e 	lsl.w	ip, r2, lr
 800033a:	fa22 f205 	lsr.w	r2, r2, r5
 800033e:	1880      	adds	r0, r0, r2
 8000340:	f141 0100 	adc.w	r1, r1, #0
 8000344:	fa03 f20e 	lsl.w	r2, r3, lr
 8000348:	1880      	adds	r0, r0, r2
 800034a:	fa43 f305 	asr.w	r3, r3, r5
 800034e:	4159      	adcs	r1, r3
 8000350:	e00e      	b.n	8000370 <__adddf3+0xd0>
 8000352:	f1a5 0520 	sub.w	r5, r5, #32
 8000356:	f10e 0e20 	add.w	lr, lr, #32
 800035a:	2a01      	cmp	r2, #1
 800035c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000360:	bf28      	it	cs
 8000362:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000366:	fa43 f305 	asr.w	r3, r3, r5
 800036a:	18c0      	adds	r0, r0, r3
 800036c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000370:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000374:	d507      	bpl.n	8000386 <__adddf3+0xe6>
 8000376:	f04f 0e00 	mov.w	lr, #0
 800037a:	f1dc 0c00 	rsbs	ip, ip, #0
 800037e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000382:	eb6e 0101 	sbc.w	r1, lr, r1
 8000386:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800038a:	d31b      	bcc.n	80003c4 <__adddf3+0x124>
 800038c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000390:	d30c      	bcc.n	80003ac <__adddf3+0x10c>
 8000392:	0849      	lsrs	r1, r1, #1
 8000394:	ea5f 0030 	movs.w	r0, r0, rrx
 8000398:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800039c:	f104 0401 	add.w	r4, r4, #1
 80003a0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a8:	f080 809a 	bcs.w	80004e0 <__adddf3+0x240>
 80003ac:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003b0:	bf08      	it	eq
 80003b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b6:	f150 0000 	adcs.w	r0, r0, #0
 80003ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003be:	ea41 0105 	orr.w	r1, r1, r5
 80003c2:	bd30      	pop	{r4, r5, pc}
 80003c4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c8:	4140      	adcs	r0, r0
 80003ca:	eb41 0101 	adc.w	r1, r1, r1
 80003ce:	3c01      	subs	r4, #1
 80003d0:	bf28      	it	cs
 80003d2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d6:	d2e9      	bcs.n	80003ac <__adddf3+0x10c>
 80003d8:	f091 0f00 	teq	r1, #0
 80003dc:	bf04      	itt	eq
 80003de:	4601      	moveq	r1, r0
 80003e0:	2000      	moveq	r0, #0
 80003e2:	fab1 f381 	clz	r3, r1
 80003e6:	bf08      	it	eq
 80003e8:	3320      	addeq	r3, #32
 80003ea:	f1a3 030b 	sub.w	r3, r3, #11
 80003ee:	f1b3 0220 	subs.w	r2, r3, #32
 80003f2:	da0c      	bge.n	800040e <__adddf3+0x16e>
 80003f4:	320c      	adds	r2, #12
 80003f6:	dd08      	ble.n	800040a <__adddf3+0x16a>
 80003f8:	f102 0c14 	add.w	ip, r2, #20
 80003fc:	f1c2 020c 	rsb	r2, r2, #12
 8000400:	fa01 f00c 	lsl.w	r0, r1, ip
 8000404:	fa21 f102 	lsr.w	r1, r1, r2
 8000408:	e00c      	b.n	8000424 <__adddf3+0x184>
 800040a:	f102 0214 	add.w	r2, r2, #20
 800040e:	bfd8      	it	le
 8000410:	f1c2 0c20 	rsble	ip, r2, #32
 8000414:	fa01 f102 	lsl.w	r1, r1, r2
 8000418:	fa20 fc0c 	lsr.w	ip, r0, ip
 800041c:	bfdc      	itt	le
 800041e:	ea41 010c 	orrle.w	r1, r1, ip
 8000422:	4090      	lslle	r0, r2
 8000424:	1ae4      	subs	r4, r4, r3
 8000426:	bfa2      	ittt	ge
 8000428:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800042c:	4329      	orrge	r1, r5
 800042e:	bd30      	popge	{r4, r5, pc}
 8000430:	ea6f 0404 	mvn.w	r4, r4
 8000434:	3c1f      	subs	r4, #31
 8000436:	da1c      	bge.n	8000472 <__adddf3+0x1d2>
 8000438:	340c      	adds	r4, #12
 800043a:	dc0e      	bgt.n	800045a <__adddf3+0x1ba>
 800043c:	f104 0414 	add.w	r4, r4, #20
 8000440:	f1c4 0220 	rsb	r2, r4, #32
 8000444:	fa20 f004 	lsr.w	r0, r0, r4
 8000448:	fa01 f302 	lsl.w	r3, r1, r2
 800044c:	ea40 0003 	orr.w	r0, r0, r3
 8000450:	fa21 f304 	lsr.w	r3, r1, r4
 8000454:	ea45 0103 	orr.w	r1, r5, r3
 8000458:	bd30      	pop	{r4, r5, pc}
 800045a:	f1c4 040c 	rsb	r4, r4, #12
 800045e:	f1c4 0220 	rsb	r2, r4, #32
 8000462:	fa20 f002 	lsr.w	r0, r0, r2
 8000466:	fa01 f304 	lsl.w	r3, r1, r4
 800046a:	ea40 0003 	orr.w	r0, r0, r3
 800046e:	4629      	mov	r1, r5
 8000470:	bd30      	pop	{r4, r5, pc}
 8000472:	fa21 f004 	lsr.w	r0, r1, r4
 8000476:	4629      	mov	r1, r5
 8000478:	bd30      	pop	{r4, r5, pc}
 800047a:	f094 0f00 	teq	r4, #0
 800047e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000482:	bf06      	itte	eq
 8000484:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000488:	3401      	addeq	r4, #1
 800048a:	3d01      	subne	r5, #1
 800048c:	e74e      	b.n	800032c <__adddf3+0x8c>
 800048e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000492:	bf18      	it	ne
 8000494:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000498:	d029      	beq.n	80004ee <__adddf3+0x24e>
 800049a:	ea94 0f05 	teq	r4, r5
 800049e:	bf08      	it	eq
 80004a0:	ea90 0f02 	teqeq	r0, r2
 80004a4:	d005      	beq.n	80004b2 <__adddf3+0x212>
 80004a6:	ea54 0c00 	orrs.w	ip, r4, r0
 80004aa:	bf04      	itt	eq
 80004ac:	4619      	moveq	r1, r3
 80004ae:	4610      	moveq	r0, r2
 80004b0:	bd30      	pop	{r4, r5, pc}
 80004b2:	ea91 0f03 	teq	r1, r3
 80004b6:	bf1e      	ittt	ne
 80004b8:	2100      	movne	r1, #0
 80004ba:	2000      	movne	r0, #0
 80004bc:	bd30      	popne	{r4, r5, pc}
 80004be:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004c2:	d105      	bne.n	80004d0 <__adddf3+0x230>
 80004c4:	0040      	lsls	r0, r0, #1
 80004c6:	4149      	adcs	r1, r1
 80004c8:	bf28      	it	cs
 80004ca:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ce:	bd30      	pop	{r4, r5, pc}
 80004d0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d4:	bf3c      	itt	cc
 80004d6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004da:	bd30      	popcc	{r4, r5, pc}
 80004dc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004e0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e8:	f04f 0000 	mov.w	r0, #0
 80004ec:	bd30      	pop	{r4, r5, pc}
 80004ee:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004f2:	bf1a      	itte	ne
 80004f4:	4619      	movne	r1, r3
 80004f6:	4610      	movne	r0, r2
 80004f8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004fc:	bf1c      	itt	ne
 80004fe:	460b      	movne	r3, r1
 8000500:	4602      	movne	r2, r0
 8000502:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000506:	bf06      	itte	eq
 8000508:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800050c:	ea91 0f03 	teqeq	r1, r3
 8000510:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000514:	bd30      	pop	{r4, r5, pc}
 8000516:	bf00      	nop

08000518 <__aeabi_ui2d>:
 8000518:	f090 0f00 	teq	r0, #0
 800051c:	bf04      	itt	eq
 800051e:	2100      	moveq	r1, #0
 8000520:	4770      	bxeq	lr
 8000522:	b530      	push	{r4, r5, lr}
 8000524:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000528:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800052c:	f04f 0500 	mov.w	r5, #0
 8000530:	f04f 0100 	mov.w	r1, #0
 8000534:	e750      	b.n	80003d8 <__adddf3+0x138>
 8000536:	bf00      	nop

08000538 <__aeabi_i2d>:
 8000538:	f090 0f00 	teq	r0, #0
 800053c:	bf04      	itt	eq
 800053e:	2100      	moveq	r1, #0
 8000540:	4770      	bxeq	lr
 8000542:	b530      	push	{r4, r5, lr}
 8000544:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000548:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800054c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000550:	bf48      	it	mi
 8000552:	4240      	negmi	r0, r0
 8000554:	f04f 0100 	mov.w	r1, #0
 8000558:	e73e      	b.n	80003d8 <__adddf3+0x138>
 800055a:	bf00      	nop

0800055c <__aeabi_f2d>:
 800055c:	0042      	lsls	r2, r0, #1
 800055e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000562:	ea4f 0131 	mov.w	r1, r1, rrx
 8000566:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800056a:	bf1f      	itttt	ne
 800056c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000570:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000574:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000578:	4770      	bxne	lr
 800057a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057e:	bf08      	it	eq
 8000580:	4770      	bxeq	lr
 8000582:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000586:	bf04      	itt	eq
 8000588:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800058c:	4770      	bxeq	lr
 800058e:	b530      	push	{r4, r5, lr}
 8000590:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000594:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000598:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800059c:	e71c      	b.n	80003d8 <__adddf3+0x138>
 800059e:	bf00      	nop

080005a0 <__aeabi_ul2d>:
 80005a0:	ea50 0201 	orrs.w	r2, r0, r1
 80005a4:	bf08      	it	eq
 80005a6:	4770      	bxeq	lr
 80005a8:	b530      	push	{r4, r5, lr}
 80005aa:	f04f 0500 	mov.w	r5, #0
 80005ae:	e00a      	b.n	80005c6 <__aeabi_l2d+0x16>

080005b0 <__aeabi_l2d>:
 80005b0:	ea50 0201 	orrs.w	r2, r0, r1
 80005b4:	bf08      	it	eq
 80005b6:	4770      	bxeq	lr
 80005b8:	b530      	push	{r4, r5, lr}
 80005ba:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005be:	d502      	bpl.n	80005c6 <__aeabi_l2d+0x16>
 80005c0:	4240      	negs	r0, r0
 80005c2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005ca:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ce:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005d2:	f43f aed8 	beq.w	8000386 <__adddf3+0xe6>
 80005d6:	f04f 0203 	mov.w	r2, #3
 80005da:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005de:	bf18      	it	ne
 80005e0:	3203      	addne	r2, #3
 80005e2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e6:	bf18      	it	ne
 80005e8:	3203      	addne	r2, #3
 80005ea:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ee:	f1c2 0320 	rsb	r3, r2, #32
 80005f2:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f6:	fa20 f002 	lsr.w	r0, r0, r2
 80005fa:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fe:	ea40 000e 	orr.w	r0, r0, lr
 8000602:	fa21 f102 	lsr.w	r1, r1, r2
 8000606:	4414      	add	r4, r2
 8000608:	e6bd      	b.n	8000386 <__adddf3+0xe6>
 800060a:	bf00      	nop

0800060c <__aeabi_dmul>:
 800060c:	b570      	push	{r4, r5, r6, lr}
 800060e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000612:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000616:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800061a:	bf1d      	ittte	ne
 800061c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000620:	ea94 0f0c 	teqne	r4, ip
 8000624:	ea95 0f0c 	teqne	r5, ip
 8000628:	f000 f8de 	bleq	80007e8 <__aeabi_dmul+0x1dc>
 800062c:	442c      	add	r4, r5
 800062e:	ea81 0603 	eor.w	r6, r1, r3
 8000632:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000636:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800063a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063e:	bf18      	it	ne
 8000640:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000644:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000648:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800064c:	d038      	beq.n	80006c0 <__aeabi_dmul+0xb4>
 800064e:	fba0 ce02 	umull	ip, lr, r0, r2
 8000652:	f04f 0500 	mov.w	r5, #0
 8000656:	fbe1 e502 	umlal	lr, r5, r1, r2
 800065a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065e:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000662:	f04f 0600 	mov.w	r6, #0
 8000666:	fbe1 5603 	umlal	r5, r6, r1, r3
 800066a:	f09c 0f00 	teq	ip, #0
 800066e:	bf18      	it	ne
 8000670:	f04e 0e01 	orrne.w	lr, lr, #1
 8000674:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000678:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 800067c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000680:	d204      	bcs.n	800068c <__aeabi_dmul+0x80>
 8000682:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000686:	416d      	adcs	r5, r5
 8000688:	eb46 0606 	adc.w	r6, r6, r6
 800068c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000690:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000694:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000698:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 800069c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006a0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a4:	bf88      	it	hi
 80006a6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006aa:	d81e      	bhi.n	80006ea <__aeabi_dmul+0xde>
 80006ac:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006b0:	bf08      	it	eq
 80006b2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b6:	f150 0000 	adcs.w	r0, r0, #0
 80006ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006be:	bd70      	pop	{r4, r5, r6, pc}
 80006c0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c4:	ea46 0101 	orr.w	r1, r6, r1
 80006c8:	ea40 0002 	orr.w	r0, r0, r2
 80006cc:	ea81 0103 	eor.w	r1, r1, r3
 80006d0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d4:	bfc2      	ittt	gt
 80006d6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006da:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006de:	bd70      	popgt	{r4, r5, r6, pc}
 80006e0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e4:	f04f 0e00 	mov.w	lr, #0
 80006e8:	3c01      	subs	r4, #1
 80006ea:	f300 80ab 	bgt.w	8000844 <__aeabi_dmul+0x238>
 80006ee:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006f2:	bfde      	ittt	le
 80006f4:	2000      	movle	r0, #0
 80006f6:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006fa:	bd70      	pople	{r4, r5, r6, pc}
 80006fc:	f1c4 0400 	rsb	r4, r4, #0
 8000700:	3c20      	subs	r4, #32
 8000702:	da35      	bge.n	8000770 <__aeabi_dmul+0x164>
 8000704:	340c      	adds	r4, #12
 8000706:	dc1b      	bgt.n	8000740 <__aeabi_dmul+0x134>
 8000708:	f104 0414 	add.w	r4, r4, #20
 800070c:	f1c4 0520 	rsb	r5, r4, #32
 8000710:	fa00 f305 	lsl.w	r3, r0, r5
 8000714:	fa20 f004 	lsr.w	r0, r0, r4
 8000718:	fa01 f205 	lsl.w	r2, r1, r5
 800071c:	ea40 0002 	orr.w	r0, r0, r2
 8000720:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000724:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000728:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800072c:	fa21 f604 	lsr.w	r6, r1, r4
 8000730:	eb42 0106 	adc.w	r1, r2, r6
 8000734:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000738:	bf08      	it	eq
 800073a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073e:	bd70      	pop	{r4, r5, r6, pc}
 8000740:	f1c4 040c 	rsb	r4, r4, #12
 8000744:	f1c4 0520 	rsb	r5, r4, #32
 8000748:	fa00 f304 	lsl.w	r3, r0, r4
 800074c:	fa20 f005 	lsr.w	r0, r0, r5
 8000750:	fa01 f204 	lsl.w	r2, r1, r4
 8000754:	ea40 0002 	orr.w	r0, r0, r2
 8000758:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800075c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000760:	f141 0100 	adc.w	r1, r1, #0
 8000764:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000768:	bf08      	it	eq
 800076a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076e:	bd70      	pop	{r4, r5, r6, pc}
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f205 	lsl.w	r2, r0, r5
 8000778:	ea4e 0e02 	orr.w	lr, lr, r2
 800077c:	fa20 f304 	lsr.w	r3, r0, r4
 8000780:	fa01 f205 	lsl.w	r2, r1, r5
 8000784:	ea43 0302 	orr.w	r3, r3, r2
 8000788:	fa21 f004 	lsr.w	r0, r1, r4
 800078c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000790:	fa21 f204 	lsr.w	r2, r1, r4
 8000794:	ea20 0002 	bic.w	r0, r0, r2
 8000798:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 800079c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007a0:	bf08      	it	eq
 80007a2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a6:	bd70      	pop	{r4, r5, r6, pc}
 80007a8:	f094 0f00 	teq	r4, #0
 80007ac:	d10f      	bne.n	80007ce <__aeabi_dmul+0x1c2>
 80007ae:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007b2:	0040      	lsls	r0, r0, #1
 80007b4:	eb41 0101 	adc.w	r1, r1, r1
 80007b8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007bc:	bf08      	it	eq
 80007be:	3c01      	subeq	r4, #1
 80007c0:	d0f7      	beq.n	80007b2 <__aeabi_dmul+0x1a6>
 80007c2:	ea41 0106 	orr.w	r1, r1, r6
 80007c6:	f095 0f00 	teq	r5, #0
 80007ca:	bf18      	it	ne
 80007cc:	4770      	bxne	lr
 80007ce:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007d2:	0052      	lsls	r2, r2, #1
 80007d4:	eb43 0303 	adc.w	r3, r3, r3
 80007d8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007dc:	bf08      	it	eq
 80007de:	3d01      	subeq	r5, #1
 80007e0:	d0f7      	beq.n	80007d2 <__aeabi_dmul+0x1c6>
 80007e2:	ea43 0306 	orr.w	r3, r3, r6
 80007e6:	4770      	bx	lr
 80007e8:	ea94 0f0c 	teq	r4, ip
 80007ec:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007f0:	bf18      	it	ne
 80007f2:	ea95 0f0c 	teqne	r5, ip
 80007f6:	d00c      	beq.n	8000812 <__aeabi_dmul+0x206>
 80007f8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007fc:	bf18      	it	ne
 80007fe:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000802:	d1d1      	bne.n	80007a8 <__aeabi_dmul+0x19c>
 8000804:	ea81 0103 	eor.w	r1, r1, r3
 8000808:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800080c:	f04f 0000 	mov.w	r0, #0
 8000810:	bd70      	pop	{r4, r5, r6, pc}
 8000812:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000816:	bf06      	itte	eq
 8000818:	4610      	moveq	r0, r2
 800081a:	4619      	moveq	r1, r3
 800081c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000820:	d019      	beq.n	8000856 <__aeabi_dmul+0x24a>
 8000822:	ea94 0f0c 	teq	r4, ip
 8000826:	d102      	bne.n	800082e <__aeabi_dmul+0x222>
 8000828:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 800082c:	d113      	bne.n	8000856 <__aeabi_dmul+0x24a>
 800082e:	ea95 0f0c 	teq	r5, ip
 8000832:	d105      	bne.n	8000840 <__aeabi_dmul+0x234>
 8000834:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000838:	bf1c      	itt	ne
 800083a:	4610      	movne	r0, r2
 800083c:	4619      	movne	r1, r3
 800083e:	d10a      	bne.n	8000856 <__aeabi_dmul+0x24a>
 8000840:	ea81 0103 	eor.w	r1, r1, r3
 8000844:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000848:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800084c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000850:	f04f 0000 	mov.w	r0, #0
 8000854:	bd70      	pop	{r4, r5, r6, pc}
 8000856:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800085a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085e:	bd70      	pop	{r4, r5, r6, pc}

08000860 <__aeabi_ddiv>:
 8000860:	b570      	push	{r4, r5, r6, lr}
 8000862:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000866:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800086a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086e:	bf1d      	ittte	ne
 8000870:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000874:	ea94 0f0c 	teqne	r4, ip
 8000878:	ea95 0f0c 	teqne	r5, ip
 800087c:	f000 f8a7 	bleq	80009ce <__aeabi_ddiv+0x16e>
 8000880:	eba4 0405 	sub.w	r4, r4, r5
 8000884:	ea81 0e03 	eor.w	lr, r1, r3
 8000888:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800088c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000890:	f000 8088 	beq.w	80009a4 <__aeabi_ddiv+0x144>
 8000894:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000898:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 800089c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008a0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a4:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008ac:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008b0:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b8:	429d      	cmp	r5, r3
 80008ba:	bf08      	it	eq
 80008bc:	4296      	cmpeq	r6, r2
 80008be:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008c2:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c6:	d202      	bcs.n	80008ce <__aeabi_ddiv+0x6e>
 80008c8:	085b      	lsrs	r3, r3, #1
 80008ca:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ce:	1ab6      	subs	r6, r6, r2
 80008d0:	eb65 0503 	sbc.w	r5, r5, r3
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008de:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008e2:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e6:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ea:	bf22      	ittt	cs
 80008ec:	1ab6      	subcs	r6, r6, r2
 80008ee:	4675      	movcs	r5, lr
 80008f0:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fe:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000902:	bf22      	ittt	cs
 8000904:	1ab6      	subcs	r6, r6, r2
 8000906:	4675      	movcs	r5, lr
 8000908:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800090c:	085b      	lsrs	r3, r3, #1
 800090e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000912:	ebb6 0e02 	subs.w	lr, r6, r2
 8000916:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091a:	bf22      	ittt	cs
 800091c:	1ab6      	subcs	r6, r6, r2
 800091e:	4675      	movcs	r5, lr
 8000920:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000924:	085b      	lsrs	r3, r3, #1
 8000926:	ea4f 0232 	mov.w	r2, r2, rrx
 800092a:	ebb6 0e02 	subs.w	lr, r6, r2
 800092e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000932:	bf22      	ittt	cs
 8000934:	1ab6      	subcs	r6, r6, r2
 8000936:	4675      	movcs	r5, lr
 8000938:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800093c:	ea55 0e06 	orrs.w	lr, r5, r6
 8000940:	d018      	beq.n	8000974 <__aeabi_ddiv+0x114>
 8000942:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000946:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800094a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000952:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000956:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800095a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095e:	d1c0      	bne.n	80008e2 <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	d10b      	bne.n	800097e <__aeabi_ddiv+0x11e>
 8000966:	ea41 0100 	orr.w	r1, r1, r0
 800096a:	f04f 0000 	mov.w	r0, #0
 800096e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000972:	e7b6      	b.n	80008e2 <__aeabi_ddiv+0x82>
 8000974:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000978:	bf04      	itt	eq
 800097a:	4301      	orreq	r1, r0
 800097c:	2000      	moveq	r0, #0
 800097e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000982:	bf88      	it	hi
 8000984:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000988:	f63f aeaf 	bhi.w	80006ea <__aeabi_dmul+0xde>
 800098c:	ebb5 0c03 	subs.w	ip, r5, r3
 8000990:	bf04      	itt	eq
 8000992:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000996:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800099a:	f150 0000 	adcs.w	r0, r0, #0
 800099e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009a2:	bd70      	pop	{r4, r5, r6, pc}
 80009a4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009ac:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009b0:	bfc2      	ittt	gt
 80009b2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009ba:	bd70      	popgt	{r4, r5, r6, pc}
 80009bc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009c0:	f04f 0e00 	mov.w	lr, #0
 80009c4:	3c01      	subs	r4, #1
 80009c6:	e690      	b.n	80006ea <__aeabi_dmul+0xde>
 80009c8:	ea45 0e06 	orr.w	lr, r5, r6
 80009cc:	e68d      	b.n	80006ea <__aeabi_dmul+0xde>
 80009ce:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009d2:	ea94 0f0c 	teq	r4, ip
 80009d6:	bf08      	it	eq
 80009d8:	ea95 0f0c 	teqeq	r5, ip
 80009dc:	f43f af3b 	beq.w	8000856 <__aeabi_dmul+0x24a>
 80009e0:	ea94 0f0c 	teq	r4, ip
 80009e4:	d10a      	bne.n	80009fc <__aeabi_ddiv+0x19c>
 80009e6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009ea:	f47f af34 	bne.w	8000856 <__aeabi_dmul+0x24a>
 80009ee:	ea95 0f0c 	teq	r5, ip
 80009f2:	f47f af25 	bne.w	8000840 <__aeabi_dmul+0x234>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e72c      	b.n	8000856 <__aeabi_dmul+0x24a>
 80009fc:	ea95 0f0c 	teq	r5, ip
 8000a00:	d106      	bne.n	8000a10 <__aeabi_ddiv+0x1b0>
 8000a02:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a06:	f43f aefd 	beq.w	8000804 <__aeabi_dmul+0x1f8>
 8000a0a:	4610      	mov	r0, r2
 8000a0c:	4619      	mov	r1, r3
 8000a0e:	e722      	b.n	8000856 <__aeabi_dmul+0x24a>
 8000a10:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a14:	bf18      	it	ne
 8000a16:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a1a:	f47f aec5 	bne.w	80007a8 <__aeabi_dmul+0x19c>
 8000a1e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a22:	f47f af0d 	bne.w	8000840 <__aeabi_dmul+0x234>
 8000a26:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a2a:	f47f aeeb 	bne.w	8000804 <__aeabi_dmul+0x1f8>
 8000a2e:	e712      	b.n	8000856 <__aeabi_dmul+0x24a>

08000a30 <__gedf2>:
 8000a30:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000a34:	e006      	b.n	8000a44 <__cmpdf2+0x4>
 8000a36:	bf00      	nop

08000a38 <__ledf2>:
 8000a38:	f04f 0c01 	mov.w	ip, #1
 8000a3c:	e002      	b.n	8000a44 <__cmpdf2+0x4>
 8000a3e:	bf00      	nop

08000a40 <__cmpdf2>:
 8000a40:	f04f 0c01 	mov.w	ip, #1
 8000a44:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a48:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a4c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a50:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a54:	bf18      	it	ne
 8000a56:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a5a:	d01b      	beq.n	8000a94 <__cmpdf2+0x54>
 8000a5c:	b001      	add	sp, #4
 8000a5e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a62:	bf0c      	ite	eq
 8000a64:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a68:	ea91 0f03 	teqne	r1, r3
 8000a6c:	bf02      	ittt	eq
 8000a6e:	ea90 0f02 	teqeq	r0, r2
 8000a72:	2000      	moveq	r0, #0
 8000a74:	4770      	bxeq	lr
 8000a76:	f110 0f00 	cmn.w	r0, #0
 8000a7a:	ea91 0f03 	teq	r1, r3
 8000a7e:	bf58      	it	pl
 8000a80:	4299      	cmppl	r1, r3
 8000a82:	bf08      	it	eq
 8000a84:	4290      	cmpeq	r0, r2
 8000a86:	bf2c      	ite	cs
 8000a88:	17d8      	asrcs	r0, r3, #31
 8000a8a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8e:	f040 0001 	orr.w	r0, r0, #1
 8000a92:	4770      	bx	lr
 8000a94:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a98:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a9c:	d102      	bne.n	8000aa4 <__cmpdf2+0x64>
 8000a9e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aa2:	d107      	bne.n	8000ab4 <__cmpdf2+0x74>
 8000aa4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aac:	d1d6      	bne.n	8000a5c <__cmpdf2+0x1c>
 8000aae:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ab2:	d0d3      	beq.n	8000a5c <__cmpdf2+0x1c>
 8000ab4:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab8:	4770      	bx	lr
 8000aba:	bf00      	nop

08000abc <__aeabi_cdrcmple>:
 8000abc:	4684      	mov	ip, r0
 8000abe:	4610      	mov	r0, r2
 8000ac0:	4662      	mov	r2, ip
 8000ac2:	468c      	mov	ip, r1
 8000ac4:	4619      	mov	r1, r3
 8000ac6:	4663      	mov	r3, ip
 8000ac8:	e000      	b.n	8000acc <__aeabi_cdcmpeq>
 8000aca:	bf00      	nop

08000acc <__aeabi_cdcmpeq>:
 8000acc:	b501      	push	{r0, lr}
 8000ace:	f7ff ffb7 	bl	8000a40 <__cmpdf2>
 8000ad2:	2800      	cmp	r0, #0
 8000ad4:	bf48      	it	mi
 8000ad6:	f110 0f00 	cmnmi.w	r0, #0
 8000ada:	bd01      	pop	{r0, pc}

08000adc <__aeabi_dcmpeq>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff fff4 	bl	8000acc <__aeabi_cdcmpeq>
 8000ae4:	bf0c      	ite	eq
 8000ae6:	2001      	moveq	r0, #1
 8000ae8:	2000      	movne	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmplt>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffea 	bl	8000acc <__aeabi_cdcmpeq>
 8000af8:	bf34      	ite	cc
 8000afa:	2001      	movcc	r0, #1
 8000afc:	2000      	movcs	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmple>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffe0 	bl	8000acc <__aeabi_cdcmpeq>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpge>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffce 	bl	8000abc <__aeabi_cdrcmple>
 8000b20:	bf94      	ite	ls
 8000b22:	2001      	movls	r0, #1
 8000b24:	2000      	movhi	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpgt>:
 8000b2c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b30:	f7ff ffc4 	bl	8000abc <__aeabi_cdrcmple>
 8000b34:	bf34      	ite	cc
 8000b36:	2001      	movcc	r0, #1
 8000b38:	2000      	movcs	r0, #0
 8000b3a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3e:	bf00      	nop

08000b40 <__aeabi_dcmpun>:
 8000b40:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b44:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b48:	d102      	bne.n	8000b50 <__aeabi_dcmpun+0x10>
 8000b4a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4e:	d10a      	bne.n	8000b66 <__aeabi_dcmpun+0x26>
 8000b50:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b54:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b58:	d102      	bne.n	8000b60 <__aeabi_dcmpun+0x20>
 8000b5a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5e:	d102      	bne.n	8000b66 <__aeabi_dcmpun+0x26>
 8000b60:	f04f 0000 	mov.w	r0, #0
 8000b64:	4770      	bx	lr
 8000b66:	f04f 0001 	mov.w	r0, #1
 8000b6a:	4770      	bx	lr

08000b6c <__aeabi_d2iz>:
 8000b6c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b70:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b74:	d215      	bcs.n	8000ba2 <__aeabi_d2iz+0x36>
 8000b76:	d511      	bpl.n	8000b9c <__aeabi_d2iz+0x30>
 8000b78:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b7c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b80:	d912      	bls.n	8000ba8 <__aeabi_d2iz+0x3c>
 8000b82:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b86:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b8a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b92:	fa23 f002 	lsr.w	r0, r3, r2
 8000b96:	bf18      	it	ne
 8000b98:	4240      	negne	r0, r0
 8000b9a:	4770      	bx	lr
 8000b9c:	f04f 0000 	mov.w	r0, #0
 8000ba0:	4770      	bx	lr
 8000ba2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba6:	d105      	bne.n	8000bb4 <__aeabi_d2iz+0x48>
 8000ba8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bac:	bf08      	it	eq
 8000bae:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bb2:	4770      	bx	lr
 8000bb4:	f04f 0000 	mov.w	r0, #0
 8000bb8:	4770      	bx	lr
 8000bba:	bf00      	nop

08000bbc <__aeabi_d2uiz>:
 8000bbc:	004a      	lsls	r2, r1, #1
 8000bbe:	d211      	bcs.n	8000be4 <__aeabi_d2uiz+0x28>
 8000bc0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bc4:	d211      	bcs.n	8000bea <__aeabi_d2uiz+0x2e>
 8000bc6:	d50d      	bpl.n	8000be4 <__aeabi_d2uiz+0x28>
 8000bc8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bcc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bd0:	d40e      	bmi.n	8000bf0 <__aeabi_d2uiz+0x34>
 8000bd2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bda:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bde:	fa23 f002 	lsr.w	r0, r3, r2
 8000be2:	4770      	bx	lr
 8000be4:	f04f 0000 	mov.w	r0, #0
 8000be8:	4770      	bx	lr
 8000bea:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bee:	d102      	bne.n	8000bf6 <__aeabi_d2uiz+0x3a>
 8000bf0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000bf4:	4770      	bx	lr
 8000bf6:	f04f 0000 	mov.w	r0, #0
 8000bfa:	4770      	bx	lr

08000bfc <__aeabi_uldivmod>:
 8000bfc:	b953      	cbnz	r3, 8000c14 <__aeabi_uldivmod+0x18>
 8000bfe:	b94a      	cbnz	r2, 8000c14 <__aeabi_uldivmod+0x18>
 8000c00:	2900      	cmp	r1, #0
 8000c02:	bf08      	it	eq
 8000c04:	2800      	cmpeq	r0, #0
 8000c06:	bf1c      	itt	ne
 8000c08:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8000c0c:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8000c10:	f000 b9a6 	b.w	8000f60 <__aeabi_idiv0>
 8000c14:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c18:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c1c:	f000 f83c 	bl	8000c98 <__udivmoddi4>
 8000c20:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c24:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c28:	b004      	add	sp, #16
 8000c2a:	4770      	bx	lr

08000c2c <__aeabi_d2lz>:
 8000c2c:	b538      	push	{r3, r4, r5, lr}
 8000c2e:	2200      	movs	r2, #0
 8000c30:	2300      	movs	r3, #0
 8000c32:	4604      	mov	r4, r0
 8000c34:	460d      	mov	r5, r1
 8000c36:	f7ff ff5b 	bl	8000af0 <__aeabi_dcmplt>
 8000c3a:	b928      	cbnz	r0, 8000c48 <__aeabi_d2lz+0x1c>
 8000c3c:	4620      	mov	r0, r4
 8000c3e:	4629      	mov	r1, r5
 8000c40:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c44:	f000 b80a 	b.w	8000c5c <__aeabi_d2ulz>
 8000c48:	4620      	mov	r0, r4
 8000c4a:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000c4e:	f000 f805 	bl	8000c5c <__aeabi_d2ulz>
 8000c52:	4240      	negs	r0, r0
 8000c54:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c58:	bd38      	pop	{r3, r4, r5, pc}
 8000c5a:	bf00      	nop

08000c5c <__aeabi_d2ulz>:
 8000c5c:	b5d0      	push	{r4, r6, r7, lr}
 8000c5e:	4b0c      	ldr	r3, [pc, #48]	; (8000c90 <__aeabi_d2ulz+0x34>)
 8000c60:	2200      	movs	r2, #0
 8000c62:	4606      	mov	r6, r0
 8000c64:	460f      	mov	r7, r1
 8000c66:	f7ff fcd1 	bl	800060c <__aeabi_dmul>
 8000c6a:	f7ff ffa7 	bl	8000bbc <__aeabi_d2uiz>
 8000c6e:	4604      	mov	r4, r0
 8000c70:	f7ff fc52 	bl	8000518 <__aeabi_ui2d>
 8000c74:	4b07      	ldr	r3, [pc, #28]	; (8000c94 <__aeabi_d2ulz+0x38>)
 8000c76:	2200      	movs	r2, #0
 8000c78:	f7ff fcc8 	bl	800060c <__aeabi_dmul>
 8000c7c:	4602      	mov	r2, r0
 8000c7e:	460b      	mov	r3, r1
 8000c80:	4630      	mov	r0, r6
 8000c82:	4639      	mov	r1, r7
 8000c84:	f7ff fb0a 	bl	800029c <__aeabi_dsub>
 8000c88:	f7ff ff98 	bl	8000bbc <__aeabi_d2uiz>
 8000c8c:	4621      	mov	r1, r4
 8000c8e:	bdd0      	pop	{r4, r6, r7, pc}
 8000c90:	3df00000 	.word	0x3df00000
 8000c94:	41f00000 	.word	0x41f00000

08000c98 <__udivmoddi4>:
 8000c98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c9c:	9e08      	ldr	r6, [sp, #32]
 8000c9e:	460d      	mov	r5, r1
 8000ca0:	4604      	mov	r4, r0
 8000ca2:	460f      	mov	r7, r1
 8000ca4:	2b00      	cmp	r3, #0
 8000ca6:	d14a      	bne.n	8000d3e <__udivmoddi4+0xa6>
 8000ca8:	428a      	cmp	r2, r1
 8000caa:	4694      	mov	ip, r2
 8000cac:	d965      	bls.n	8000d7a <__udivmoddi4+0xe2>
 8000cae:	fab2 f382 	clz	r3, r2
 8000cb2:	b143      	cbz	r3, 8000cc6 <__udivmoddi4+0x2e>
 8000cb4:	fa02 fc03 	lsl.w	ip, r2, r3
 8000cb8:	f1c3 0220 	rsb	r2, r3, #32
 8000cbc:	409f      	lsls	r7, r3
 8000cbe:	fa20 f202 	lsr.w	r2, r0, r2
 8000cc2:	4317      	orrs	r7, r2
 8000cc4:	409c      	lsls	r4, r3
 8000cc6:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000cca:	fa1f f58c 	uxth.w	r5, ip
 8000cce:	fbb7 f1fe 	udiv	r1, r7, lr
 8000cd2:	0c22      	lsrs	r2, r4, #16
 8000cd4:	fb0e 7711 	mls	r7, lr, r1, r7
 8000cd8:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000cdc:	fb01 f005 	mul.w	r0, r1, r5
 8000ce0:	4290      	cmp	r0, r2
 8000ce2:	d90a      	bls.n	8000cfa <__udivmoddi4+0x62>
 8000ce4:	eb1c 0202 	adds.w	r2, ip, r2
 8000ce8:	f101 37ff 	add.w	r7, r1, #4294967295	; 0xffffffff
 8000cec:	f080 811c 	bcs.w	8000f28 <__udivmoddi4+0x290>
 8000cf0:	4290      	cmp	r0, r2
 8000cf2:	f240 8119 	bls.w	8000f28 <__udivmoddi4+0x290>
 8000cf6:	3902      	subs	r1, #2
 8000cf8:	4462      	add	r2, ip
 8000cfa:	1a12      	subs	r2, r2, r0
 8000cfc:	b2a4      	uxth	r4, r4
 8000cfe:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d02:	fb0e 2210 	mls	r2, lr, r0, r2
 8000d06:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000d0a:	fb00 f505 	mul.w	r5, r0, r5
 8000d0e:	42a5      	cmp	r5, r4
 8000d10:	d90a      	bls.n	8000d28 <__udivmoddi4+0x90>
 8000d12:	eb1c 0404 	adds.w	r4, ip, r4
 8000d16:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8000d1a:	f080 8107 	bcs.w	8000f2c <__udivmoddi4+0x294>
 8000d1e:	42a5      	cmp	r5, r4
 8000d20:	f240 8104 	bls.w	8000f2c <__udivmoddi4+0x294>
 8000d24:	4464      	add	r4, ip
 8000d26:	3802      	subs	r0, #2
 8000d28:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000d2c:	1b64      	subs	r4, r4, r5
 8000d2e:	2100      	movs	r1, #0
 8000d30:	b11e      	cbz	r6, 8000d3a <__udivmoddi4+0xa2>
 8000d32:	40dc      	lsrs	r4, r3
 8000d34:	2300      	movs	r3, #0
 8000d36:	e9c6 4300 	strd	r4, r3, [r6]
 8000d3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d3e:	428b      	cmp	r3, r1
 8000d40:	d908      	bls.n	8000d54 <__udivmoddi4+0xbc>
 8000d42:	2e00      	cmp	r6, #0
 8000d44:	f000 80ed 	beq.w	8000f22 <__udivmoddi4+0x28a>
 8000d48:	2100      	movs	r1, #0
 8000d4a:	e9c6 0500 	strd	r0, r5, [r6]
 8000d4e:	4608      	mov	r0, r1
 8000d50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d54:	fab3 f183 	clz	r1, r3
 8000d58:	2900      	cmp	r1, #0
 8000d5a:	d149      	bne.n	8000df0 <__udivmoddi4+0x158>
 8000d5c:	42ab      	cmp	r3, r5
 8000d5e:	d302      	bcc.n	8000d66 <__udivmoddi4+0xce>
 8000d60:	4282      	cmp	r2, r0
 8000d62:	f200 80f8 	bhi.w	8000f56 <__udivmoddi4+0x2be>
 8000d66:	1a84      	subs	r4, r0, r2
 8000d68:	eb65 0203 	sbc.w	r2, r5, r3
 8000d6c:	2001      	movs	r0, #1
 8000d6e:	4617      	mov	r7, r2
 8000d70:	2e00      	cmp	r6, #0
 8000d72:	d0e2      	beq.n	8000d3a <__udivmoddi4+0xa2>
 8000d74:	e9c6 4700 	strd	r4, r7, [r6]
 8000d78:	e7df      	b.n	8000d3a <__udivmoddi4+0xa2>
 8000d7a:	b902      	cbnz	r2, 8000d7e <__udivmoddi4+0xe6>
 8000d7c:	deff      	udf	#255	; 0xff
 8000d7e:	fab2 f382 	clz	r3, r2
 8000d82:	2b00      	cmp	r3, #0
 8000d84:	f040 8090 	bne.w	8000ea8 <__udivmoddi4+0x210>
 8000d88:	1a8a      	subs	r2, r1, r2
 8000d8a:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000d8e:	fa1f fe8c 	uxth.w	lr, ip
 8000d92:	2101      	movs	r1, #1
 8000d94:	fbb2 f5f7 	udiv	r5, r2, r7
 8000d98:	fb07 2015 	mls	r0, r7, r5, r2
 8000d9c:	0c22      	lsrs	r2, r4, #16
 8000d9e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000da2:	fb0e f005 	mul.w	r0, lr, r5
 8000da6:	4290      	cmp	r0, r2
 8000da8:	d908      	bls.n	8000dbc <__udivmoddi4+0x124>
 8000daa:	eb1c 0202 	adds.w	r2, ip, r2
 8000dae:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8000db2:	d202      	bcs.n	8000dba <__udivmoddi4+0x122>
 8000db4:	4290      	cmp	r0, r2
 8000db6:	f200 80cb 	bhi.w	8000f50 <__udivmoddi4+0x2b8>
 8000dba:	4645      	mov	r5, r8
 8000dbc:	1a12      	subs	r2, r2, r0
 8000dbe:	b2a4      	uxth	r4, r4
 8000dc0:	fbb2 f0f7 	udiv	r0, r2, r7
 8000dc4:	fb07 2210 	mls	r2, r7, r0, r2
 8000dc8:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000dcc:	fb0e fe00 	mul.w	lr, lr, r0
 8000dd0:	45a6      	cmp	lr, r4
 8000dd2:	d908      	bls.n	8000de6 <__udivmoddi4+0x14e>
 8000dd4:	eb1c 0404 	adds.w	r4, ip, r4
 8000dd8:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8000ddc:	d202      	bcs.n	8000de4 <__udivmoddi4+0x14c>
 8000dde:	45a6      	cmp	lr, r4
 8000de0:	f200 80bb 	bhi.w	8000f5a <__udivmoddi4+0x2c2>
 8000de4:	4610      	mov	r0, r2
 8000de6:	eba4 040e 	sub.w	r4, r4, lr
 8000dea:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000dee:	e79f      	b.n	8000d30 <__udivmoddi4+0x98>
 8000df0:	f1c1 0720 	rsb	r7, r1, #32
 8000df4:	408b      	lsls	r3, r1
 8000df6:	fa22 fc07 	lsr.w	ip, r2, r7
 8000dfa:	ea4c 0c03 	orr.w	ip, ip, r3
 8000dfe:	fa05 f401 	lsl.w	r4, r5, r1
 8000e02:	fa20 f307 	lsr.w	r3, r0, r7
 8000e06:	40fd      	lsrs	r5, r7
 8000e08:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000e0c:	4323      	orrs	r3, r4
 8000e0e:	fbb5 f8f9 	udiv	r8, r5, r9
 8000e12:	fa1f fe8c 	uxth.w	lr, ip
 8000e16:	fb09 5518 	mls	r5, r9, r8, r5
 8000e1a:	0c1c      	lsrs	r4, r3, #16
 8000e1c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000e20:	fb08 f50e 	mul.w	r5, r8, lr
 8000e24:	42a5      	cmp	r5, r4
 8000e26:	fa02 f201 	lsl.w	r2, r2, r1
 8000e2a:	fa00 f001 	lsl.w	r0, r0, r1
 8000e2e:	d90b      	bls.n	8000e48 <__udivmoddi4+0x1b0>
 8000e30:	eb1c 0404 	adds.w	r4, ip, r4
 8000e34:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8000e38:	f080 8088 	bcs.w	8000f4c <__udivmoddi4+0x2b4>
 8000e3c:	42a5      	cmp	r5, r4
 8000e3e:	f240 8085 	bls.w	8000f4c <__udivmoddi4+0x2b4>
 8000e42:	f1a8 0802 	sub.w	r8, r8, #2
 8000e46:	4464      	add	r4, ip
 8000e48:	1b64      	subs	r4, r4, r5
 8000e4a:	b29d      	uxth	r5, r3
 8000e4c:	fbb4 f3f9 	udiv	r3, r4, r9
 8000e50:	fb09 4413 	mls	r4, r9, r3, r4
 8000e54:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000e58:	fb03 fe0e 	mul.w	lr, r3, lr
 8000e5c:	45a6      	cmp	lr, r4
 8000e5e:	d908      	bls.n	8000e72 <__udivmoddi4+0x1da>
 8000e60:	eb1c 0404 	adds.w	r4, ip, r4
 8000e64:	f103 35ff 	add.w	r5, r3, #4294967295	; 0xffffffff
 8000e68:	d26c      	bcs.n	8000f44 <__udivmoddi4+0x2ac>
 8000e6a:	45a6      	cmp	lr, r4
 8000e6c:	d96a      	bls.n	8000f44 <__udivmoddi4+0x2ac>
 8000e6e:	3b02      	subs	r3, #2
 8000e70:	4464      	add	r4, ip
 8000e72:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000e76:	fba3 9502 	umull	r9, r5, r3, r2
 8000e7a:	eba4 040e 	sub.w	r4, r4, lr
 8000e7e:	42ac      	cmp	r4, r5
 8000e80:	46c8      	mov	r8, r9
 8000e82:	46ae      	mov	lr, r5
 8000e84:	d356      	bcc.n	8000f34 <__udivmoddi4+0x29c>
 8000e86:	d053      	beq.n	8000f30 <__udivmoddi4+0x298>
 8000e88:	b156      	cbz	r6, 8000ea0 <__udivmoddi4+0x208>
 8000e8a:	ebb0 0208 	subs.w	r2, r0, r8
 8000e8e:	eb64 040e 	sbc.w	r4, r4, lr
 8000e92:	fa04 f707 	lsl.w	r7, r4, r7
 8000e96:	40ca      	lsrs	r2, r1
 8000e98:	40cc      	lsrs	r4, r1
 8000e9a:	4317      	orrs	r7, r2
 8000e9c:	e9c6 7400 	strd	r7, r4, [r6]
 8000ea0:	4618      	mov	r0, r3
 8000ea2:	2100      	movs	r1, #0
 8000ea4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ea8:	f1c3 0120 	rsb	r1, r3, #32
 8000eac:	fa02 fc03 	lsl.w	ip, r2, r3
 8000eb0:	fa20 f201 	lsr.w	r2, r0, r1
 8000eb4:	fa25 f101 	lsr.w	r1, r5, r1
 8000eb8:	409d      	lsls	r5, r3
 8000eba:	432a      	orrs	r2, r5
 8000ebc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ec0:	fa1f fe8c 	uxth.w	lr, ip
 8000ec4:	fbb1 f0f7 	udiv	r0, r1, r7
 8000ec8:	fb07 1510 	mls	r5, r7, r0, r1
 8000ecc:	0c11      	lsrs	r1, r2, #16
 8000ece:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000ed2:	fb00 f50e 	mul.w	r5, r0, lr
 8000ed6:	428d      	cmp	r5, r1
 8000ed8:	fa04 f403 	lsl.w	r4, r4, r3
 8000edc:	d908      	bls.n	8000ef0 <__udivmoddi4+0x258>
 8000ede:	eb1c 0101 	adds.w	r1, ip, r1
 8000ee2:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 8000ee6:	d22f      	bcs.n	8000f48 <__udivmoddi4+0x2b0>
 8000ee8:	428d      	cmp	r5, r1
 8000eea:	d92d      	bls.n	8000f48 <__udivmoddi4+0x2b0>
 8000eec:	3802      	subs	r0, #2
 8000eee:	4461      	add	r1, ip
 8000ef0:	1b49      	subs	r1, r1, r5
 8000ef2:	b292      	uxth	r2, r2
 8000ef4:	fbb1 f5f7 	udiv	r5, r1, r7
 8000ef8:	fb07 1115 	mls	r1, r7, r5, r1
 8000efc:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f00:	fb05 f10e 	mul.w	r1, r5, lr
 8000f04:	4291      	cmp	r1, r2
 8000f06:	d908      	bls.n	8000f1a <__udivmoddi4+0x282>
 8000f08:	eb1c 0202 	adds.w	r2, ip, r2
 8000f0c:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8000f10:	d216      	bcs.n	8000f40 <__udivmoddi4+0x2a8>
 8000f12:	4291      	cmp	r1, r2
 8000f14:	d914      	bls.n	8000f40 <__udivmoddi4+0x2a8>
 8000f16:	3d02      	subs	r5, #2
 8000f18:	4462      	add	r2, ip
 8000f1a:	1a52      	subs	r2, r2, r1
 8000f1c:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000f20:	e738      	b.n	8000d94 <__udivmoddi4+0xfc>
 8000f22:	4631      	mov	r1, r6
 8000f24:	4630      	mov	r0, r6
 8000f26:	e708      	b.n	8000d3a <__udivmoddi4+0xa2>
 8000f28:	4639      	mov	r1, r7
 8000f2a:	e6e6      	b.n	8000cfa <__udivmoddi4+0x62>
 8000f2c:	4610      	mov	r0, r2
 8000f2e:	e6fb      	b.n	8000d28 <__udivmoddi4+0x90>
 8000f30:	4548      	cmp	r0, r9
 8000f32:	d2a9      	bcs.n	8000e88 <__udivmoddi4+0x1f0>
 8000f34:	ebb9 0802 	subs.w	r8, r9, r2
 8000f38:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000f3c:	3b01      	subs	r3, #1
 8000f3e:	e7a3      	b.n	8000e88 <__udivmoddi4+0x1f0>
 8000f40:	4645      	mov	r5, r8
 8000f42:	e7ea      	b.n	8000f1a <__udivmoddi4+0x282>
 8000f44:	462b      	mov	r3, r5
 8000f46:	e794      	b.n	8000e72 <__udivmoddi4+0x1da>
 8000f48:	4640      	mov	r0, r8
 8000f4a:	e7d1      	b.n	8000ef0 <__udivmoddi4+0x258>
 8000f4c:	46d0      	mov	r8, sl
 8000f4e:	e77b      	b.n	8000e48 <__udivmoddi4+0x1b0>
 8000f50:	3d02      	subs	r5, #2
 8000f52:	4462      	add	r2, ip
 8000f54:	e732      	b.n	8000dbc <__udivmoddi4+0x124>
 8000f56:	4608      	mov	r0, r1
 8000f58:	e70a      	b.n	8000d70 <__udivmoddi4+0xd8>
 8000f5a:	4464      	add	r4, ip
 8000f5c:	3802      	subs	r0, #2
 8000f5e:	e742      	b.n	8000de6 <__udivmoddi4+0x14e>

08000f60 <__aeabi_idiv0>:
 8000f60:	4770      	bx	lr
 8000f62:	bf00      	nop

08000f64 <I2C_Start>:
//    -- Automatically generate a STOP condition after all bytes have been transmitted 
// Direction = 0: Master requests a write transfer
// Direction = 1: Master requests a read transfer
//=============================================================================== 

int8_t I2C_Start(I2C_TypeDef * I2Cx, uint32_t DevAddress, uint8_t Size, uint8_t Direction) {	
 8000f64:	b480      	push	{r7}
 8000f66:	b087      	sub	sp, #28
 8000f68:	af00      	add	r7, sp, #0
 8000f6a:	60f8      	str	r0, [r7, #12]
 8000f6c:	60b9      	str	r1, [r7, #8]
 8000f6e:	4611      	mov	r1, r2
 8000f70:	461a      	mov	r2, r3
 8000f72:	460b      	mov	r3, r1
 8000f74:	71fb      	strb	r3, [r7, #7]
 8000f76:	4613      	mov	r3, r2
 8000f78:	71bb      	strb	r3, [r7, #6]
	
	// Direction = 0: Master requests a write transfer
	// Direction = 1: Master requests a read transfer
	
	uint32_t tmpreg = 0;
 8000f7a:	2300      	movs	r3, #0
 8000f7c:	617b      	str	r3, [r7, #20]
	
	// This bit is set by software, and cleared by hardware after the Start followed by the address
	// sequence is sent, by an arbitration loss, by a timeout error detection, or when PE = 0.
	tmpreg = I2Cx->CR2;
 8000f7e:	68fb      	ldr	r3, [r7, #12]
 8000f80:	685b      	ldr	r3, [r3, #4]
 8000f82:	617b      	str	r3, [r7, #20]
	
	tmpreg &= (uint32_t)~((uint32_t)(I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | I2C_CR2_RD_WRN | I2C_CR2_START | I2C_CR2_STOP));
 8000f84:	697a      	ldr	r2, [r7, #20]
 8000f86:	4b14      	ldr	r3, [pc, #80]	; (8000fd8 <I2C_Start+0x74>)
 8000f88:	4013      	ands	r3, r2
 8000f8a:	617b      	str	r3, [r7, #20]
	
	if (Direction == READ_FROM_SLAVE)
 8000f8c:	79bb      	ldrb	r3, [r7, #6]
 8000f8e:	2b01      	cmp	r3, #1
 8000f90:	d104      	bne.n	8000f9c <I2C_Start+0x38>
		tmpreg |= I2C_CR2_RD_WRN;  // Read from Slave
 8000f92:	697b      	ldr	r3, [r7, #20]
 8000f94:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000f98:	617b      	str	r3, [r7, #20]
 8000f9a:	e003      	b.n	8000fa4 <I2C_Start+0x40>
	else
		tmpreg &= ~I2C_CR2_RD_WRN; // Write to Slave
 8000f9c:	697b      	ldr	r3, [r7, #20]
 8000f9e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8000fa2:	617b      	str	r3, [r7, #20]
		
  tmpreg |= (uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | (((uint32_t)Size << 16 ) & I2C_CR2_NBYTES));
 8000fa4:	68bb      	ldr	r3, [r7, #8]
 8000fa6:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8000faa:	79fb      	ldrb	r3, [r7, #7]
 8000fac:	041b      	lsls	r3, r3, #16
 8000fae:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8000fb2:	4313      	orrs	r3, r2
 8000fb4:	697a      	ldr	r2, [r7, #20]
 8000fb6:	4313      	orrs	r3, r2
 8000fb8:	617b      	str	r3, [r7, #20]
	
	tmpreg |= I2C_CR2_START;
 8000fba:	697b      	ldr	r3, [r7, #20]
 8000fbc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000fc0:	617b      	str	r3, [r7, #20]
	// RELOAD
	// 0: The transfer is completed after the NBYTES data transfer (STOP or RESTART will follow).
	// 1: The transfer is not completed after the NBYTES data transfer (NBYTES will be reloaded).
	// tmpreg |= I2C_CR2_RELOAD;
	
	I2Cx->CR2 = tmpreg; 
 8000fc2:	68fb      	ldr	r3, [r7, #12]
 8000fc4:	697a      	ldr	r2, [r7, #20]
 8000fc6:	605a      	str	r2, [r3, #4]
//	}
//	
//	if ( (I2Cx->ISR & I2C_ISR_NACKF) == I2C_ISR_NACKF )
//		return -1;  // Failed
	
   	return 0;  // Success
 8000fc8:	2300      	movs	r3, #0
}
 8000fca:	4618      	mov	r0, r3
 8000fcc:	371c      	adds	r7, #28
 8000fce:	46bd      	mov	sp, r7
 8000fd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fd4:	4770      	bx	lr
 8000fd6:	bf00      	nop
 8000fd8:	fc009800 	.word	0xfc009800

08000fdc <I2C_Stop>:

//===============================================================================
//                           I2C Stop
//=============================================================================== 
void I2C_Stop(I2C_TypeDef * I2Cx){
 8000fdc:	b480      	push	{r7}
 8000fde:	b083      	sub	sp, #12
 8000fe0:	af00      	add	r7, sp, #0
 8000fe2:	6078      	str	r0, [r7, #4]
	// Master: Generate STOP bit after the current byte has been transferred 
	I2Cx->CR2 |= I2C_CR2_STOP;								
 8000fe4:	687b      	ldr	r3, [r7, #4]
 8000fe6:	685b      	ldr	r3, [r3, #4]
 8000fe8:	f443 4280 	orr.w	r2, r3, #16384	; 0x4000
 8000fec:	687b      	ldr	r3, [r7, #4]
 8000fee:	605a      	str	r2, [r3, #4]
	// Wait until STOPF flag is reset
	while( (I2Cx->ISR & I2C_ISR_STOPF) == 0 ); 
 8000ff0:	bf00      	nop
 8000ff2:	687b      	ldr	r3, [r7, #4]
 8000ff4:	699b      	ldr	r3, [r3, #24]
 8000ff6:	f003 0320 	and.w	r3, r3, #32
 8000ffa:	2b00      	cmp	r3, #0
 8000ffc:	d0f9      	beq.n	8000ff2 <I2C_Stop+0x16>
}
 8000ffe:	bf00      	nop
 8001000:	bf00      	nop
 8001002:	370c      	adds	r7, #12
 8001004:	46bd      	mov	sp, r7
 8001006:	f85d 7b04 	ldr.w	r7, [sp], #4
 800100a:	4770      	bx	lr

0800100c <I2C_WaitLineIdle>:

//===============================================================================
//                           Wait for the bus is ready
//=============================================================================== 
void I2C_WaitLineIdle(I2C_TypeDef * I2Cx){
 800100c:	b480      	push	{r7}
 800100e:	b083      	sub	sp, #12
 8001010:	af00      	add	r7, sp, #0
 8001012:	6078      	str	r0, [r7, #4]
	// Wait until I2C bus is ready
	while( (I2Cx->ISR & I2C_ISR_BUSY) == I2C_ISR_BUSY );	// If busy, wait
 8001014:	bf00      	nop
 8001016:	687b      	ldr	r3, [r7, #4]
 8001018:	699b      	ldr	r3, [r3, #24]
 800101a:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800101e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8001022:	d0f8      	beq.n	8001016 <I2C_WaitLineIdle+0xa>
}
 8001024:	bf00      	nop
 8001026:	bf00      	nop
 8001028:	370c      	adds	r7, #12
 800102a:	46bd      	mov	sp, r7
 800102c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001030:	4770      	bx	lr

08001032 <I2C_SendData>:

//===============================================================================
//                           I2C Send Data
//=============================================================================== 
int8_t I2C_SendData(I2C_TypeDef * I2Cx, uint8_t DeviceAddress, uint8_t *pData, uint8_t Size) {
 8001032:	b580      	push	{r7, lr}
 8001034:	b086      	sub	sp, #24
 8001036:	af00      	add	r7, sp, #0
 8001038:	60f8      	str	r0, [r7, #12]
 800103a:	607a      	str	r2, [r7, #4]
 800103c:	461a      	mov	r2, r3
 800103e:	460b      	mov	r3, r1
 8001040:	72fb      	strb	r3, [r7, #11]
 8001042:	4613      	mov	r3, r2
 8001044:	72bb      	strb	r3, [r7, #10]
	int i;
	
	if (Size <= 0 || pData == NULL) 
 8001046:	7abb      	ldrb	r3, [r7, #10]
 8001048:	2b00      	cmp	r3, #0
 800104a:	d002      	beq.n	8001052 <I2C_SendData+0x20>
 800104c:	687b      	ldr	r3, [r7, #4]
 800104e:	2b00      	cmp	r3, #0
 8001050:	d102      	bne.n	8001058 <I2C_SendData+0x26>
		return -1;
 8001052:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001056:	e040      	b.n	80010da <I2C_SendData+0xa8>
	
	I2C_WaitLineIdle(I2Cx);
 8001058:	68f8      	ldr	r0, [r7, #12]
 800105a:	f7ff ffd7 	bl	800100c <I2C_WaitLineIdle>
	
	if (I2C_Start(I2Cx, DeviceAddress, Size, WRITE_TO_SLAVE) < 0 )
 800105e:	7af9      	ldrb	r1, [r7, #11]
 8001060:	7aba      	ldrb	r2, [r7, #10]
 8001062:	2300      	movs	r3, #0
 8001064:	68f8      	ldr	r0, [r7, #12]
 8001066:	f7ff ff7d 	bl	8000f64 <I2C_Start>
 800106a:	4603      	mov	r3, r0
 800106c:	2b00      	cmp	r3, #0
 800106e:	da02      	bge.n	8001076 <I2C_SendData+0x44>
		return -1;
 8001070:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001074:	e031      	b.n	80010da <I2C_SendData+0xa8>
	// Send Data
	// Write the first data in DR register
	// while((I2Cx->ISR & I2C_ISR_TXE) == 0);
	// I2Cx->TXDR = pData[0] & I2C_TXDR_TXDATA;  

	for (i = 0; i < Size; i++) {
 8001076:	2300      	movs	r3, #0
 8001078:	617b      	str	r3, [r7, #20]
 800107a:	e010      	b.n	800109e <I2C_SendData+0x6c>
		// TXE is set by hardware when the I2C_TXDR register is empty. It is cleared when the next
		// data to be sent is written in the I2C_TXDR register.
		while( (I2Cx->ISR & I2C_ISR_TXE) == 0 ); 
 800107c:	bf00      	nop
 800107e:	68fb      	ldr	r3, [r7, #12]
 8001080:	699b      	ldr	r3, [r3, #24]
 8001082:	f003 0301 	and.w	r3, r3, #1
 8001086:	2b00      	cmp	r3, #0
 8001088:	d0f9      	beq.n	800107e <I2C_SendData+0x4c>
		// TXIS bit is set by hardware when the I2C_TXDR register is empty and the data to be
		// transmitted must be written in the I2C_TXDR register. It is cleared when the next data to be
		// sent is written in the I2C_TXDR register.
		// The TXIS flag is not set when a NACK is received.
		// while((I2Cx->ISR & I2C_ISR_TXIS) == 0 );
		I2Cx->TXDR = pData[i] & I2C_TXDR_TXDATA;  // TXE is cleared by writing to the TXDR register.
 800108a:	697b      	ldr	r3, [r7, #20]
 800108c:	687a      	ldr	r2, [r7, #4]
 800108e:	4413      	add	r3, r2
 8001090:	781b      	ldrb	r3, [r3, #0]
 8001092:	461a      	mov	r2, r3
 8001094:	68fb      	ldr	r3, [r7, #12]
 8001096:	629a      	str	r2, [r3, #40]	; 0x28
	for (i = 0; i < Size; i++) {
 8001098:	697b      	ldr	r3, [r7, #20]
 800109a:	3301      	adds	r3, #1
 800109c:	617b      	str	r3, [r7, #20]
 800109e:	7abb      	ldrb	r3, [r7, #10]
 80010a0:	697a      	ldr	r2, [r7, #20]
 80010a2:	429a      	cmp	r2, r3
 80010a4:	dbea      	blt.n	800107c <I2C_SendData+0x4a>
	}
	
	// Wait until TC flag is set 
	while((I2Cx->ISR & I2C_ISR_TC) == 0 && (I2Cx->ISR & I2C_ISR_NACKF) == 0);
 80010a6:	bf00      	nop
 80010a8:	68fb      	ldr	r3, [r7, #12]
 80010aa:	699b      	ldr	r3, [r3, #24]
 80010ac:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80010b0:	2b00      	cmp	r3, #0
 80010b2:	d105      	bne.n	80010c0 <I2C_SendData+0x8e>
 80010b4:	68fb      	ldr	r3, [r7, #12]
 80010b6:	699b      	ldr	r3, [r3, #24]
 80010b8:	f003 0310 	and.w	r3, r3, #16
 80010bc:	2b00      	cmp	r3, #0
 80010be:	d0f3      	beq.n	80010a8 <I2C_SendData+0x76>
	
	if ( (I2Cx->ISR & I2C_ISR_NACKF) != 0 )
 80010c0:	68fb      	ldr	r3, [r7, #12]
 80010c2:	699b      	ldr	r3, [r3, #24]
 80010c4:	f003 0310 	and.w	r3, r3, #16
 80010c8:	2b00      	cmp	r3, #0
 80010ca:	d002      	beq.n	80010d2 <I2C_SendData+0xa0>
		return -1;
 80010cc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80010d0:	e003      	b.n	80010da <I2C_SendData+0xa8>

	I2C_Stop(I2Cx);
 80010d2:	68f8      	ldr	r0, [r7, #12]
 80010d4:	f7ff ff82 	bl	8000fdc <I2C_Stop>
	return 0;
 80010d8:	2300      	movs	r3, #0
}
 80010da:	4618      	mov	r0, r3
 80010dc:	3718      	adds	r7, #24
 80010de:	46bd      	mov	sp, r7
 80010e0:	bd80      	pop	{r7, pc}

080010e2 <I2C1_EV_IRQHandler>:
	
	return 0;
}


void I2C1_EV_IRQHandler(void){
 80010e2:	b480      	push	{r7}
 80010e4:	af00      	add	r7, sp, #0
	// I2C1->ICR |= 
}
 80010e6:	bf00      	nop
 80010e8:	46bd      	mov	sp, r7
 80010ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010ee:	4770      	bx	lr

080010f0 <I2C1_ER_IRQHandler>:

void I2C1_ER_IRQHandler(void){
 80010f0:	b480      	push	{r7}
 80010f2:	af00      	add	r7, sp, #0
}
 80010f4:	bf00      	nop
 80010f6:	46bd      	mov	sp, r7
 80010f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010fc:	4770      	bx	lr

080010fe <SquareRoot>:
 *
 * \param[in] a_nInput - unsigned integer for which to find the square root
 *
 * \return Integer square root of the input value.
 */
static uint32_t SquareRoot(uint32_t a_nInput) {
 80010fe:	b480      	push	{r7}
 8001100:	b087      	sub	sp, #28
 8001102:	af00      	add	r7, sp, #0
 8001104:	6078      	str	r0, [r7, #4]
    uint32_t op  = a_nInput;
 8001106:	687b      	ldr	r3, [r7, #4]
 8001108:	617b      	str	r3, [r7, #20]
    uint32_t res = 0;
 800110a:	2300      	movs	r3, #0
 800110c:	613b      	str	r3, [r7, #16]
    uint32_t one = 1uL << 30; // The second-to-top bit is set: use 1u << 14 for uint16_t type; use 1uL<<30 for uint32_t type
 800110e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001112:	60fb      	str	r3, [r7, #12]

    // "one" starts at the highest power of four <= than the argument.
    while (one > op) {
 8001114:	e002      	b.n	800111c <SquareRoot+0x1e>
        one >>= 2;
 8001116:	68fb      	ldr	r3, [r7, #12]
 8001118:	089b      	lsrs	r3, r3, #2
 800111a:	60fb      	str	r3, [r7, #12]
    while (one > op) {
 800111c:	68fa      	ldr	r2, [r7, #12]
 800111e:	697b      	ldr	r3, [r7, #20]
 8001120:	429a      	cmp	r2, r3
 8001122:	d8f8      	bhi.n	8001116 <SquareRoot+0x18>
    }

    while (one != 0) {
 8001124:	e016      	b.n	8001154 <SquareRoot+0x56>
        if (op >= res + one) {
 8001126:	693a      	ldr	r2, [r7, #16]
 8001128:	68fb      	ldr	r3, [r7, #12]
 800112a:	4413      	add	r3, r2
 800112c:	697a      	ldr	r2, [r7, #20]
 800112e:	429a      	cmp	r2, r3
 8001130:	d30a      	bcc.n	8001148 <SquareRoot+0x4a>
            op  = op - (res + one);
 8001132:	693a      	ldr	r2, [r7, #16]
 8001134:	68fb      	ldr	r3, [r7, #12]
 8001136:	4413      	add	r3, r2
 8001138:	697a      	ldr	r2, [r7, #20]
 800113a:	1ad3      	subs	r3, r2, r3
 800113c:	617b      	str	r3, [r7, #20]
            res = res +  2 * one;
 800113e:	68fb      	ldr	r3, [r7, #12]
 8001140:	005b      	lsls	r3, r3, #1
 8001142:	693a      	ldr	r2, [r7, #16]
 8001144:	4413      	add	r3, r2
 8001146:	613b      	str	r3, [r7, #16]
        }
        res >>= 1;
 8001148:	693b      	ldr	r3, [r7, #16]
 800114a:	085b      	lsrs	r3, r3, #1
 800114c:	613b      	str	r3, [r7, #16]
        one >>= 2;
 800114e:	68fb      	ldr	r3, [r7, #12]
 8001150:	089b      	lsrs	r3, r3, #2
 8001152:	60fb      	str	r3, [r7, #12]
    while (one != 0) {
 8001154:	68fb      	ldr	r3, [r7, #12]
 8001156:	2b00      	cmp	r3, #0
 8001158:	d1e5      	bne.n	8001126 <SquareRoot+0x28>
    }
    return res;
 800115a:	693b      	ldr	r3, [r7, #16]
}
 800115c:	4618      	mov	r0, r3
 800115e:	371c      	adds	r7, #28
 8001160:	46bd      	mov	sp, r7
 8001162:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001166:	4770      	bx	lr

08001168 <get_autocorr_peak_stats>:
//take a look at the original autocorrelation signal at index i and see if
//its a real peak or if its just a fake "noisy" peak corresponding to
//non-walking. basically just count the number of points of the
//autocorrelation peak to the right and left of the peak. this function gets
//the number of points to the right and left of the peak, as well as the delta amplitude
static void get_autocorr_peak_stats(int64_t *autocorr_buff, uint8_t *neg_slope_count, int64_t *delta_amplitude_right, uint8_t *pos_slope_count, int64_t *delta_amplitude_left, uint8_t peak_ind) {
 8001168:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
 800116c:	b088      	sub	sp, #32
 800116e:	af00      	add	r7, sp, #0
 8001170:	6178      	str	r0, [r7, #20]
 8001172:	6139      	str	r1, [r7, #16]
 8001174:	60fa      	str	r2, [r7, #12]
 8001176:	60bb      	str	r3, [r7, #8]

    //first look to the right of the peak. walk forward until the slope begins decreasing
    uint8_t  neg_slope_ind = peak_ind;
 8001178:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 800117c:	77fb      	strb	r3, [r7, #31]
    uint16_t loop_limit    = NUM_AUTOCORR_LAGS-1;
 800117e:	2331      	movs	r3, #49	; 0x31
 8001180:	83bb      	strh	r3, [r7, #28]
    while ((autocorr_buff[neg_slope_ind+1] - autocorr_buff[neg_slope_ind] < 0) && (neg_slope_ind < loop_limit)) {
 8001182:	e008      	b.n	8001196 <get_autocorr_peak_stats+0x2e>
        *neg_slope_count = *neg_slope_count + 1;
 8001184:	693b      	ldr	r3, [r7, #16]
 8001186:	781b      	ldrb	r3, [r3, #0]
 8001188:	3301      	adds	r3, #1
 800118a:	b2da      	uxtb	r2, r3
 800118c:	693b      	ldr	r3, [r7, #16]
 800118e:	701a      	strb	r2, [r3, #0]
        neg_slope_ind    = neg_slope_ind + 1;
 8001190:	7ffb      	ldrb	r3, [r7, #31]
 8001192:	3301      	adds	r3, #1
 8001194:	77fb      	strb	r3, [r7, #31]
    while ((autocorr_buff[neg_slope_ind+1] - autocorr_buff[neg_slope_ind] < 0) && (neg_slope_ind < loop_limit)) {
 8001196:	7ffb      	ldrb	r3, [r7, #31]
 8001198:	3301      	adds	r3, #1
 800119a:	00db      	lsls	r3, r3, #3
 800119c:	697a      	ldr	r2, [r7, #20]
 800119e:	4413      	add	r3, r2
 80011a0:	e9d3 0100 	ldrd	r0, r1, [r3]
 80011a4:	7ffb      	ldrb	r3, [r7, #31]
 80011a6:	00db      	lsls	r3, r3, #3
 80011a8:	697a      	ldr	r2, [r7, #20]
 80011aa:	4413      	add	r3, r2
 80011ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011b0:	1a86      	subs	r6, r0, r2
 80011b2:	603e      	str	r6, [r7, #0]
 80011b4:	eb61 0303 	sbc.w	r3, r1, r3
 80011b8:	607b      	str	r3, [r7, #4]
 80011ba:	687b      	ldr	r3, [r7, #4]
 80011bc:	2b00      	cmp	r3, #0
 80011be:	da04      	bge.n	80011ca <get_autocorr_peak_stats+0x62>
 80011c0:	7ffb      	ldrb	r3, [r7, #31]
 80011c2:	b29b      	uxth	r3, r3
 80011c4:	8bba      	ldrh	r2, [r7, #28]
 80011c6:	429a      	cmp	r2, r3
 80011c8:	d8dc      	bhi.n	8001184 <get_autocorr_peak_stats+0x1c>
    }

    //get the delta amplitude between peak and right trough
    *delta_amplitude_right = autocorr_buff[peak_ind] - autocorr_buff[neg_slope_ind];
 80011ca:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 80011ce:	00db      	lsls	r3, r3, #3
 80011d0:	697a      	ldr	r2, [r7, #20]
 80011d2:	4413      	add	r3, r2
 80011d4:	e9d3 0100 	ldrd	r0, r1, [r3]
 80011d8:	7ffb      	ldrb	r3, [r7, #31]
 80011da:	00db      	lsls	r3, r3, #3
 80011dc:	697a      	ldr	r2, [r7, #20]
 80011de:	4413      	add	r3, r2
 80011e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011e4:	ebb0 0a02 	subs.w	sl, r0, r2
 80011e8:	eb61 0b03 	sbc.w	fp, r1, r3
 80011ec:	68fb      	ldr	r3, [r7, #12]
 80011ee:	e9c3 ab00 	strd	sl, fp, [r3]

    //next look to the left of the peak. walk backward until the slope begins increasing
    uint8_t pos_slope_ind = peak_ind;
 80011f2:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 80011f6:	77bb      	strb	r3, [r7, #30]
    loop_limit    = 0;
 80011f8:	2300      	movs	r3, #0
 80011fa:	83bb      	strh	r3, [r7, #28]
    while ((autocorr_buff[pos_slope_ind] - autocorr_buff[pos_slope_ind-1] > 0) && (pos_slope_ind > loop_limit)) {
 80011fc:	e008      	b.n	8001210 <get_autocorr_peak_stats+0xa8>
        *pos_slope_count = *pos_slope_count + 1;
 80011fe:	68bb      	ldr	r3, [r7, #8]
 8001200:	781b      	ldrb	r3, [r3, #0]
 8001202:	3301      	adds	r3, #1
 8001204:	b2da      	uxtb	r2, r3
 8001206:	68bb      	ldr	r3, [r7, #8]
 8001208:	701a      	strb	r2, [r3, #0]
        pos_slope_ind    = pos_slope_ind - 1;
 800120a:	7fbb      	ldrb	r3, [r7, #30]
 800120c:	3b01      	subs	r3, #1
 800120e:	77bb      	strb	r3, [r7, #30]
    while ((autocorr_buff[pos_slope_ind] - autocorr_buff[pos_slope_ind-1] > 0) && (pos_slope_ind > loop_limit)) {
 8001210:	7fbb      	ldrb	r3, [r7, #30]
 8001212:	00db      	lsls	r3, r3, #3
 8001214:	697a      	ldr	r2, [r7, #20]
 8001216:	4413      	add	r3, r2
 8001218:	e9d3 0100 	ldrd	r0, r1, [r3]
 800121c:	7fbb      	ldrb	r3, [r7, #30]
 800121e:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 8001222:	3b01      	subs	r3, #1
 8001224:	00db      	lsls	r3, r3, #3
 8001226:	697a      	ldr	r2, [r7, #20]
 8001228:	4413      	add	r3, r2
 800122a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800122e:	1a84      	subs	r4, r0, r2
 8001230:	eb61 0503 	sbc.w	r5, r1, r3
 8001234:	2c01      	cmp	r4, #1
 8001236:	f175 0300 	sbcs.w	r3, r5, #0
 800123a:	db04      	blt.n	8001246 <get_autocorr_peak_stats+0xde>
 800123c:	7fbb      	ldrb	r3, [r7, #30]
 800123e:	b29b      	uxth	r3, r3
 8001240:	8bba      	ldrh	r2, [r7, #28]
 8001242:	429a      	cmp	r2, r3
 8001244:	d3db      	bcc.n	80011fe <get_autocorr_peak_stats+0x96>
    }

    //get the delta amplitude between the peak and the left trough
    *delta_amplitude_left = autocorr_buff[peak_ind] - autocorr_buff[pos_slope_ind];
 8001246:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 800124a:	00db      	lsls	r3, r3, #3
 800124c:	697a      	ldr	r2, [r7, #20]
 800124e:	4413      	add	r3, r2
 8001250:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001254:	7fbb      	ldrb	r3, [r7, #30]
 8001256:	00db      	lsls	r3, r3, #3
 8001258:	697a      	ldr	r2, [r7, #20]
 800125a:	4413      	add	r3, r2
 800125c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001260:	ebb0 0802 	subs.w	r8, r0, r2
 8001264:	eb61 0903 	sbc.w	r9, r1, r3
 8001268:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800126a:	e9c3 8900 	strd	r8, r9, [r3]
}
 800126e:	bf00      	nop
 8001270:	3720      	adds	r7, #32
 8001272:	46bd      	mov	sp, r7
 8001274:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8001278:	4770      	bx	lr

0800127a <get_precise_peakind>:


//use the original autocorrelation signal to hone in on the
//exact peak index. this corresponds to the point where the points to the
//left and right are less than the current point
static uint8_t get_precise_peakind(int64_t *autocorr_buff, uint8_t peak_ind) {
 800127a:	b480      	push	{r7}
 800127c:	b085      	sub	sp, #20
 800127e:	af00      	add	r7, sp, #0
 8001280:	6078      	str	r0, [r7, #4]
 8001282:	460b      	mov	r3, r1
 8001284:	70fb      	strb	r3, [r7, #3]
    uint8_t loop_limit = 0;
 8001286:	2300      	movs	r3, #0
 8001288:	73fb      	strb	r3, [r7, #15]
    if ((autocorr_buff[peak_ind] > autocorr_buff[peak_ind-1]) && (autocorr_buff[peak_ind] > autocorr_buff[peak_ind+1])) {
 800128a:	78fb      	ldrb	r3, [r7, #3]
 800128c:	00db      	lsls	r3, r3, #3
 800128e:	687a      	ldr	r2, [r7, #4]
 8001290:	4413      	add	r3, r2
 8001292:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001296:	78f9      	ldrb	r1, [r7, #3]
 8001298:	f101 5100 	add.w	r1, r1, #536870912	; 0x20000000
 800129c:	3901      	subs	r1, #1
 800129e:	00c9      	lsls	r1, r1, #3
 80012a0:	6878      	ldr	r0, [r7, #4]
 80012a2:	4401      	add	r1, r0
 80012a4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80012a8:	4290      	cmp	r0, r2
 80012aa:	eb71 0303 	sbcs.w	r3, r1, r3
 80012ae:	da11      	bge.n	80012d4 <get_precise_peakind+0x5a>
 80012b0:	78fb      	ldrb	r3, [r7, #3]
 80012b2:	00db      	lsls	r3, r3, #3
 80012b4:	687a      	ldr	r2, [r7, #4]
 80012b6:	4413      	add	r3, r2
 80012b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012bc:	78f9      	ldrb	r1, [r7, #3]
 80012be:	3101      	adds	r1, #1
 80012c0:	00c9      	lsls	r1, r1, #3
 80012c2:	6878      	ldr	r0, [r7, #4]
 80012c4:	4401      	add	r1, r0
 80012c6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80012ca:	4290      	cmp	r0, r2
 80012cc:	eb71 0303 	sbcs.w	r3, r1, r3
 80012d0:	f2c0 8087 	blt.w	80013e2 <get_precise_peakind+0x168>
        //peak_ind is perfectly set at the peak. nothing to do
    }
    else if ((autocorr_buff[peak_ind] > autocorr_buff[peak_ind+1]) && (autocorr_buff[peak_ind] < autocorr_buff[peak_ind-1])) {
 80012d4:	78fb      	ldrb	r3, [r7, #3]
 80012d6:	00db      	lsls	r3, r3, #3
 80012d8:	687a      	ldr	r2, [r7, #4]
 80012da:	4413      	add	r3, r2
 80012dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012e0:	78f9      	ldrb	r1, [r7, #3]
 80012e2:	3101      	adds	r1, #1
 80012e4:	00c9      	lsls	r1, r1, #3
 80012e6:	6878      	ldr	r0, [r7, #4]
 80012e8:	4401      	add	r1, r0
 80012ea:	e9d1 0100 	ldrd	r0, r1, [r1]
 80012ee:	4290      	cmp	r0, r2
 80012f0:	eb71 0303 	sbcs.w	r3, r1, r3
 80012f4:	da43      	bge.n	800137e <get_precise_peakind+0x104>
 80012f6:	78fb      	ldrb	r3, [r7, #3]
 80012f8:	00db      	lsls	r3, r3, #3
 80012fa:	687a      	ldr	r2, [r7, #4]
 80012fc:	4413      	add	r3, r2
 80012fe:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001302:	78fb      	ldrb	r3, [r7, #3]
 8001304:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 8001308:	3b01      	subs	r3, #1
 800130a:	00db      	lsls	r3, r3, #3
 800130c:	687a      	ldr	r2, [r7, #4]
 800130e:	4413      	add	r3, r2
 8001310:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001314:	4290      	cmp	r0, r2
 8001316:	eb71 0303 	sbcs.w	r3, r1, r3
 800131a:	da30      	bge.n	800137e <get_precise_peakind+0x104>
        //peak is to the left. keep moving in that direction
        loop_limit = 0;
 800131c:	2300      	movs	r3, #0
 800131e:	73fb      	strb	r3, [r7, #15]
        while ((autocorr_buff[peak_ind] > autocorr_buff[peak_ind+1]) && (autocorr_buff[peak_ind] < autocorr_buff[peak_ind-1]) && (loop_limit < 10)) {
 8001320:	e005      	b.n	800132e <get_precise_peakind+0xb4>
            peak_ind = peak_ind - 1;
 8001322:	78fb      	ldrb	r3, [r7, #3]
 8001324:	3b01      	subs	r3, #1
 8001326:	70fb      	strb	r3, [r7, #3]
            loop_limit++;
 8001328:	7bfb      	ldrb	r3, [r7, #15]
 800132a:	3301      	adds	r3, #1
 800132c:	73fb      	strb	r3, [r7, #15]
        while ((autocorr_buff[peak_ind] > autocorr_buff[peak_ind+1]) && (autocorr_buff[peak_ind] < autocorr_buff[peak_ind-1]) && (loop_limit < 10)) {
 800132e:	78fb      	ldrb	r3, [r7, #3]
 8001330:	00db      	lsls	r3, r3, #3
 8001332:	687a      	ldr	r2, [r7, #4]
 8001334:	4413      	add	r3, r2
 8001336:	e9d3 2300 	ldrd	r2, r3, [r3]
 800133a:	78f9      	ldrb	r1, [r7, #3]
 800133c:	3101      	adds	r1, #1
 800133e:	00c9      	lsls	r1, r1, #3
 8001340:	6878      	ldr	r0, [r7, #4]
 8001342:	4401      	add	r1, r0
 8001344:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001348:	4290      	cmp	r0, r2
 800134a:	eb71 0303 	sbcs.w	r3, r1, r3
 800134e:	da47      	bge.n	80013e0 <get_precise_peakind+0x166>
 8001350:	78fb      	ldrb	r3, [r7, #3]
 8001352:	00db      	lsls	r3, r3, #3
 8001354:	687a      	ldr	r2, [r7, #4]
 8001356:	4413      	add	r3, r2
 8001358:	e9d3 0100 	ldrd	r0, r1, [r3]
 800135c:	78fb      	ldrb	r3, [r7, #3]
 800135e:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 8001362:	3b01      	subs	r3, #1
 8001364:	00db      	lsls	r3, r3, #3
 8001366:	687a      	ldr	r2, [r7, #4]
 8001368:	4413      	add	r3, r2
 800136a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800136e:	4290      	cmp	r0, r2
 8001370:	eb71 0303 	sbcs.w	r3, r1, r3
 8001374:	da34      	bge.n	80013e0 <get_precise_peakind+0x166>
 8001376:	7bfb      	ldrb	r3, [r7, #15]
 8001378:	2b09      	cmp	r3, #9
 800137a:	d9d2      	bls.n	8001322 <get_precise_peakind+0xa8>
    else if ((autocorr_buff[peak_ind] > autocorr_buff[peak_ind+1]) && (autocorr_buff[peak_ind] < autocorr_buff[peak_ind-1])) {
 800137c:	e030      	b.n	80013e0 <get_precise_peakind+0x166>
        }
    }
    else {
        //peak is to the right. keep moving in that direction
        loop_limit = 0;
 800137e:	2300      	movs	r3, #0
 8001380:	73fb      	strb	r3, [r7, #15]
        while ((autocorr_buff[peak_ind] > autocorr_buff[peak_ind-1]) && (autocorr_buff[peak_ind] < autocorr_buff[peak_ind+1]) && (loop_limit < 10)) {
 8001382:	e005      	b.n	8001390 <get_precise_peakind+0x116>
            peak_ind = peak_ind + 1;
 8001384:	78fb      	ldrb	r3, [r7, #3]
 8001386:	3301      	adds	r3, #1
 8001388:	70fb      	strb	r3, [r7, #3]
            loop_limit++;
 800138a:	7bfb      	ldrb	r3, [r7, #15]
 800138c:	3301      	adds	r3, #1
 800138e:	73fb      	strb	r3, [r7, #15]
        while ((autocorr_buff[peak_ind] > autocorr_buff[peak_ind-1]) && (autocorr_buff[peak_ind] < autocorr_buff[peak_ind+1]) && (loop_limit < 10)) {
 8001390:	78fb      	ldrb	r3, [r7, #3]
 8001392:	00db      	lsls	r3, r3, #3
 8001394:	687a      	ldr	r2, [r7, #4]
 8001396:	4413      	add	r3, r2
 8001398:	e9d3 2300 	ldrd	r2, r3, [r3]
 800139c:	78f9      	ldrb	r1, [r7, #3]
 800139e:	f101 5100 	add.w	r1, r1, #536870912	; 0x20000000
 80013a2:	3901      	subs	r1, #1
 80013a4:	00c9      	lsls	r1, r1, #3
 80013a6:	6878      	ldr	r0, [r7, #4]
 80013a8:	4401      	add	r1, r0
 80013aa:	e9d1 0100 	ldrd	r0, r1, [r1]
 80013ae:	4290      	cmp	r0, r2
 80013b0:	eb71 0303 	sbcs.w	r3, r1, r3
 80013b4:	da15      	bge.n	80013e2 <get_precise_peakind+0x168>
 80013b6:	78fb      	ldrb	r3, [r7, #3]
 80013b8:	00db      	lsls	r3, r3, #3
 80013ba:	687a      	ldr	r2, [r7, #4]
 80013bc:	4413      	add	r3, r2
 80013be:	e9d3 0100 	ldrd	r0, r1, [r3]
 80013c2:	78fb      	ldrb	r3, [r7, #3]
 80013c4:	3301      	adds	r3, #1
 80013c6:	00db      	lsls	r3, r3, #3
 80013c8:	687a      	ldr	r2, [r7, #4]
 80013ca:	4413      	add	r3, r2
 80013cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013d0:	4290      	cmp	r0, r2
 80013d2:	eb71 0303 	sbcs.w	r3, r1, r3
 80013d6:	da04      	bge.n	80013e2 <get_precise_peakind+0x168>
 80013d8:	7bfb      	ldrb	r3, [r7, #15]
 80013da:	2b09      	cmp	r3, #9
 80013dc:	d9d2      	bls.n	8001384 <get_precise_peakind+0x10a>
 80013de:	e000      	b.n	80013e2 <get_precise_peakind+0x168>
    else if ((autocorr_buff[peak_ind] > autocorr_buff[peak_ind+1]) && (autocorr_buff[peak_ind] < autocorr_buff[peak_ind-1])) {
 80013e0:	bf00      	nop
        }
    }
    return peak_ind;
 80013e2:	78fb      	ldrb	r3, [r7, #3]
}
 80013e4:	4618      	mov	r0, r3
 80013e6:	3714      	adds	r7, #20
 80013e8:	46bd      	mov	sp, r7
 80013ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013ee:	4770      	bx	lr

080013f0 <derivative>:


//calculate deriviative via FIR filter
static void derivative(int64_t *autocorr_buff, int64_t *deriv) {
 80013f0:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80013f4:	b086      	sub	sp, #24
 80013f6:	af00      	add	r7, sp, #0
 80013f8:	6078      	str	r0, [r7, #4]
 80013fa:	6039      	str	r1, [r7, #0]

    uint8_t n          = 0;
 80013fc:	2100      	movs	r1, #0
 80013fe:	75f9      	strb	r1, [r7, #23]
    uint8_t i          = 0;
 8001400:	2100      	movs	r1, #0
 8001402:	75b9      	strb	r1, [r7, #22]
    int64_t temp_deriv = 0;
 8001404:	f04f 0000 	mov.w	r0, #0
 8001408:	f04f 0100 	mov.w	r1, #0
 800140c:	e9c7 0102 	strd	r0, r1, [r7, #8]
    for (n = 0; n < NUM_AUTOCORR_LAGS; n++) {
 8001410:	2100      	movs	r1, #0
 8001412:	75f9      	strb	r1, [r7, #23]
 8001414:	e03e      	b.n	8001494 <derivative+0xa4>
        temp_deriv = 0;
 8001416:	f04f 0000 	mov.w	r0, #0
 800141a:	f04f 0100 	mov.w	r1, #0
 800141e:	e9c7 0102 	strd	r0, r1, [r7, #8]
        for (i = 0; i < DERIV_FILT_LEN; i++) {
 8001422:	2100      	movs	r1, #0
 8001424:	75b9      	strb	r1, [r7, #22]
 8001426:	e027      	b.n	8001478 <derivative+0x88>
            if (n-i >= 0) {     //handle the case when n < filter length
 8001428:	7df8      	ldrb	r0, [r7, #23]
 800142a:	7db9      	ldrb	r1, [r7, #22]
 800142c:	1a41      	subs	r1, r0, r1
 800142e:	2900      	cmp	r1, #0
 8001430:	db1f      	blt.n	8001472 <derivative+0x82>
                temp_deriv += deriv_coeffs[i]*autocorr_buff[n-i];
 8001432:	7db9      	ldrb	r1, [r7, #22]
 8001434:	481c      	ldr	r0, [pc, #112]	; (80014a8 <derivative+0xb8>)
 8001436:	5641      	ldrsb	r1, [r0, r1]
 8001438:	b249      	sxtb	r1, r1
 800143a:	17c8      	asrs	r0, r1, #31
 800143c:	460c      	mov	r4, r1
 800143e:	4605      	mov	r5, r0
 8001440:	7df8      	ldrb	r0, [r7, #23]
 8001442:	7db9      	ldrb	r1, [r7, #22]
 8001444:	1a41      	subs	r1, r0, r1
 8001446:	00c9      	lsls	r1, r1, #3
 8001448:	6878      	ldr	r0, [r7, #4]
 800144a:	4401      	add	r1, r0
 800144c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001450:	fb00 fc05 	mul.w	ip, r0, r5
 8001454:	fb04 f601 	mul.w	r6, r4, r1
 8001458:	4466      	add	r6, ip
 800145a:	fba4 2300 	umull	r2, r3, r4, r0
 800145e:	18f1      	adds	r1, r6, r3
 8001460:	460b      	mov	r3, r1
 8001462:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001466:	eb10 0802 	adds.w	r8, r0, r2
 800146a:	eb41 0903 	adc.w	r9, r1, r3
 800146e:	e9c7 8902 	strd	r8, r9, [r7, #8]
        for (i = 0; i < DERIV_FILT_LEN; i++) {
 8001472:	7db9      	ldrb	r1, [r7, #22]
 8001474:	3101      	adds	r1, #1
 8001476:	75b9      	strb	r1, [r7, #22]
 8001478:	7db9      	ldrb	r1, [r7, #22]
 800147a:	2904      	cmp	r1, #4
 800147c:	d9d4      	bls.n	8001428 <derivative+0x38>
            }
        }
        deriv[n] = temp_deriv;
 800147e:	7df9      	ldrb	r1, [r7, #23]
 8001480:	00c9      	lsls	r1, r1, #3
 8001482:	6838      	ldr	r0, [r7, #0]
 8001484:	1846      	adds	r6, r0, r1
 8001486:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800148a:	e9c6 0100 	strd	r0, r1, [r6]
    for (n = 0; n < NUM_AUTOCORR_LAGS; n++) {
 800148e:	7df9      	ldrb	r1, [r7, #23]
 8001490:	3101      	adds	r1, #1
 8001492:	75f9      	strb	r1, [r7, #23]
 8001494:	7df9      	ldrb	r1, [r7, #23]
 8001496:	2931      	cmp	r1, #49	; 0x31
 8001498:	d9bd      	bls.n	8001416 <derivative+0x26>
    }
}
 800149a:	bf00      	nop
 800149c:	bf00      	nop
 800149e:	3718      	adds	r7, #24
 80014a0:	46bd      	mov	sp, r7
 80014a2:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80014a6:	4770      	bx	lr
 80014a8:	20000000 	.word	0x20000000

080014ac <autocorr>:


//autocorrelation function
//this takes a lot of computation. there are efficient implementations, but this is more intuitive
static void autocorr(int32_t *lpf, int64_t *autocorr_buff) {
 80014ac:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
 80014b0:	b086      	sub	sp, #24
 80014b2:	af00      	add	r7, sp, #0
 80014b4:	6078      	str	r0, [r7, #4]
 80014b6:	6039      	str	r1, [r7, #0]

    uint8_t lag;
    uint16_t i;
    int64_t temp_ac;
    for (lag = 0; lag < NUM_AUTOCORR_LAGS; lag++) {
 80014b8:	2100      	movs	r1, #0
 80014ba:	75f9      	strb	r1, [r7, #23]
 80014bc:	e03f      	b.n	800153e <autocorr+0x92>
        temp_ac = 0;
 80014be:	f04f 0000 	mov.w	r0, #0
 80014c2:	f04f 0100 	mov.w	r1, #0
 80014c6:	e9c7 0102 	strd	r0, r1, [r7, #8]
        for (i = 0; i < NUM_TUPLES-lag; i++) {
 80014ca:	2100      	movs	r1, #0
 80014cc:	82b9      	strh	r1, [r7, #20]
 80014ce:	e025      	b.n	800151c <autocorr+0x70>
            temp_ac += (int64_t)lpf[i]*(int64_t)lpf[i+lag];
 80014d0:	8ab9      	ldrh	r1, [r7, #20]
 80014d2:	0089      	lsls	r1, r1, #2
 80014d4:	6878      	ldr	r0, [r7, #4]
 80014d6:	4401      	add	r1, r0
 80014d8:	6809      	ldr	r1, [r1, #0]
 80014da:	17c8      	asrs	r0, r1, #31
 80014dc:	460c      	mov	r4, r1
 80014de:	4605      	mov	r5, r0
 80014e0:	8ab8      	ldrh	r0, [r7, #20]
 80014e2:	7df9      	ldrb	r1, [r7, #23]
 80014e4:	4401      	add	r1, r0
 80014e6:	0089      	lsls	r1, r1, #2
 80014e8:	6878      	ldr	r0, [r7, #4]
 80014ea:	4401      	add	r1, r0
 80014ec:	6809      	ldr	r1, [r1, #0]
 80014ee:	17c8      	asrs	r0, r1, #31
 80014f0:	4688      	mov	r8, r1
 80014f2:	4681      	mov	r9, r0
 80014f4:	fb08 f005 	mul.w	r0, r8, r5
 80014f8:	fb04 f109 	mul.w	r1, r4, r9
 80014fc:	4401      	add	r1, r0
 80014fe:	fba4 2308 	umull	r2, r3, r4, r8
 8001502:	4419      	add	r1, r3
 8001504:	460b      	mov	r3, r1
 8001506:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800150a:	eb10 0a02 	adds.w	sl, r0, r2
 800150e:	eb41 0b03 	adc.w	fp, r1, r3
 8001512:	e9c7 ab02 	strd	sl, fp, [r7, #8]
        for (i = 0; i < NUM_TUPLES-lag; i++) {
 8001516:	8ab9      	ldrh	r1, [r7, #20]
 8001518:	3101      	adds	r1, #1
 800151a:	82b9      	strh	r1, [r7, #20]
 800151c:	8ab8      	ldrh	r0, [r7, #20]
 800151e:	7df9      	ldrb	r1, [r7, #23]
 8001520:	f1c1 0150 	rsb	r1, r1, #80	; 0x50
 8001524:	4288      	cmp	r0, r1
 8001526:	dbd3      	blt.n	80014d0 <autocorr+0x24>
        }
        autocorr_buff[lag] = temp_ac;
 8001528:	7df9      	ldrb	r1, [r7, #23]
 800152a:	00c9      	lsls	r1, r1, #3
 800152c:	6838      	ldr	r0, [r7, #0]
 800152e:	1846      	adds	r6, r0, r1
 8001530:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001534:	e9c6 0100 	strd	r0, r1, [r6]
    for (lag = 0; lag < NUM_AUTOCORR_LAGS; lag++) {
 8001538:	7df9      	ldrb	r1, [r7, #23]
 800153a:	3101      	adds	r1, #1
 800153c:	75f9      	strb	r1, [r7, #23]
 800153e:	7df9      	ldrb	r1, [r7, #23]
 8001540:	2931      	cmp	r1, #49	; 0x31
 8001542:	d9bc      	bls.n	80014be <autocorr+0x12>
    }
}
 8001544:	bf00      	nop
 8001546:	bf00      	nop
 8001548:	3718      	adds	r7, #24
 800154a:	46bd      	mov	sp, r7
 800154c:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8001550:	4770      	bx	lr
	...

08001554 <remove_mean>:


//calculate and remove the mean
static void remove_mean(int32_t *lpf) {
 8001554:	b480      	push	{r7}
 8001556:	b085      	sub	sp, #20
 8001558:	af00      	add	r7, sp, #0
 800155a:	6078      	str	r0, [r7, #4]

    int32_t sum = 0;
 800155c:	2300      	movs	r3, #0
 800155e:	60fb      	str	r3, [r7, #12]
    uint16_t i;
    for (i = 0; i < NUM_TUPLES; i++) {
 8001560:	2300      	movs	r3, #0
 8001562:	817b      	strh	r3, [r7, #10]
 8001564:	e00a      	b.n	800157c <remove_mean+0x28>
        sum += lpf[i];
 8001566:	897b      	ldrh	r3, [r7, #10]
 8001568:	009b      	lsls	r3, r3, #2
 800156a:	687a      	ldr	r2, [r7, #4]
 800156c:	4413      	add	r3, r2
 800156e:	681b      	ldr	r3, [r3, #0]
 8001570:	68fa      	ldr	r2, [r7, #12]
 8001572:	4413      	add	r3, r2
 8001574:	60fb      	str	r3, [r7, #12]
    for (i = 0; i < NUM_TUPLES; i++) {
 8001576:	897b      	ldrh	r3, [r7, #10]
 8001578:	3301      	adds	r3, #1
 800157a:	817b      	strh	r3, [r7, #10]
 800157c:	897b      	ldrh	r3, [r7, #10]
 800157e:	2b4f      	cmp	r3, #79	; 0x4f
 8001580:	d9f1      	bls.n	8001566 <remove_mean+0x12>
    }
    sum = sum/(NUM_TUPLES);
 8001582:	68fb      	ldr	r3, [r7, #12]
 8001584:	4a11      	ldr	r2, [pc, #68]	; (80015cc <remove_mean+0x78>)
 8001586:	fb82 1203 	smull	r1, r2, r2, r3
 800158a:	1152      	asrs	r2, r2, #5
 800158c:	17db      	asrs	r3, r3, #31
 800158e:	1ad3      	subs	r3, r2, r3
 8001590:	60fb      	str	r3, [r7, #12]

    for (i = 0; i < NUM_TUPLES; i++) {
 8001592:	2300      	movs	r3, #0
 8001594:	817b      	strh	r3, [r7, #10]
 8001596:	e00e      	b.n	80015b6 <remove_mean+0x62>
        lpf[i] = lpf[i] - sum;
 8001598:	897b      	ldrh	r3, [r7, #10]
 800159a:	009b      	lsls	r3, r3, #2
 800159c:	687a      	ldr	r2, [r7, #4]
 800159e:	4413      	add	r3, r2
 80015a0:	6819      	ldr	r1, [r3, #0]
 80015a2:	897b      	ldrh	r3, [r7, #10]
 80015a4:	009b      	lsls	r3, r3, #2
 80015a6:	687a      	ldr	r2, [r7, #4]
 80015a8:	4413      	add	r3, r2
 80015aa:	68fa      	ldr	r2, [r7, #12]
 80015ac:	1a8a      	subs	r2, r1, r2
 80015ae:	601a      	str	r2, [r3, #0]
    for (i = 0; i < NUM_TUPLES; i++) {
 80015b0:	897b      	ldrh	r3, [r7, #10]
 80015b2:	3301      	adds	r3, #1
 80015b4:	817b      	strh	r3, [r7, #10]
 80015b6:	897b      	ldrh	r3, [r7, #10]
 80015b8:	2b4f      	cmp	r3, #79	; 0x4f
 80015ba:	d9ed      	bls.n	8001598 <remove_mean+0x44>
    }
}
 80015bc:	bf00      	nop
 80015be:	bf00      	nop
 80015c0:	3714      	adds	r7, #20
 80015c2:	46bd      	mov	sp, r7
 80015c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015c8:	4770      	bx	lr
 80015ca:	bf00      	nop
 80015cc:	66666667 	.word	0x66666667

080015d0 <lowpassfilt>:


//FIR low pass filter
static void lowpassfilt(uint8_t *mag_sqrt, int32_t *lpf) {
 80015d0:	b480      	push	{r7}
 80015d2:	b085      	sub	sp, #20
 80015d4:	af00      	add	r7, sp, #0
 80015d6:	6078      	str	r0, [r7, #4]
 80015d8:	6039      	str	r1, [r7, #0]

    uint16_t n;
    uint8_t i;
    int32_t temp_lpf;
    for (n = 0; n < NUM_TUPLES; n++) {
 80015da:	2300      	movs	r3, #0
 80015dc:	81fb      	strh	r3, [r7, #14]
 80015de:	e028      	b.n	8001632 <lowpassfilt+0x62>
        temp_lpf = 0;
 80015e0:	2300      	movs	r3, #0
 80015e2:	60bb      	str	r3, [r7, #8]
        for (i = 0; i < LPF_FILT_LEN; i++) {
 80015e4:	2300      	movs	r3, #0
 80015e6:	737b      	strb	r3, [r7, #13]
 80015e8:	e017      	b.n	800161a <lowpassfilt+0x4a>
            if (n-i >= 0) {     //handle the case when n < filter length
 80015ea:	89fa      	ldrh	r2, [r7, #14]
 80015ec:	7b7b      	ldrb	r3, [r7, #13]
 80015ee:	1ad3      	subs	r3, r2, r3
 80015f0:	2b00      	cmp	r3, #0
 80015f2:	db0f      	blt.n	8001614 <lowpassfilt+0x44>
                temp_lpf += (int32_t)lpf_coeffs[i]*(int32_t)mag_sqrt[n-i];
 80015f4:	7b7b      	ldrb	r3, [r7, #13]
 80015f6:	4a14      	ldr	r2, [pc, #80]	; (8001648 <lowpassfilt+0x78>)
 80015f8:	56d3      	ldrsb	r3, [r2, r3]
 80015fa:	4619      	mov	r1, r3
 80015fc:	89fa      	ldrh	r2, [r7, #14]
 80015fe:	7b7b      	ldrb	r3, [r7, #13]
 8001600:	1ad3      	subs	r3, r2, r3
 8001602:	461a      	mov	r2, r3
 8001604:	687b      	ldr	r3, [r7, #4]
 8001606:	4413      	add	r3, r2
 8001608:	781b      	ldrb	r3, [r3, #0]
 800160a:	fb01 f303 	mul.w	r3, r1, r3
 800160e:	68ba      	ldr	r2, [r7, #8]
 8001610:	4413      	add	r3, r2
 8001612:	60bb      	str	r3, [r7, #8]
        for (i = 0; i < LPF_FILT_LEN; i++) {
 8001614:	7b7b      	ldrb	r3, [r7, #13]
 8001616:	3301      	adds	r3, #1
 8001618:	737b      	strb	r3, [r7, #13]
 800161a:	7b7b      	ldrb	r3, [r7, #13]
 800161c:	2b08      	cmp	r3, #8
 800161e:	d9e4      	bls.n	80015ea <lowpassfilt+0x1a>
            }
        }
        lpf[n] = temp_lpf;
 8001620:	89fb      	ldrh	r3, [r7, #14]
 8001622:	009b      	lsls	r3, r3, #2
 8001624:	683a      	ldr	r2, [r7, #0]
 8001626:	4413      	add	r3, r2
 8001628:	68ba      	ldr	r2, [r7, #8]
 800162a:	601a      	str	r2, [r3, #0]
    for (n = 0; n < NUM_TUPLES; n++) {
 800162c:	89fb      	ldrh	r3, [r7, #14]
 800162e:	3301      	adds	r3, #1
 8001630:	81fb      	strh	r3, [r7, #14]
 8001632:	89fb      	ldrh	r3, [r7, #14]
 8001634:	2b4f      	cmp	r3, #79	; 0x4f
 8001636:	d9d3      	bls.n	80015e0 <lowpassfilt+0x10>
    }
}
 8001638:	bf00      	nop
 800163a:	bf00      	nop
 800163c:	3714      	adds	r7, #20
 800163e:	46bd      	mov	sp, r7
 8001640:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001644:	4770      	bx	lr
 8001646:	bf00      	nop
 8001648:	20000008 	.word	0x20000008
 800164c:	00000000 	.word	0x00000000

08001650 <count_steps>:


//algorithm interface
uint8_t count_steps(int8_t *data) {
 8001650:	b580      	push	{r7, lr}
 8001652:	b08c      	sub	sp, #48	; 0x30
 8001654:	af02      	add	r7, sp, #8
 8001656:	6078      	str	r0, [r7, #4]
    //assume data is in the format data = [x1,y1,z1,x2,y2,z2...etc]
    //calculate the magnitude of each of triplet ie temp_mag = [x1^2+y1^2+z1^2]
    //then temp_mag = sqrt(temp_mag)
    uint16_t i;
    uint16_t temp_mag;
    for (i = 0; i < NUM_TUPLES; i++) {
 8001658:	2300      	movs	r3, #0
 800165a:	84fb      	strh	r3, [r7, #38]	; 0x26
 800165c:	e054      	b.n	8001708 <count_steps+0xb8>
        temp_mag = (uint16_t)((uint16_t)data[i*3+0]*(uint16_t)data[i*3+0] + (uint16_t)data[i*3+1]*(uint16_t)data[i*3+1] + (uint16_t)data[i*3+2]*(uint16_t)data[i*3+2]);
 800165e:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8001660:	4613      	mov	r3, r2
 8001662:	005b      	lsls	r3, r3, #1
 8001664:	4413      	add	r3, r2
 8001666:	461a      	mov	r2, r3
 8001668:	687b      	ldr	r3, [r7, #4]
 800166a:	4413      	add	r3, r2
 800166c:	f993 3000 	ldrsb.w	r3, [r3]
 8001670:	b299      	uxth	r1, r3
 8001672:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8001674:	4613      	mov	r3, r2
 8001676:	005b      	lsls	r3, r3, #1
 8001678:	4413      	add	r3, r2
 800167a:	461a      	mov	r2, r3
 800167c:	687b      	ldr	r3, [r7, #4]
 800167e:	4413      	add	r3, r2
 8001680:	f993 3000 	ldrsb.w	r3, [r3]
 8001684:	b29b      	uxth	r3, r3
 8001686:	fb11 f303 	smulbb	r3, r1, r3
 800168a:	b299      	uxth	r1, r3
 800168c:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 800168e:	4613      	mov	r3, r2
 8001690:	005b      	lsls	r3, r3, #1
 8001692:	4413      	add	r3, r2
 8001694:	3301      	adds	r3, #1
 8001696:	687a      	ldr	r2, [r7, #4]
 8001698:	4413      	add	r3, r2
 800169a:	f993 3000 	ldrsb.w	r3, [r3]
 800169e:	b298      	uxth	r0, r3
 80016a0:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 80016a2:	4613      	mov	r3, r2
 80016a4:	005b      	lsls	r3, r3, #1
 80016a6:	4413      	add	r3, r2
 80016a8:	3301      	adds	r3, #1
 80016aa:	687a      	ldr	r2, [r7, #4]
 80016ac:	4413      	add	r3, r2
 80016ae:	f993 3000 	ldrsb.w	r3, [r3]
 80016b2:	b29b      	uxth	r3, r3
 80016b4:	fb10 f303 	smulbb	r3, r0, r3
 80016b8:	b29b      	uxth	r3, r3
 80016ba:	440b      	add	r3, r1
 80016bc:	b299      	uxth	r1, r3
 80016be:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 80016c0:	4613      	mov	r3, r2
 80016c2:	005b      	lsls	r3, r3, #1
 80016c4:	4413      	add	r3, r2
 80016c6:	3302      	adds	r3, #2
 80016c8:	687a      	ldr	r2, [r7, #4]
 80016ca:	4413      	add	r3, r2
 80016cc:	f993 3000 	ldrsb.w	r3, [r3]
 80016d0:	b298      	uxth	r0, r3
 80016d2:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 80016d4:	4613      	mov	r3, r2
 80016d6:	005b      	lsls	r3, r3, #1
 80016d8:	4413      	add	r3, r2
 80016da:	3302      	adds	r3, #2
 80016dc:	687a      	ldr	r2, [r7, #4]
 80016de:	4413      	add	r3, r2
 80016e0:	f993 3000 	ldrsb.w	r3, [r3]
 80016e4:	b29b      	uxth	r3, r3
 80016e6:	fb10 f303 	smulbb	r3, r0, r3
 80016ea:	b29b      	uxth	r3, r3
 80016ec:	440b      	add	r3, r1
 80016ee:	847b      	strh	r3, [r7, #34]	; 0x22
        mag_sqrt[i] = (uint8_t)SquareRoot(temp_mag);
 80016f0:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 80016f2:	4618      	mov	r0, r3
 80016f4:	f7ff fd03 	bl	80010fe <SquareRoot>
 80016f8:	4602      	mov	r2, r0
 80016fa:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 80016fc:	b2d1      	uxtb	r1, r2
 80016fe:	4a5a      	ldr	r2, [pc, #360]	; (8001868 <count_steps+0x218>)
 8001700:	54d1      	strb	r1, [r2, r3]
    for (i = 0; i < NUM_TUPLES; i++) {
 8001702:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8001704:	3301      	adds	r3, #1
 8001706:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001708:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800170a:	2b4f      	cmp	r3, #79	; 0x4f
 800170c:	d9a7      	bls.n	800165e <count_steps+0xe>
    }

    //apply low pass filter to mag_sqrt, result is stored in lpf
    lowpassfilt(mag_sqrt, lpf);
 800170e:	4957      	ldr	r1, [pc, #348]	; (800186c <count_steps+0x21c>)
 8001710:	4855      	ldr	r0, [pc, #340]	; (8001868 <count_steps+0x218>)
 8001712:	f7ff ff5d 	bl	80015d0 <lowpassfilt>

    //remove mean from lpf, store result in lpf
    remove_mean(lpf);
 8001716:	4855      	ldr	r0, [pc, #340]	; (800186c <count_steps+0x21c>)
 8001718:	f7ff ff1c 	bl	8001554 <remove_mean>

    //do the autocorrelation on the lpf buffer, store the result in autocorr_buff
    autocorr(lpf, autocorr_buff);
 800171c:	4954      	ldr	r1, [pc, #336]	; (8001870 <count_steps+0x220>)
 800171e:	4853      	ldr	r0, [pc, #332]	; (800186c <count_steps+0x21c>)
 8001720:	f7ff fec4 	bl	80014ac <autocorr>

    //get the derivative of the autocorr_buff, store in deriv
    derivative(autocorr_buff, deriv);
 8001724:	4953      	ldr	r1, [pc, #332]	; (8001874 <count_steps+0x224>)
 8001726:	4852      	ldr	r0, [pc, #328]	; (8001870 <count_steps+0x220>)
 8001728:	f7ff fe62 	bl	80013f0 <derivative>

    //look for first zero crossing where derivative goes from positive to negative. that
    //corresponds to the first positive peak in the autocorrelation. look at two samples
    //instead of just one to maybe reduce the chances of getting tricked by noise
    uint8_t peak_ind = 0;
 800172c:	2300      	movs	r3, #0
 800172e:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
    //start index is set to 8 lags, which corresponds to a walking rate of 2.5Hz @20Hz sampling rate. its probably
    //running if its faster than this
    for (i = 8; i < NUM_AUTOCORR_LAGS; i++) {
 8001732:	2308      	movs	r3, #8
 8001734:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001736:	e02f      	b.n	8001798 <count_steps+0x148>
        if ((deriv[i] > 0) && (deriv[i-1] > 0) && (deriv[i-2] < 0) && (deriv[i-3] < 0)) {
 8001738:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800173a:	4a4e      	ldr	r2, [pc, #312]	; (8001874 <count_steps+0x224>)
 800173c:	00db      	lsls	r3, r3, #3
 800173e:	4413      	add	r3, r2
 8001740:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001744:	2a01      	cmp	r2, #1
 8001746:	f173 0300 	sbcs.w	r3, r3, #0
 800174a:	db22      	blt.n	8001792 <count_steps+0x142>
 800174c:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800174e:	3b01      	subs	r3, #1
 8001750:	4a48      	ldr	r2, [pc, #288]	; (8001874 <count_steps+0x224>)
 8001752:	00db      	lsls	r3, r3, #3
 8001754:	4413      	add	r3, r2
 8001756:	e9d3 2300 	ldrd	r2, r3, [r3]
 800175a:	2a01      	cmp	r2, #1
 800175c:	f173 0300 	sbcs.w	r3, r3, #0
 8001760:	db17      	blt.n	8001792 <count_steps+0x142>
 8001762:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8001764:	3b02      	subs	r3, #2
 8001766:	4a43      	ldr	r2, [pc, #268]	; (8001874 <count_steps+0x224>)
 8001768:	00db      	lsls	r3, r3, #3
 800176a:	4413      	add	r3, r2
 800176c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001770:	2b00      	cmp	r3, #0
 8001772:	da0e      	bge.n	8001792 <count_steps+0x142>
 8001774:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8001776:	3b03      	subs	r3, #3
 8001778:	4a3e      	ldr	r2, [pc, #248]	; (8001874 <count_steps+0x224>)
 800177a:	00db      	lsls	r3, r3, #3
 800177c:	4413      	add	r3, r2
 800177e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001782:	2b00      	cmp	r3, #0
 8001784:	da05      	bge.n	8001792 <count_steps+0x142>
            peak_ind = i-1;
 8001786:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8001788:	b2db      	uxtb	r3, r3
 800178a:	3b01      	subs	r3, #1
 800178c:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
            break;
 8001790:	e005      	b.n	800179e <count_steps+0x14e>
    for (i = 8; i < NUM_AUTOCORR_LAGS; i++) {
 8001792:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8001794:	3301      	adds	r3, #1
 8001796:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001798:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800179a:	2b31      	cmp	r3, #49	; 0x31
 800179c:	d9cc      	bls.n	8001738 <count_steps+0xe8>
        }
    }

    //hone in on the exact peak index
    peak_ind = get_precise_peakind(autocorr_buff, peak_ind);
 800179e:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 80017a2:	4619      	mov	r1, r3
 80017a4:	4832      	ldr	r0, [pc, #200]	; (8001870 <count_steps+0x220>)
 80017a6:	f7ff fd68 	bl	800127a <get_precise_peakind>
 80017aa:	4603      	mov	r3, r0
 80017ac:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
    //printf("peak ind: %i\n", peak_ind);

    //get autocorrelation peak stats
    uint8_t neg_slope_count = 0;
 80017b0:	2300      	movs	r3, #0
 80017b2:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
    int64_t delta_amplitude_right = 0;
 80017b6:	f04f 0200 	mov.w	r2, #0
 80017ba:	f04f 0300 	mov.w	r3, #0
 80017be:	e9c7 2306 	strd	r2, r3, [r7, #24]
    uint8_t pos_slope_count = 0;
 80017c2:	2300      	movs	r3, #0
 80017c4:	75fb      	strb	r3, [r7, #23]
    int64_t delta_amplitude_left = 0;
 80017c6:	f04f 0200 	mov.w	r2, #0
 80017ca:	f04f 0300 	mov.w	r3, #0
 80017ce:	e9c7 2302 	strd	r2, r3, [r7, #8]
    get_autocorr_peak_stats(autocorr_buff, &neg_slope_count, &delta_amplitude_right, &pos_slope_count, &delta_amplitude_left, peak_ind);
 80017d2:	f107 0017 	add.w	r0, r7, #23
 80017d6:	f107 0218 	add.w	r2, r7, #24
 80017da:	f107 0121 	add.w	r1, r7, #33	; 0x21
 80017de:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 80017e2:	9301      	str	r3, [sp, #4]
 80017e4:	f107 0308 	add.w	r3, r7, #8
 80017e8:	9300      	str	r3, [sp, #0]
 80017ea:	4603      	mov	r3, r0
 80017ec:	4820      	ldr	r0, [pc, #128]	; (8001870 <count_steps+0x220>)
 80017ee:	f7ff fcbb 	bl	8001168 <get_autocorr_peak_stats>

    //now check the conditions to see if it was a real peak or not, and if so, calculate the number of steps
    uint8_t num_steps = 0;
 80017f2:	2300      	movs	r3, #0
 80017f4:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
    if ((pos_slope_count > AUTOCORR_MIN_HALF_LEN) && (neg_slope_count > AUTOCORR_MIN_HALF_LEN) && (delta_amplitude_right > AUTOCORR_DELTA_AMPLITUDE_THRESH) && (delta_amplitude_left > AUTOCORR_DELTA_AMPLITUDE_THRESH)) {
 80017f8:	7dfb      	ldrb	r3, [r7, #23]
 80017fa:	2b03      	cmp	r3, #3
 80017fc:	d927      	bls.n	800184e <count_steps+0x1fe>
 80017fe:	f897 3021 	ldrb.w	r3, [r7, #33]	; 0x21
 8001802:	2b03      	cmp	r3, #3
 8001804:	d923      	bls.n	800184e <count_steps+0x1fe>
 8001806:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800180a:	4610      	mov	r0, r2
 800180c:	4619      	mov	r1, r3
 800180e:	f7fe fecf 	bl	80005b0 <__aeabi_l2d>
 8001812:	a313      	add	r3, pc, #76	; (adr r3, 8001860 <count_steps+0x210>)
 8001814:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001818:	f7ff f988 	bl	8000b2c <__aeabi_dcmpgt>
 800181c:	4603      	mov	r3, r0
 800181e:	2b00      	cmp	r3, #0
 8001820:	d015      	beq.n	800184e <count_steps+0x1fe>
 8001822:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8001826:	4610      	mov	r0, r2
 8001828:	4619      	mov	r1, r3
 800182a:	f7fe fec1 	bl	80005b0 <__aeabi_l2d>
 800182e:	a30c      	add	r3, pc, #48	; (adr r3, 8001860 <count_steps+0x210>)
 8001830:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001834:	f7ff f97a 	bl	8000b2c <__aeabi_dcmpgt>
 8001838:	4603      	mov	r3, r0
 800183a:	2b00      	cmp	r3, #0
 800183c:	d007      	beq.n	800184e <count_steps+0x1fe>
        //the period is peak_ind/sampling_rate seconds. that corresponds to a frequency of 1/period
        //with the frequency known, and the number of seconds is 4 seconds, you can then find out the number of steps
        num_steps = (SAMPLING_RATE*WINDOW_LENGTH)/peak_ind;
 800183e:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 8001842:	2250      	movs	r2, #80	; 0x50
 8001844:	fb92 f3f3 	sdiv	r3, r2, r3
 8001848:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
 800184c:	e002      	b.n	8001854 <count_steps+0x204>
    } else {
        //not a valid autocorrelation peak
        num_steps = 0;
 800184e:	2300      	movs	r3, #0
 8001850:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
    }

    //printf("num steps: %i\n", num_steps);
    return num_steps;
 8001854:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
}
 8001858:	4618      	mov	r0, r3
 800185a:	3728      	adds	r7, #40	; 0x28
 800185c:	46bd      	mov	sp, r7
 800185e:	bd80      	pop	{r7, pc}
 8001860:	00000000 	.word	0x00000000
 8001864:	41bdcd65 	.word	0x41bdcd65
 8001868:	2000020c 	.word	0x2000020c
 800186c:	2000025c 	.word	0x2000025c
 8001870:	200003a0 	.word	0x200003a0
 8001874:	20000530 	.word	0x20000530

08001878 <lis3dh_init>:

#define I2C_READ_BIT   (1)
#define I2C_WRITE_BIT  (0)
#define TIMEOUT_MS     (50)

HAL_StatusTypeDef lis3dh_init(lis3dh_t *lis3dh, I2C_HandleTypeDef *i2c, uint8_t *buf, uint16_t bufsize) {
 8001878:	b580      	push	{r7, lr}
 800187a:	b086      	sub	sp, #24
 800187c:	af00      	add	r7, sp, #0
 800187e:	60f8      	str	r0, [r7, #12]
 8001880:	60b9      	str	r1, [r7, #8]
 8001882:	607a      	str	r2, [r7, #4]
 8001884:	807b      	strh	r3, [r7, #2]
	HAL_StatusTypeDef status;

	lis3dh->i2c = i2c;
 8001886:	68fb      	ldr	r3, [r7, #12]
 8001888:	68ba      	ldr	r2, [r7, #8]
 800188a:	601a      	str	r2, [r3, #0]
	lis3dh->i2c_addr = LIS3DH_ADDR << 1;
 800188c:	68fb      	ldr	r3, [r7, #12]
 800188e:	2230      	movs	r2, #48	; 0x30
 8001890:	809a      	strh	r2, [r3, #4]
	lis3dh->buf = buf;
 8001892:	68fb      	ldr	r3, [r7, #12]
 8001894:	687a      	ldr	r2, [r7, #4]
 8001896:	61da      	str	r2, [r3, #28]
	lis3dh->bufsize = bufsize;
 8001898:	68fb      	ldr	r3, [r7, #12]
 800189a:	887a      	ldrh	r2, [r7, #2]
 800189c:	831a      	strh	r2, [r3, #24]

	/* Let device wake up. */
	HAL_Delay(LID3DH_POWER_UP_MS);
 800189e:	200a      	movs	r0, #10
 80018a0:	f001 fb2a 	bl	8002ef8 <HAL_Delay>

	status = HAL_I2C_IsDeviceReady(lis3dh->i2c, lis3dh->i2c_addr, 1, TIMEOUT_MS);
 80018a4:	68fb      	ldr	r3, [r7, #12]
 80018a6:	6818      	ldr	r0, [r3, #0]
 80018a8:	68fb      	ldr	r3, [r7, #12]
 80018aa:	8899      	ldrh	r1, [r3, #4]
 80018ac:	2332      	movs	r3, #50	; 0x32
 80018ae:	2201      	movs	r2, #1
 80018b0:	f002 f944 	bl	8003b3c <HAL_I2C_IsDeviceReady>
 80018b4:	4603      	mov	r3, r0
 80018b6:	75fb      	strb	r3, [r7, #23]
	if (status != HAL_OK) return status;
 80018b8:	7dfb      	ldrb	r3, [r7, #23]
 80018ba:	2b00      	cmp	r3, #0
 80018bc:	d001      	beq.n	80018c2 <lis3dh_init+0x4a>
 80018be:	7dfb      	ldrb	r3, [r7, #23]
 80018c0:	e032      	b.n	8001928 <lis3dh_init+0xb0>

    /* Confirm the device identifies itself as expected. */
	status = lis3dh_read(lis3dh, REG_WHO_AM_I, 1);
 80018c2:	2201      	movs	r2, #1
 80018c4:	210f      	movs	r1, #15
 80018c6:	68f8      	ldr	r0, [r7, #12]
 80018c8:	f000 f850 	bl	800196c <lis3dh_read>
 80018cc:	4603      	mov	r3, r0
 80018ce:	75fb      	strb	r3, [r7, #23]
	if (status != HAL_OK) return status;
 80018d0:	7dfb      	ldrb	r3, [r7, #23]
 80018d2:	2b00      	cmp	r3, #0
 80018d4:	d001      	beq.n	80018da <lis3dh_init+0x62>
 80018d6:	7dfb      	ldrb	r3, [r7, #23]
 80018d8:	e026      	b.n	8001928 <lis3dh_init+0xb0>
	if (lis3dh->buf[0] != LIS3DH_DEVICE_ID) return HAL_ERROR;
 80018da:	68fb      	ldr	r3, [r7, #12]
 80018dc:	69db      	ldr	r3, [r3, #28]
 80018de:	781b      	ldrb	r3, [r3, #0]
 80018e0:	2b33      	cmp	r3, #51	; 0x33
 80018e2:	d001      	beq.n	80018e8 <lis3dh_init+0x70>
 80018e4:	2301      	movs	r3, #1
 80018e6:	e01f      	b.n	8001928 <lis3dh_init+0xb0>

	// Set power mode to operational; Enable all axes; Normal operation.
	status = lis3dh_write(lis3dh, REG_CTRL_REG1, DATA_RATE_NORM_1kHz344 | 0x07);
 80018e8:	2297      	movs	r2, #151	; 0x97
 80018ea:	2120      	movs	r1, #32
 80018ec:	68f8      	ldr	r0, [r7, #12]
 80018ee:	f000 f864 	bl	80019ba <lis3dh_write>
 80018f2:	4603      	mov	r3, r0
 80018f4:	75fb      	strb	r3, [r7, #23]
	if (status != HAL_OK) return status;
 80018f6:	7dfb      	ldrb	r3, [r7, #23]
 80018f8:	2b00      	cmp	r3, #0
 80018fa:	d001      	beq.n	8001900 <lis3dh_init+0x88>
 80018fc:	7dfb      	ldrb	r3, [r7, #23]
 80018fe:	e013      	b.n	8001928 <lis3dh_init+0xb0>

	// High resolution; BDU enabled.
	status = lis3dh_write(lis3dh, REG_CTRL_REG4, 0x88);
 8001900:	2288      	movs	r2, #136	; 0x88
 8001902:	2123      	movs	r1, #35	; 0x23
 8001904:	68f8      	ldr	r0, [r7, #12]
 8001906:	f000 f858 	bl	80019ba <lis3dh_write>
 800190a:	4603      	mov	r3, r0
 800190c:	75fb      	strb	r3, [r7, #23]
	if (status != HAL_OK) return status;
 800190e:	7dfb      	ldrb	r3, [r7, #23]
 8001910:	2b00      	cmp	r3, #0
 8001912:	d001      	beq.n	8001918 <lis3dh_init+0xa0>
 8001914:	7dfb      	ldrb	r3, [r7, #23]
 8001916:	e007      	b.n	8001928 <lis3dh_init+0xb0>

	// Enable temp sensor.
	status = lis3dh_write(lis3dh, REG_TEMP_CFG_REG, 0x80);
 8001918:	2280      	movs	r2, #128	; 0x80
 800191a:	211f      	movs	r1, #31
 800191c:	68f8      	ldr	r0, [r7, #12]
 800191e:	f000 f84c 	bl	80019ba <lis3dh_write>
 8001922:	4603      	mov	r3, r0
 8001924:	75fb      	strb	r3, [r7, #23]
	return status;
 8001926:	7dfb      	ldrb	r3, [r7, #23]
}
 8001928:	4618      	mov	r0, r3
 800192a:	3718      	adds	r7, #24
 800192c:	46bd      	mov	sp, r7
 800192e:	bd80      	pop	{r7, pc}

08001930 <lis3dh_xyz_available>:

bool lis3dh_xyz_available(lis3dh_t *lis3dh) {
 8001930:	b580      	push	{r7, lr}
 8001932:	b084      	sub	sp, #16
 8001934:	af00      	add	r7, sp, #0
 8001936:	6078      	str	r0, [r7, #4]
	/*
	 * Read STATUS_REG bit 2 (ZYXDA): New X, Y, Z data available.
	 */
	HAL_StatusTypeDef status;
	status = lis3dh_read(lis3dh, REG_STATUS_REG, 1);
 8001938:	2201      	movs	r2, #1
 800193a:	2127      	movs	r1, #39	; 0x27
 800193c:	6878      	ldr	r0, [r7, #4]
 800193e:	f000 f815 	bl	800196c <lis3dh_read>
 8001942:	4603      	mov	r3, r0
 8001944:	73fb      	strb	r3, [r7, #15]
	if (status != HAL_OK) return false;
 8001946:	7bfb      	ldrb	r3, [r7, #15]
 8001948:	2b00      	cmp	r3, #0
 800194a:	d001      	beq.n	8001950 <lis3dh_xyz_available+0x20>
 800194c:	2300      	movs	r3, #0
 800194e:	e009      	b.n	8001964 <lis3dh_xyz_available+0x34>

	return (lis3dh->buf[0] & 2) > 0;
 8001950:	687b      	ldr	r3, [r7, #4]
 8001952:	69db      	ldr	r3, [r3, #28]
 8001954:	781b      	ldrb	r3, [r3, #0]
 8001956:	f003 0302 	and.w	r3, r3, #2
 800195a:	2b00      	cmp	r3, #0
 800195c:	bfcc      	ite	gt
 800195e:	2301      	movgt	r3, #1
 8001960:	2300      	movle	r3, #0
 8001962:	b2db      	uxtb	r3, r3
}
 8001964:	4618      	mov	r0, r3
 8001966:	3710      	adds	r7, #16
 8001968:	46bd      	mov	sp, r7
 800196a:	bd80      	pop	{r7, pc}

0800196c <lis3dh_read>:

HAL_StatusTypeDef lis3dh_read(lis3dh_t* lis3dh, uint16_t reg, uint16_t bufsize) {
 800196c:	b590      	push	{r4, r7, lr}
 800196e:	b087      	sub	sp, #28
 8001970:	af04      	add	r7, sp, #16
 8001972:	6078      	str	r0, [r7, #4]
 8001974:	460b      	mov	r3, r1
 8001976:	807b      	strh	r3, [r7, #2]
 8001978:	4613      	mov	r3, r2
 800197a:	803b      	strh	r3, [r7, #0]
	if (bufsize > lis3dh->bufsize) return HAL_ERROR;
 800197c:	687b      	ldr	r3, [r7, #4]
 800197e:	8b1b      	ldrh	r3, [r3, #24]
 8001980:	883a      	ldrh	r2, [r7, #0]
 8001982:	429a      	cmp	r2, r3
 8001984:	d901      	bls.n	800198a <lis3dh_read+0x1e>
 8001986:	2301      	movs	r3, #1
 8001988:	e013      	b.n	80019b2 <lis3dh_read+0x46>

	return HAL_I2C_Mem_Read(lis3dh->i2c, lis3dh->i2c_addr | I2C_READ_BIT, reg, 1, lis3dh->buf, bufsize, TIMEOUT_MS);
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	6818      	ldr	r0, [r3, #0]
 800198e:	687b      	ldr	r3, [r7, #4]
 8001990:	889b      	ldrh	r3, [r3, #4]
 8001992:	f043 0301 	orr.w	r3, r3, #1
 8001996:	b299      	uxth	r1, r3
 8001998:	687b      	ldr	r3, [r7, #4]
 800199a:	69db      	ldr	r3, [r3, #28]
 800199c:	887c      	ldrh	r4, [r7, #2]
 800199e:	2232      	movs	r2, #50	; 0x32
 80019a0:	9202      	str	r2, [sp, #8]
 80019a2:	883a      	ldrh	r2, [r7, #0]
 80019a4:	9201      	str	r2, [sp, #4]
 80019a6:	9300      	str	r3, [sp, #0]
 80019a8:	2301      	movs	r3, #1
 80019aa:	4622      	mov	r2, r4
 80019ac:	f001 ffac 	bl	8003908 <HAL_I2C_Mem_Read>
 80019b0:	4603      	mov	r3, r0
}
 80019b2:	4618      	mov	r0, r3
 80019b4:	370c      	adds	r7, #12
 80019b6:	46bd      	mov	sp, r7
 80019b8:	bd90      	pop	{r4, r7, pc}

080019ba <lis3dh_write>:

HAL_StatusTypeDef lis3dh_write(lis3dh_t* lis3dh, uint16_t reg, uint8_t data) {
 80019ba:	b580      	push	{r7, lr}
 80019bc:	b086      	sub	sp, #24
 80019be:	af04      	add	r7, sp, #16
 80019c0:	6078      	str	r0, [r7, #4]
 80019c2:	460b      	mov	r3, r1
 80019c4:	807b      	strh	r3, [r7, #2]
 80019c6:	4613      	mov	r3, r2
 80019c8:	707b      	strb	r3, [r7, #1]
	return HAL_I2C_Mem_Write(lis3dh->i2c, lis3dh->i2c_addr, reg, 1, &data, 1, TIMEOUT_MS);
 80019ca:	687b      	ldr	r3, [r7, #4]
 80019cc:	6818      	ldr	r0, [r3, #0]
 80019ce:	687b      	ldr	r3, [r7, #4]
 80019d0:	8899      	ldrh	r1, [r3, #4]
 80019d2:	887a      	ldrh	r2, [r7, #2]
 80019d4:	2332      	movs	r3, #50	; 0x32
 80019d6:	9302      	str	r3, [sp, #8]
 80019d8:	2301      	movs	r3, #1
 80019da:	9301      	str	r3, [sp, #4]
 80019dc:	1c7b      	adds	r3, r7, #1
 80019de:	9300      	str	r3, [sp, #0]
 80019e0:	2301      	movs	r3, #1
 80019e2:	f001 fe7d 	bl	80036e0 <HAL_I2C_Mem_Write>
 80019e6:	4603      	mov	r3, r0
}
 80019e8:	4618      	mov	r0, r3
 80019ea:	3708      	adds	r7, #8
 80019ec:	46bd      	mov	sp, r7
 80019ee:	bd80      	pop	{r7, pc}

080019f0 <lis3dh_get_xyz>:

HAL_StatusTypeDef lis3dh_get_xyz(lis3dh_t* lis3dh) {
 80019f0:	b580      	push	{r7, lr}
 80019f2:	b088      	sub	sp, #32
 80019f4:	af04      	add	r7, sp, #16
 80019f6:	6078      	str	r0, [r7, #4]
	if (lis3dh->bufsize < 6) return HAL_ERROR;
 80019f8:	687b      	ldr	r3, [r7, #4]
 80019fa:	8b1b      	ldrh	r3, [r3, #24]
 80019fc:	2b05      	cmp	r3, #5
 80019fe:	d801      	bhi.n	8001a04 <lis3dh_get_xyz+0x14>
 8001a00:	2301      	movs	r3, #1
 8001a02:	e04b      	b.n	8001a9c <lis3dh_get_xyz+0xac>
	HAL_StatusTypeDef status = HAL_I2C_Mem_Read(
			lis3dh->i2c,
 8001a04:	687b      	ldr	r3, [r7, #4]
 8001a06:	6818      	ldr	r0, [r3, #0]
			lis3dh->i2c_addr | I2C_READ_BIT,
 8001a08:	687b      	ldr	r3, [r7, #4]
 8001a0a:	889b      	ldrh	r3, [r3, #4]
	HAL_StatusTypeDef status = HAL_I2C_Mem_Read(
 8001a0c:	f043 0301 	orr.w	r3, r3, #1
 8001a10:	b299      	uxth	r1, r3
 8001a12:	687b      	ldr	r3, [r7, #4]
 8001a14:	69db      	ldr	r3, [r3, #28]
 8001a16:	2232      	movs	r2, #50	; 0x32
 8001a18:	9202      	str	r2, [sp, #8]
 8001a1a:	2206      	movs	r2, #6
 8001a1c:	9201      	str	r2, [sp, #4]
 8001a1e:	9300      	str	r3, [sp, #0]
 8001a20:	2301      	movs	r3, #1
 8001a22:	22a8      	movs	r2, #168	; 0xa8
 8001a24:	f001 ff70 	bl	8003908 <HAL_I2C_Mem_Read>
 8001a28:	4603      	mov	r3, r0
 8001a2a:	73fb      	strb	r3, [r7, #15]
			1,
			lis3dh->buf,
			6,
			TIMEOUT_MS);

	if (status != HAL_OK) {
 8001a2c:	7bfb      	ldrb	r3, [r7, #15]
 8001a2e:	2b00      	cmp	r3, #0
 8001a30:	d00d      	beq.n	8001a4e <lis3dh_get_xyz+0x5e>
		lis3dh->x = -1;
 8001a32:	687b      	ldr	r3, [r7, #4]
 8001a34:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001a38:	609a      	str	r2, [r3, #8]
		lis3dh->y = -1;
 8001a3a:	687b      	ldr	r3, [r7, #4]
 8001a3c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001a40:	60da      	str	r2, [r3, #12]
		lis3dh->z = -1;
 8001a42:	687b      	ldr	r3, [r7, #4]
 8001a44:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001a48:	611a      	str	r2, [r3, #16]
		return status;
 8001a4a:	7bfb      	ldrb	r3, [r7, #15]
 8001a4c:	e026      	b.n	8001a9c <lis3dh_get_xyz+0xac>
	}

	lis3dh->x = (int) (((int8_t) lis3dh->buf[1]) << 8) | lis3dh->buf[0];
 8001a4e:	687b      	ldr	r3, [r7, #4]
 8001a50:	69db      	ldr	r3, [r3, #28]
 8001a52:	3301      	adds	r3, #1
 8001a54:	781b      	ldrb	r3, [r3, #0]
 8001a56:	b25b      	sxtb	r3, r3
 8001a58:	021b      	lsls	r3, r3, #8
 8001a5a:	687a      	ldr	r2, [r7, #4]
 8001a5c:	69d2      	ldr	r2, [r2, #28]
 8001a5e:	7812      	ldrb	r2, [r2, #0]
 8001a60:	431a      	orrs	r2, r3
 8001a62:	687b      	ldr	r3, [r7, #4]
 8001a64:	609a      	str	r2, [r3, #8]
	lis3dh->y = (int) (((int8_t) lis3dh->buf[3]) << 8) | lis3dh->buf[2];
 8001a66:	687b      	ldr	r3, [r7, #4]
 8001a68:	69db      	ldr	r3, [r3, #28]
 8001a6a:	3303      	adds	r3, #3
 8001a6c:	781b      	ldrb	r3, [r3, #0]
 8001a6e:	b25b      	sxtb	r3, r3
 8001a70:	021b      	lsls	r3, r3, #8
 8001a72:	687a      	ldr	r2, [r7, #4]
 8001a74:	69d2      	ldr	r2, [r2, #28]
 8001a76:	3202      	adds	r2, #2
 8001a78:	7812      	ldrb	r2, [r2, #0]
 8001a7a:	431a      	orrs	r2, r3
 8001a7c:	687b      	ldr	r3, [r7, #4]
 8001a7e:	60da      	str	r2, [r3, #12]
	lis3dh->z = (int) (((int8_t) lis3dh->buf[5]) << 8) | lis3dh->buf[4];
 8001a80:	687b      	ldr	r3, [r7, #4]
 8001a82:	69db      	ldr	r3, [r3, #28]
 8001a84:	3305      	adds	r3, #5
 8001a86:	781b      	ldrb	r3, [r3, #0]
 8001a88:	b25b      	sxtb	r3, r3
 8001a8a:	021b      	lsls	r3, r3, #8
 8001a8c:	687a      	ldr	r2, [r7, #4]
 8001a8e:	69d2      	ldr	r2, [r2, #28]
 8001a90:	3204      	adds	r2, #4
 8001a92:	7812      	ldrb	r2, [r2, #0]
 8001a94:	431a      	orrs	r2, r3
 8001a96:	687b      	ldr	r3, [r7, #4]
 8001a98:	611a      	str	r2, [r3, #16]

	return HAL_OK;
 8001a9a:	2300      	movs	r3, #0
}
 8001a9c:	4618      	mov	r0, r3
 8001a9e:	3710      	adds	r7, #16
 8001aa0:	46bd      	mov	sp, r7
 8001aa2:	bd80      	pop	{r7, pc}

08001aa4 <get_lat>:
double lat;
double lon;
double alt;

double get_lat(char *gga)
{
 8001aa4:	b580      	push	{r7, lr}
 8001aa6:	b0c6      	sub	sp, #280	; 0x118
 8001aa8:	af00      	add	r7, sp, #0
 8001aaa:	f507 738c 	add.w	r3, r7, #280	; 0x118
 8001aae:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8001ab2:	6018      	str	r0, [r3, #0]
	double latitude = 0.0;
 8001ab4:	f04f 0200 	mov.w	r2, #0
 8001ab8:	f04f 0300 	mov.w	r3, #0
 8001abc:	e9c7 2344 	strd	r2, r3, [r7, #272]	; 0x110

	char gga_cpy[256];
	strncpy(gga_cpy, gga, 256);
 8001ac0:	f507 738c 	add.w	r3, r7, #280	; 0x118
 8001ac4:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8001ac8:	f107 000c 	add.w	r0, r7, #12
 8001acc:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001ad0:	6819      	ldr	r1, [r3, #0]
 8001ad2:	f006 fbb1 	bl	8008238 <strncpy>

	char *token = strtok(gga_cpy, ",");
 8001ad6:	f107 030c 	add.w	r3, r7, #12
 8001ada:	4919      	ldr	r1, [pc, #100]	; (8001b40 <get_lat+0x9c>)
 8001adc:	4618      	mov	r0, r3
 8001ade:	f006 fbbf 	bl	8008260 <strtok>
 8001ae2:	f8c7 010c 	str.w	r0, [r7, #268]	; 0x10c

	while (token != NULL)
 8001ae6:	e01b      	b.n	8001b20 <get_lat+0x7c>
	{
		if ((strcmp(token, "N") == 0) || (strcmp(token, "S") == 0))
 8001ae8:	4916      	ldr	r1, [pc, #88]	; (8001b44 <get_lat+0xa0>)
 8001aea:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 8001aee:	f7fe fbc7 	bl	8000280 <strcmp>
 8001af2:	4603      	mov	r3, r0
 8001af4:	2b00      	cmp	r3, #0
 8001af6:	d017      	beq.n	8001b28 <get_lat+0x84>
 8001af8:	4913      	ldr	r1, [pc, #76]	; (8001b48 <get_lat+0xa4>)
 8001afa:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 8001afe:	f7fe fbbf 	bl	8000280 <strcmp>
 8001b02:	4603      	mov	r3, r0
 8001b04:	2b00      	cmp	r3, #0
 8001b06:	d00f      	beq.n	8001b28 <get_lat+0x84>
		{
			break;
		}
		else
		{
			latitude = atof(token);
 8001b08:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 8001b0c:	f004 ffc0 	bl	8006a90 <atof>
 8001b10:	ed87 0b44 	vstr	d0, [r7, #272]	; 0x110
		}
			token = strtok(NULL, ",");
 8001b14:	490a      	ldr	r1, [pc, #40]	; (8001b40 <get_lat+0x9c>)
 8001b16:	2000      	movs	r0, #0
 8001b18:	f006 fba2 	bl	8008260 <strtok>
 8001b1c:	f8c7 010c 	str.w	r0, [r7, #268]	; 0x10c
	while (token != NULL)
 8001b20:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8001b24:	2b00      	cmp	r3, #0
 8001b26:	d1df      	bne.n	8001ae8 <get_lat+0x44>
	}

		return latitude;
 8001b28:	e9d7 2344 	ldrd	r2, r3, [r7, #272]	; 0x110
 8001b2c:	ec43 2b17 	vmov	d7, r2, r3
}
 8001b30:	eeb0 0a47 	vmov.f32	s0, s14
 8001b34:	eef0 0a67 	vmov.f32	s1, s15
 8001b38:	f507 778c 	add.w	r7, r7, #280	; 0x118
 8001b3c:	46bd      	mov	sp, r7
 8001b3e:	bd80      	pop	{r7, pc}
 8001b40:	0800af18 	.word	0x0800af18
 8001b44:	0800af1c 	.word	0x0800af1c
 8001b48:	0800af20 	.word	0x0800af20

08001b4c <get_lon>:

double get_lon(char *gga)
{
 8001b4c:	b580      	push	{r7, lr}
 8001b4e:	b0c6      	sub	sp, #280	; 0x118
 8001b50:	af00      	add	r7, sp, #0
 8001b52:	f507 738c 	add.w	r3, r7, #280	; 0x118
 8001b56:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8001b5a:	6018      	str	r0, [r3, #0]
	double longitude = 0.0;
 8001b5c:	f04f 0200 	mov.w	r2, #0
 8001b60:	f04f 0300 	mov.w	r3, #0
 8001b64:	e9c7 2344 	strd	r2, r3, [r7, #272]	; 0x110

	char gga_cpy[256];
	strncpy(gga_cpy, gga, 256);
 8001b68:	f507 738c 	add.w	r3, r7, #280	; 0x118
 8001b6c:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8001b70:	f107 000c 	add.w	r0, r7, #12
 8001b74:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001b78:	6819      	ldr	r1, [r3, #0]
 8001b7a:	f006 fb5d 	bl	8008238 <strncpy>

	char *token = strtok(gga_cpy, ",");
 8001b7e:	f107 030c 	add.w	r3, r7, #12
 8001b82:	4919      	ldr	r1, [pc, #100]	; (8001be8 <get_lon+0x9c>)
 8001b84:	4618      	mov	r0, r3
 8001b86:	f006 fb6b 	bl	8008260 <strtok>
 8001b8a:	f8c7 010c 	str.w	r0, [r7, #268]	; 0x10c

	while (token != NULL)
 8001b8e:	e01b      	b.n	8001bc8 <get_lon+0x7c>
	{
		if ((strcmp(token, "W") == 0) || (strcmp(token, "E") == 0))
 8001b90:	4916      	ldr	r1, [pc, #88]	; (8001bec <get_lon+0xa0>)
 8001b92:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 8001b96:	f7fe fb73 	bl	8000280 <strcmp>
 8001b9a:	4603      	mov	r3, r0
 8001b9c:	2b00      	cmp	r3, #0
 8001b9e:	d017      	beq.n	8001bd0 <get_lon+0x84>
 8001ba0:	4913      	ldr	r1, [pc, #76]	; (8001bf0 <get_lon+0xa4>)
 8001ba2:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 8001ba6:	f7fe fb6b 	bl	8000280 <strcmp>
 8001baa:	4603      	mov	r3, r0
 8001bac:	2b00      	cmp	r3, #0
 8001bae:	d00f      	beq.n	8001bd0 <get_lon+0x84>
		{
			break;
		}
		else
		{
			longitude = atof(token);
 8001bb0:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 8001bb4:	f004 ff6c 	bl	8006a90 <atof>
 8001bb8:	ed87 0b44 	vstr	d0, [r7, #272]	; 0x110
		}
			token = strtok(NULL, ",");
 8001bbc:	490a      	ldr	r1, [pc, #40]	; (8001be8 <get_lon+0x9c>)
 8001bbe:	2000      	movs	r0, #0
 8001bc0:	f006 fb4e 	bl	8008260 <strtok>
 8001bc4:	f8c7 010c 	str.w	r0, [r7, #268]	; 0x10c
	while (token != NULL)
 8001bc8:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8001bcc:	2b00      	cmp	r3, #0
 8001bce:	d1df      	bne.n	8001b90 <get_lon+0x44>
	}

		return longitude;
 8001bd0:	e9d7 2344 	ldrd	r2, r3, [r7, #272]	; 0x110
 8001bd4:	ec43 2b17 	vmov	d7, r2, r3
}
 8001bd8:	eeb0 0a47 	vmov.f32	s0, s14
 8001bdc:	eef0 0a67 	vmov.f32	s1, s15
 8001be0:	f507 778c 	add.w	r7, r7, #280	; 0x118
 8001be4:	46bd      	mov	sp, r7
 8001be6:	bd80      	pop	{r7, pc}
 8001be8:	0800af18 	.word	0x0800af18
 8001bec:	0800af24 	.word	0x0800af24
 8001bf0:	0800af28 	.word	0x0800af28

08001bf4 <get_alt>:

double get_alt(char *gga)
{
 8001bf4:	b580      	push	{r7, lr}
 8001bf6:	b0c6      	sub	sp, #280	; 0x118
 8001bf8:	af00      	add	r7, sp, #0
 8001bfa:	f507 738c 	add.w	r3, r7, #280	; 0x118
 8001bfe:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8001c02:	6018      	str	r0, [r3, #0]
	double altitude = 0.0;
 8001c04:	f04f 0200 	mov.w	r2, #0
 8001c08:	f04f 0300 	mov.w	r3, #0
 8001c0c:	e9c7 2344 	strd	r2, r3, [r7, #272]	; 0x110

	char gga_cpy[256];
	strncpy(gga_cpy, gga, 256);
 8001c10:	f507 738c 	add.w	r3, r7, #280	; 0x118
 8001c14:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8001c18:	f107 000c 	add.w	r0, r7, #12
 8001c1c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001c20:	6819      	ldr	r1, [r3, #0]
 8001c22:	f006 fb09 	bl	8008238 <strncpy>

	char *token = strtok(gga_cpy, ",");
 8001c26:	f107 030c 	add.w	r3, r7, #12
 8001c2a:	4916      	ldr	r1, [pc, #88]	; (8001c84 <get_alt+0x90>)
 8001c2c:	4618      	mov	r0, r3
 8001c2e:	f006 fb17 	bl	8008260 <strtok>
 8001c32:	f8c7 010c 	str.w	r0, [r7, #268]	; 0x10c

	while (token != NULL)
 8001c36:	e013      	b.n	8001c60 <get_alt+0x6c>
	{
		if (strcmp(token, "M") == 0)
 8001c38:	4913      	ldr	r1, [pc, #76]	; (8001c88 <get_alt+0x94>)
 8001c3a:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 8001c3e:	f7fe fb1f 	bl	8000280 <strcmp>
 8001c42:	4603      	mov	r3, r0
 8001c44:	2b00      	cmp	r3, #0
 8001c46:	d010      	beq.n	8001c6a <get_alt+0x76>
		{
			break;
		}
		else
		{
			altitude = atof(token);
 8001c48:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 8001c4c:	f004 ff20 	bl	8006a90 <atof>
 8001c50:	ed87 0b44 	vstr	d0, [r7, #272]	; 0x110
		}
			token = strtok(NULL, ",");
 8001c54:	490b      	ldr	r1, [pc, #44]	; (8001c84 <get_alt+0x90>)
 8001c56:	2000      	movs	r0, #0
 8001c58:	f006 fb02 	bl	8008260 <strtok>
 8001c5c:	f8c7 010c 	str.w	r0, [r7, #268]	; 0x10c
	while (token != NULL)
 8001c60:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8001c64:	2b00      	cmp	r3, #0
 8001c66:	d1e7      	bne.n	8001c38 <get_alt+0x44>
 8001c68:	e000      	b.n	8001c6c <get_alt+0x78>
			break;
 8001c6a:	bf00      	nop
	}

		return altitude;
 8001c6c:	e9d7 2344 	ldrd	r2, r3, [r7, #272]	; 0x110
 8001c70:	ec43 2b17 	vmov	d7, r2, r3
}
 8001c74:	eeb0 0a47 	vmov.f32	s0, s14
 8001c78:	eef0 0a67 	vmov.f32	s1, s15
 8001c7c:	f507 778c 	add.w	r7, r7, #280	; 0x118
 8001c80:	46bd      	mov	sp, r7
 8001c82:	bd80      	pop	{r7, pc}
 8001c84:	0800af18 	.word	0x0800af18
 8001c88:	0800af2c 	.word	0x0800af2c

08001c8c <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 8001c8c:	b580      	push	{r7, lr}
 8001c8e:	b082      	sub	sp, #8
 8001c90:	af00      	add	r7, sp, #0
 8001c92:	6078      	str	r0, [r7, #4]
    if (huart == &huart2) {
 8001c94:	687b      	ldr	r3, [r7, #4]
 8001c96:	4a2d      	ldr	r2, [pc, #180]	; (8001d4c <HAL_UART_RxCpltCallback+0xc0>)
 8001c98:	4293      	cmp	r3, r2
 8001c9a:	d153      	bne.n	8001d44 <HAL_UART_RxCpltCallback+0xb8>

        nmea_buf[i++] = nmea;
 8001c9c:	4b2c      	ldr	r3, [pc, #176]	; (8001d50 <HAL_UART_RxCpltCallback+0xc4>)
 8001c9e:	781b      	ldrb	r3, [r3, #0]
 8001ca0:	1c5a      	adds	r2, r3, #1
 8001ca2:	b2d1      	uxtb	r1, r2
 8001ca4:	4a2a      	ldr	r2, [pc, #168]	; (8001d50 <HAL_UART_RxCpltCallback+0xc4>)
 8001ca6:	7011      	strb	r1, [r2, #0]
 8001ca8:	461a      	mov	r2, r3
 8001caa:	4b2a      	ldr	r3, [pc, #168]	; (8001d54 <HAL_UART_RxCpltCallback+0xc8>)
 8001cac:	7819      	ldrb	r1, [r3, #0]
 8001cae:	4b2a      	ldr	r3, [pc, #168]	; (8001d58 <HAL_UART_RxCpltCallback+0xcc>)
 8001cb0:	5499      	strb	r1, [r3, r2]
        //char buf1[16];
        //char buf2[16];

        if (nmea == '\n' || i >= sizeof(nmea_buf) - 1) {
 8001cb2:	4b28      	ldr	r3, [pc, #160]	; (8001d54 <HAL_UART_RxCpltCallback+0xc8>)
 8001cb4:	781b      	ldrb	r3, [r3, #0]
 8001cb6:	2b0a      	cmp	r3, #10
 8001cb8:	d003      	beq.n	8001cc2 <HAL_UART_RxCpltCallback+0x36>
 8001cba:	4b25      	ldr	r3, [pc, #148]	; (8001d50 <HAL_UART_RxCpltCallback+0xc4>)
 8001cbc:	781b      	ldrb	r3, [r3, #0]
 8001cbe:	2bff      	cmp	r3, #255	; 0xff
 8001cc0:	d13b      	bne.n	8001d3a <HAL_UART_RxCpltCallback+0xae>
        	if(nmea_buf[3]=='G' && nmea_buf[4]=='G' && nmea_buf[5] == 'A')
 8001cc2:	4b25      	ldr	r3, [pc, #148]	; (8001d58 <HAL_UART_RxCpltCallback+0xcc>)
 8001cc4:	78db      	ldrb	r3, [r3, #3]
 8001cc6:	2b47      	cmp	r3, #71	; 0x47
 8001cc8:	d12e      	bne.n	8001d28 <HAL_UART_RxCpltCallback+0x9c>
 8001cca:	4b23      	ldr	r3, [pc, #140]	; (8001d58 <HAL_UART_RxCpltCallback+0xcc>)
 8001ccc:	791b      	ldrb	r3, [r3, #4]
 8001cce:	2b47      	cmp	r3, #71	; 0x47
 8001cd0:	d12a      	bne.n	8001d28 <HAL_UART_RxCpltCallback+0x9c>
 8001cd2:	4b21      	ldr	r3, [pc, #132]	; (8001d58 <HAL_UART_RxCpltCallback+0xcc>)
 8001cd4:	795b      	ldrb	r3, [r3, #5]
 8001cd6:	2b41      	cmp	r3, #65	; 0x41
 8001cd8:	d126      	bne.n	8001d28 <HAL_UART_RxCpltCallback+0x9c>
        	{
        		memcpy(nmea_gga, nmea_buf, 256);
 8001cda:	4a20      	ldr	r2, [pc, #128]	; (8001d5c <HAL_UART_RxCpltCallback+0xd0>)
 8001cdc:	4b1e      	ldr	r3, [pc, #120]	; (8001d58 <HAL_UART_RxCpltCallback+0xcc>)
 8001cde:	4610      	mov	r0, r2
 8001ce0:	4619      	mov	r1, r3
 8001ce2:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001ce6:	461a      	mov	r2, r3
 8001ce8:	f006 fb4e 	bl	8008388 <memcpy>
        		lat = get_lat(nmea_gga);
 8001cec:	481b      	ldr	r0, [pc, #108]	; (8001d5c <HAL_UART_RxCpltCallback+0xd0>)
 8001cee:	f7ff fed9 	bl	8001aa4 <get_lat>
 8001cf2:	eeb0 7a40 	vmov.f32	s14, s0
 8001cf6:	eef0 7a60 	vmov.f32	s15, s1
 8001cfa:	4b19      	ldr	r3, [pc, #100]	; (8001d60 <HAL_UART_RxCpltCallback+0xd4>)
 8001cfc:	ed83 7b00 	vstr	d7, [r3]
        		lon = get_lon(nmea_gga);
 8001d00:	4816      	ldr	r0, [pc, #88]	; (8001d5c <HAL_UART_RxCpltCallback+0xd0>)
 8001d02:	f7ff ff23 	bl	8001b4c <get_lon>
 8001d06:	eeb0 7a40 	vmov.f32	s14, s0
 8001d0a:	eef0 7a60 	vmov.f32	s15, s1
 8001d0e:	4b15      	ldr	r3, [pc, #84]	; (8001d64 <HAL_UART_RxCpltCallback+0xd8>)
 8001d10:	ed83 7b00 	vstr	d7, [r3]
        		alt = get_alt(nmea_gga);
 8001d14:	4811      	ldr	r0, [pc, #68]	; (8001d5c <HAL_UART_RxCpltCallback+0xd0>)
 8001d16:	f7ff ff6d 	bl	8001bf4 <get_alt>
 8001d1a:	eeb0 7a40 	vmov.f32	s14, s0
 8001d1e:	eef0 7a60 	vmov.f32	s15, s1
 8001d22:	4b11      	ldr	r3, [pc, #68]	; (8001d68 <HAL_UART_RxCpltCallback+0xdc>)
 8001d24:	ed83 7b00 	vstr	d7, [r3]

        	}

            memset(nmea_buf, 0, sizeof(nmea_buf));
 8001d28:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001d2c:	2100      	movs	r1, #0
 8001d2e:	480a      	ldr	r0, [pc, #40]	; (8001d58 <HAL_UART_RxCpltCallback+0xcc>)
 8001d30:	f006 faf2 	bl	8008318 <memset>
            i = 0;
 8001d34:	4b06      	ldr	r3, [pc, #24]	; (8001d50 <HAL_UART_RxCpltCallback+0xc4>)
 8001d36:	2200      	movs	r2, #0
 8001d38:	701a      	strb	r2, [r3, #0]
        }

        // Start the next reception
        HAL_UART_Receive_IT(&huart2, &nmea, 1);
 8001d3a:	2201      	movs	r2, #1
 8001d3c:	4905      	ldr	r1, [pc, #20]	; (8001d54 <HAL_UART_RxCpltCallback+0xc8>)
 8001d3e:	4803      	ldr	r0, [pc, #12]	; (8001d4c <HAL_UART_RxCpltCallback+0xc0>)
 8001d40:	f003 fc14 	bl	800556c <HAL_UART_Receive_IT>
    }
}
 8001d44:	bf00      	nop
 8001d46:	3708      	adds	r7, #8
 8001d48:	46bd      	mov	sp, r7
 8001d4a:	bd80      	pop	{r7, pc}
 8001d4c:	20000768 	.word	0x20000768
 8001d50:	20000a1c 	.word	0x20000a1c
 8001d54:	20000819 	.word	0x20000819
 8001d58:	2000081c 	.word	0x2000081c
 8001d5c:	2000091c 	.word	0x2000091c
 8001d60:	20000a20 	.word	0x20000a20
 8001d64:	20000a28 	.word	0x20000a28
 8001d68:	20000a30 	.word	0x20000a30

08001d6c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001d6c:	b580      	push	{r7, lr}
 8001d6e:	f5ad 7d78 	sub.w	sp, sp, #992	; 0x3e0
 8001d72:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001d74:	f001 f844 	bl	8002e00 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001d78:	f000 f9dc 	bl	8002134 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001d7c:	f000 fada 	bl	8002334 <MX_GPIO_Init>
  MX_I2C1_Init();
 8001d80:	f000 fa28 	bl	80021d4 <MX_I2C1_Init>
  MX_I2C3_Init();
 8001d84:	f000 fa66 	bl	8002254 <MX_I2C3_Init>
  MX_USART2_UART_Init();
 8001d88:	f000 faa4 	bl	80022d4 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
  char buf[16] = "Start GPS";
 8001d8c:	4ad9      	ldr	r2, [pc, #868]	; (80020f4 <main+0x388>)
 8001d8e:	f507 736c 	add.w	r3, r7, #944	; 0x3b0
 8001d92:	ca07      	ldmia	r2, {r0, r1, r2}
 8001d94:	c303      	stmia	r3!, {r0, r1}
 8001d96:	801a      	strh	r2, [r3, #0]
 8001d98:	f207 33ba 	addw	r3, r7, #954	; 0x3ba
 8001d9c:	2200      	movs	r2, #0
 8001d9e:	601a      	str	r2, [r3, #0]
 8001da0:	809a      	strh	r2, [r3, #4]
  char buf1[16];
  char buf2[16];
  //ssd1306_TestAll();
  ssd1306_Init();
 8001da2:	f000 fbbf 	bl	8002524 <ssd1306_Init>
  ssd1306_Fill(Black);
 8001da6:	2000      	movs	r0, #0
 8001da8:	f000 fc32 	bl	8002610 <ssd1306_Fill>
  ssd1306_SetCursor(2,0);
 8001dac:	2100      	movs	r1, #0
 8001dae:	2002      	movs	r0, #2
 8001db0:	f000 fd88 	bl	80028c4 <ssd1306_SetCursor>
  ssd1306_WriteString(buf, Font_11x18, White);
 8001db4:	4ad0      	ldr	r2, [pc, #832]	; (80020f8 <main+0x38c>)
 8001db6:	f507 706c 	add.w	r0, r7, #944	; 0x3b0
 8001dba:	2301      	movs	r3, #1
 8001dbc:	ca06      	ldmia	r2, {r1, r2}
 8001dbe:	f000 fd5b 	bl	8002878 <ssd1306_WriteString>
  ssd1306_UpdateScreen();
 8001dc2:	f000 fc49 	bl	8002658 <ssd1306_UpdateScreen>
  /* USER CODE END 2 */
  status = lis3dh_init(&lis3dh, &hi2c3, xyz_buf, 6);
 8001dc6:	2306      	movs	r3, #6
 8001dc8:	4acc      	ldr	r2, [pc, #816]	; (80020fc <main+0x390>)
 8001dca:	49cd      	ldr	r1, [pc, #820]	; (8002100 <main+0x394>)
 8001dcc:	48cd      	ldr	r0, [pc, #820]	; (8002104 <main+0x398>)
 8001dce:	f7ff fd53 	bl	8001878 <lis3dh_init>
 8001dd2:	4603      	mov	r3, r0
 8001dd4:	461a      	mov	r2, r3
 8001dd6:	4bcc      	ldr	r3, [pc, #816]	; (8002108 <main+0x39c>)
 8001dd8:	701a      	strb	r2, [r3, #0]
          	 //HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_13);
            // Unable to communicate with device!
          }


          char message[64] = "Starting Up";
 8001dda:	4acc      	ldr	r2, [pc, #816]	; (800210c <main+0x3a0>)
 8001ddc:	f507 7354 	add.w	r3, r7, #848	; 0x350
 8001de0:	6810      	ldr	r0, [r2, #0]
 8001de2:	6851      	ldr	r1, [r2, #4]
 8001de4:	6892      	ldr	r2, [r2, #8]
 8001de6:	c307      	stmia	r3!, {r0, r1, r2}
 8001de8:	f507 7357 	add.w	r3, r7, #860	; 0x35c
 8001dec:	2234      	movs	r2, #52	; 0x34
 8001dee:	2100      	movs	r1, #0
 8001df0:	4618      	mov	r0, r3
 8001df2:	f006 fa91 	bl	8008318 <memset>
            //ssd1306_TestAll();
            ssd1306_Init();
 8001df6:	f000 fb95 	bl	8002524 <ssd1306_Init>
            ssd1306_Fill(Black);
 8001dfa:	2000      	movs	r0, #0
 8001dfc:	f000 fc08 	bl	8002610 <ssd1306_Fill>
            ssd1306_SetCursor(2,0);
 8001e00:	2100      	movs	r1, #0
 8001e02:	2002      	movs	r0, #2
 8001e04:	f000 fd5e 	bl	80028c4 <ssd1306_SetCursor>
            ssd1306_WriteString(message, Font_11x18, White);
 8001e08:	4abb      	ldr	r2, [pc, #748]	; (80020f8 <main+0x38c>)
 8001e0a:	f507 7054 	add.w	r0, r7, #848	; 0x350
 8001e0e:	2301      	movs	r3, #1
 8001e10:	ca06      	ldmia	r2, {r1, r2}
 8001e12:	f000 fd31 	bl	8002878 <ssd1306_WriteString>
            ssd1306_UpdateScreen();
 8001e16:	f000 fc1f 	bl	8002658 <ssd1306_UpdateScreen>
    /* USER CODE END 2 */

    /* Infinite loop */
    /* USER CODE BEGIN WHILE */
          uint8_t  num_steps  = 0;
 8001e1a:	2300      	movs	r3, #0
 8001e1c:	f887 33df 	strb.w	r3, [r7, #991]	; 0x3df
          //char buf[20];
          HAL_UART_Receive_IT(&huart2, &nmea, 1);
 8001e20:	2201      	movs	r2, #1
 8001e22:	49bb      	ldr	r1, [pc, #748]	; (8002110 <main+0x3a4>)
 8001e24:	48bb      	ldr	r0, [pc, #748]	; (8002114 <main+0x3a8>)
 8001e26:	f003 fba1 	bl	800556c <HAL_UART_Receive_IT>
          while (1)
                {
          	//hold the data from the CSV file in a fifo-like data structure where the accelerometer data looks like
          	        	    	    //[x1,y1,z1,x2,y2,z2...x400,y400,z400]
          	        	    	    int8_t acc[NUM_SAMPLES_IN_CSV_FILE*3] = {0};
 8001e2a:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8001e2e:	f5a3 733a 	sub.w	r3, r3, #744	; 0x2e8
 8001e32:	2200      	movs	r2, #0
 8001e34:	601a      	str	r2, [r3, #0]
 8001e36:	3304      	adds	r3, #4
 8001e38:	f44f 7215 	mov.w	r2, #596	; 0x254
 8001e3c:	2100      	movs	r1, #0
 8001e3e:	4618      	mov	r0, r3
 8001e40:	f006 fa6a 	bl	8008318 <memset>
          	        	    	    uint16_t i    = 0;
 8001e44:	2300      	movs	r3, #0
 8001e46:	f8a7 33dc 	strh.w	r3, [r7, #988]	; 0x3dc
          	        	    	    float    temp = 0;
 8001e4a:	f04f 0300 	mov.w	r3, #0
 8001e4e:	f8c7 33d4 	str.w	r3, [r7, #980]	; 0x3d4
          	        	    	    while(i < NUM_SAMPLES_IN_CSV_FILE*3) //while data array is being filled
 8001e52:	e09f      	b.n	8001f94 <main+0x228>
          	        	        	{
          	        	    			  HAL_Delay(50); //20Hz
 8001e54:	2032      	movs	r0, #50	; 0x32
 8001e56:	f001 f84f 	bl	8002ef8 <HAL_Delay>
          	        	    			  HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_13);
 8001e5a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001e5e:	48ae      	ldr	r0, [pc, #696]	; (8002118 <main+0x3ac>)
 8001e60:	f001 fb88 	bl	8003574 <HAL_GPIO_TogglePin>

          	        	    			//scaling factor to convert the decimal data to int8 integers. calculated in matlab by taking the absolute value of all the data
          	        	    			//and then calculating the max of that data. then divide that by 127 to get the scaling factor
          	        	    			  float scale_factor = 55.3293;
 8001e64:	4bad      	ldr	r3, [pc, #692]	; (800211c <main+0x3b0>)
 8001e66:	f8c7 33cc 	str.w	r3, [r7, #972]	; 0x3cc

          	        					  if (lis3dh_xyz_available(&lis3dh)) {
 8001e6a:	48a6      	ldr	r0, [pc, #664]	; (8002104 <main+0x398>)
 8001e6c:	f7ff fd60 	bl	8001930 <lis3dh_xyz_available>
 8001e70:	4603      	mov	r3, r0
 8001e72:	2b00      	cmp	r3, #0
 8001e74:	f000 808e 	beq.w	8001f94 <main+0x228>
          	        							status = lis3dh_get_xyz(&lis3dh);
 8001e78:	48a2      	ldr	r0, [pc, #648]	; (8002104 <main+0x398>)
 8001e7a:	f7ff fdb9 	bl	80019f0 <lis3dh_get_xyz>
 8001e7e:	4603      	mov	r3, r0
 8001e80:	461a      	mov	r2, r3
 8001e82:	4ba1      	ldr	r3, [pc, #644]	; (8002108 <main+0x39c>)
 8001e84:	701a      	strb	r2, [r3, #0]
          	        							float xx = lis3dh.x/16384;
 8001e86:	4b9f      	ldr	r3, [pc, #636]	; (8002104 <main+0x398>)
 8001e88:	689b      	ldr	r3, [r3, #8]
 8001e8a:	2b00      	cmp	r3, #0
 8001e8c:	da02      	bge.n	8001e94 <main+0x128>
 8001e8e:	f503 537f 	add.w	r3, r3, #16320	; 0x3fc0
 8001e92:	333f      	adds	r3, #63	; 0x3f
 8001e94:	139b      	asrs	r3, r3, #14
 8001e96:	ee07 3a90 	vmov	s15, r3
 8001e9a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001e9e:	edc7 7af2 	vstr	s15, [r7, #968]	; 0x3c8
          	        							float yy = lis3dh.y/16384;
 8001ea2:	4b98      	ldr	r3, [pc, #608]	; (8002104 <main+0x398>)
 8001ea4:	68db      	ldr	r3, [r3, #12]
 8001ea6:	2b00      	cmp	r3, #0
 8001ea8:	da02      	bge.n	8001eb0 <main+0x144>
 8001eaa:	f503 537f 	add.w	r3, r3, #16320	; 0x3fc0
 8001eae:	333f      	adds	r3, #63	; 0x3f
 8001eb0:	139b      	asrs	r3, r3, #14
 8001eb2:	ee07 3a90 	vmov	s15, r3
 8001eb6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001eba:	edc7 7af1 	vstr	s15, [r7, #964]	; 0x3c4
          	        							float zz = lis3dh.z/16384;
 8001ebe:	4b91      	ldr	r3, [pc, #580]	; (8002104 <main+0x398>)
 8001ec0:	691b      	ldr	r3, [r3, #16]
 8001ec2:	2b00      	cmp	r3, #0
 8001ec4:	da02      	bge.n	8001ecc <main+0x160>
 8001ec6:	f503 537f 	add.w	r3, r3, #16320	; 0x3fc0
 8001eca:	333f      	adds	r3, #63	; 0x3f
 8001ecc:	139b      	asrs	r3, r3, #14
 8001ece:	ee07 3a90 	vmov	s15, r3
 8001ed2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001ed6:	edc7 7af0 	vstr	s15, [r7, #960]	; 0x3c0

          	        							temp     = roundf(xx*scale_factor);
 8001eda:	ed97 7af2 	vldr	s14, [r7, #968]	; 0x3c8
 8001ede:	edd7 7af3 	vldr	s15, [r7, #972]	; 0x3cc
 8001ee2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001ee6:	eeb0 0a67 	vmov.f32	s0, s15
 8001eea:	f008 ffe5 	bl	800aeb8 <roundf>
 8001eee:	ed87 0af5 	vstr	s0, [r7, #980]	; 0x3d4
          	        							acc[i++] = (int8_t)temp;
 8001ef2:	f8b7 33dc 	ldrh.w	r3, [r7, #988]	; 0x3dc
 8001ef6:	1c5a      	adds	r2, r3, #1
 8001ef8:	f8a7 23dc 	strh.w	r2, [r7, #988]	; 0x3dc
 8001efc:	461a      	mov	r2, r3
 8001efe:	edd7 7af5 	vldr	s15, [r7, #980]	; 0x3d4
 8001f02:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001f06:	edc7 7a01 	vstr	s15, [r7, #4]
 8001f0a:	793b      	ldrb	r3, [r7, #4]
 8001f0c:	b259      	sxtb	r1, r3
 8001f0e:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8001f12:	f5a3 733a 	sub.w	r3, r3, #744	; 0x2e8
 8001f16:	5499      	strb	r1, [r3, r2]

          	        							temp     = roundf(yy*scale_factor);
 8001f18:	ed97 7af1 	vldr	s14, [r7, #964]	; 0x3c4
 8001f1c:	edd7 7af3 	vldr	s15, [r7, #972]	; 0x3cc
 8001f20:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001f24:	eeb0 0a67 	vmov.f32	s0, s15
 8001f28:	f008 ffc6 	bl	800aeb8 <roundf>
 8001f2c:	ed87 0af5 	vstr	s0, [r7, #980]	; 0x3d4
          	        							acc[i++] = (int8_t)temp;
 8001f30:	f8b7 33dc 	ldrh.w	r3, [r7, #988]	; 0x3dc
 8001f34:	1c5a      	adds	r2, r3, #1
 8001f36:	f8a7 23dc 	strh.w	r2, [r7, #988]	; 0x3dc
 8001f3a:	461a      	mov	r2, r3
 8001f3c:	edd7 7af5 	vldr	s15, [r7, #980]	; 0x3d4
 8001f40:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001f44:	edc7 7a01 	vstr	s15, [r7, #4]
 8001f48:	793b      	ldrb	r3, [r7, #4]
 8001f4a:	b259      	sxtb	r1, r3
 8001f4c:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8001f50:	f5a3 733a 	sub.w	r3, r3, #744	; 0x2e8
 8001f54:	5499      	strb	r1, [r3, r2]

          	        							temp     = roundf(zz*scale_factor);
 8001f56:	ed97 7af0 	vldr	s14, [r7, #960]	; 0x3c0
 8001f5a:	edd7 7af3 	vldr	s15, [r7, #972]	; 0x3cc
 8001f5e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001f62:	eeb0 0a67 	vmov.f32	s0, s15
 8001f66:	f008 ffa7 	bl	800aeb8 <roundf>
 8001f6a:	ed87 0af5 	vstr	s0, [r7, #980]	; 0x3d4
          	        							acc[i++] = (int8_t)temp;
 8001f6e:	f8b7 33dc 	ldrh.w	r3, [r7, #988]	; 0x3dc
 8001f72:	1c5a      	adds	r2, r3, #1
 8001f74:	f8a7 23dc 	strh.w	r2, [r7, #988]	; 0x3dc
 8001f78:	461a      	mov	r2, r3
 8001f7a:	edd7 7af5 	vldr	s15, [r7, #980]	; 0x3d4
 8001f7e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001f82:	edc7 7a01 	vstr	s15, [r7, #4]
 8001f86:	793b      	ldrb	r3, [r7, #4]
 8001f88:	b259      	sxtb	r1, r3
 8001f8a:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8001f8e:	f5a3 733a 	sub.w	r3, r3, #744	; 0x2e8
 8001f92:	5499      	strb	r1, [r3, r2]
          	        	    	    while(i < NUM_SAMPLES_IN_CSV_FILE*3) //while data array is being filled
 8001f94:	f8b7 33dc 	ldrh.w	r3, [r7, #988]	; 0x3dc
 8001f98:	f5b3 7f16 	cmp.w	r3, #600	; 0x258
 8001f9c:	f4ff af5a 	bcc.w	8001e54 <main+0xe8>
          	        							// You now have raw acceleration of gravity in lis3dh->x, y, and z.

          	        						  }
          	        	        	  }
          	        	        	  //pass data to step counting algorithm, 4 seconds at a time (which is the WINDOW_LENGTH). put the data into a temporary buffer each loop
          	        	        	      int8_t   data[NUM_TUPLES*3] = {0};
 8001fa0:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 8001fa4:	f5a3 7376 	sub.w	r3, r3, #984	; 0x3d8
 8001fa8:	2200      	movs	r2, #0
 8001faa:	601a      	str	r2, [r3, #0]
 8001fac:	3304      	adds	r3, #4
 8001fae:	22ec      	movs	r2, #236	; 0xec
 8001fb0:	2100      	movs	r1, #0
 8001fb2:	4618      	mov	r0, r3
 8001fb4:	f006 f9b0 	bl	8008318 <memset>
          	        	        	      uint8_t  num_segments       = NUM_SAMPLES_IN_CSV_FILE/(SAMPLING_RATE*WINDOW_LENGTH);
 8001fb8:	2302      	movs	r3, #2
 8001fba:	f887 33d3 	strb.w	r3, [r7, #979]	; 0x3d3
          	        	        	      uint16_t j                  = 0;
 8001fbe:	2300      	movs	r3, #0
 8001fc0:	f8a7 33da 	strh.w	r3, [r7, #986]	; 0x3da

          	        	        	      for (i = 0; i < num_segments; i++) {
 8001fc4:	2300      	movs	r3, #0
 8001fc6:	f8a7 33dc 	strh.w	r3, [r7, #988]	; 0x3dc
 8001fca:	e03e      	b.n	800204a <main+0x2de>
          	        	        	          for (j = SAMPLING_RATE*WINDOW_LENGTH*i*3; j < SAMPLING_RATE*WINDOW_LENGTH*(i+1)*3; j++) {
 8001fcc:	f8b7 33dc 	ldrh.w	r3, [r7, #988]	; 0x3dc
 8001fd0:	461a      	mov	r2, r3
 8001fd2:	0112      	lsls	r2, r2, #4
 8001fd4:	1ad3      	subs	r3, r2, r3
 8001fd6:	011b      	lsls	r3, r3, #4
 8001fd8:	f8a7 33da 	strh.w	r3, [r7, #986]	; 0x3da
 8001fdc:	e019      	b.n	8002012 <main+0x2a6>
          	        	        	              data[j-SAMPLING_RATE*WINDOW_LENGTH*i*3] = acc[j];
 8001fde:	f8b7 13da 	ldrh.w	r1, [r7, #986]	; 0x3da
 8001fe2:	f8b7 03da 	ldrh.w	r0, [r7, #986]	; 0x3da
 8001fe6:	f8b7 23dc 	ldrh.w	r2, [r7, #988]	; 0x3dc
 8001fea:	4613      	mov	r3, r2
 8001fec:	0112      	lsls	r2, r2, #4
 8001fee:	1a9b      	subs	r3, r3, r2
 8001ff0:	011b      	lsls	r3, r3, #4
 8001ff2:	4403      	add	r3, r0
 8001ff4:	f507 7278 	add.w	r2, r7, #992	; 0x3e0
 8001ff8:	f5a2 723a 	sub.w	r2, r2, #744	; 0x2e8
 8001ffc:	5651      	ldrsb	r1, [r2, r1]
 8001ffe:	f507 7278 	add.w	r2, r7, #992	; 0x3e0
 8002002:	f5a2 7276 	sub.w	r2, r2, #984	; 0x3d8
 8002006:	54d1      	strb	r1, [r2, r3]
          	        	        	          for (j = SAMPLING_RATE*WINDOW_LENGTH*i*3; j < SAMPLING_RATE*WINDOW_LENGTH*(i+1)*3; j++) {
 8002008:	f8b7 33da 	ldrh.w	r3, [r7, #986]	; 0x3da
 800200c:	3301      	adds	r3, #1
 800200e:	f8a7 33da 	strh.w	r3, [r7, #986]	; 0x3da
 8002012:	f8b7 13da 	ldrh.w	r1, [r7, #986]	; 0x3da
 8002016:	f8b7 33dc 	ldrh.w	r3, [r7, #988]	; 0x3dc
 800201a:	1c5a      	adds	r2, r3, #1
 800201c:	4613      	mov	r3, r2
 800201e:	011b      	lsls	r3, r3, #4
 8002020:	1a9b      	subs	r3, r3, r2
 8002022:	011b      	lsls	r3, r3, #4
 8002024:	4299      	cmp	r1, r3
 8002026:	dbda      	blt.n	8001fde <main+0x272>
          	        	        	          }
          	        	        	          num_steps += count_steps(data);
 8002028:	f107 0308 	add.w	r3, r7, #8
 800202c:	4618      	mov	r0, r3
 800202e:	f7ff fb0f 	bl	8001650 <count_steps>
 8002032:	4603      	mov	r3, r0
 8002034:	461a      	mov	r2, r3
 8002036:	f897 33df 	ldrb.w	r3, [r7, #991]	; 0x3df
 800203a:	4413      	add	r3, r2
 800203c:	f887 33df 	strb.w	r3, [r7, #991]	; 0x3df
          	        	        	      for (i = 0; i < num_segments; i++) {
 8002040:	f8b7 33dc 	ldrh.w	r3, [r7, #988]	; 0x3dc
 8002044:	3301      	adds	r3, #1
 8002046:	f8a7 33dc 	strh.w	r3, [r7, #988]	; 0x3dc
 800204a:	f897 33d3 	ldrb.w	r3, [r7, #979]	; 0x3d3
 800204e:	b29b      	uxth	r3, r3
 8002050:	f8b7 23dc 	ldrh.w	r2, [r7, #988]	; 0x3dc
 8002054:	429a      	cmp	r2, r3
 8002056:	d3b9      	bcc.n	8001fcc <main+0x260>
          	        	        	      }

          	        	        	      printf("num steps: %i\n\r", num_steps);
 8002058:	f897 33df 	ldrb.w	r3, [r7, #991]	; 0x3df
 800205c:	4619      	mov	r1, r3
 800205e:	4830      	ldr	r0, [pc, #192]	; (8002120 <main+0x3b4>)
 8002060:	f006 f8c6 	bl	80081f0 <iprintf>
          	        	        	      ssd1306_Fill(Black);
 8002064:	2000      	movs	r0, #0
 8002066:	f000 fad3 	bl	8002610 <ssd1306_Fill>
          	        	        	      ssd1306_SetCursor(2,0);
 800206a:	2100      	movs	r1, #0
 800206c:	2002      	movs	r0, #2
 800206e:	f000 fc29 	bl	80028c4 <ssd1306_SetCursor>
          	        	        	      ssd1306_WriteString("Steps:", Font_11x18, White);
 8002072:	4a21      	ldr	r2, [pc, #132]	; (80020f8 <main+0x38c>)
 8002074:	2301      	movs	r3, #1
 8002076:	ca06      	ldmia	r2, {r1, r2}
 8002078:	482a      	ldr	r0, [pc, #168]	; (8002124 <main+0x3b8>)
 800207a:	f000 fbfd 	bl	8002878 <ssd1306_WriteString>
          	        	        	      ssd1306_SetCursor(2,15);
 800207e:	210f      	movs	r1, #15
 8002080:	2002      	movs	r0, #2
 8002082:	f000 fc1f 	bl	80028c4 <ssd1306_SetCursor>
          	        	        	      ssd1306_WriteString(itoa(num_steps,message,10), Font_11x18, White);
 8002086:	f897 33df 	ldrb.w	r3, [r7, #991]	; 0x3df
 800208a:	f507 7154 	add.w	r1, r7, #848	; 0x350
 800208e:	220a      	movs	r2, #10
 8002090:	4618      	mov	r0, r3
 8002092:	f004 fd18 	bl	8006ac6 <itoa>
 8002096:	4a18      	ldr	r2, [pc, #96]	; (80020f8 <main+0x38c>)
 8002098:	2301      	movs	r3, #1
 800209a:	ca06      	ldmia	r2, {r1, r2}
 800209c:	f000 fbec 	bl	8002878 <ssd1306_WriteString>
          	        	        	      ssd1306_SetCursor(2,30);
 80020a0:	211e      	movs	r1, #30
 80020a2:	2002      	movs	r0, #2
 80020a4:	f000 fc0e 	bl	80028c4 <ssd1306_SetCursor>
          	        	        	      //ssd1306_WriteString("Distance:", Font_11x18, White);
          	        	        	      sprintf(buf1,"%0.4f",lat);
 80020a8:	4b1f      	ldr	r3, [pc, #124]	; (8002128 <main+0x3bc>)
 80020aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80020ae:	f507 7068 	add.w	r0, r7, #928	; 0x3a0
 80020b2:	491e      	ldr	r1, [pc, #120]	; (800212c <main+0x3c0>)
 80020b4:	f005 f970 	bl	8007398 <siprintf>
          	        	        	      ssd1306_WriteString(buf1, Font_11x18, White);
 80020b8:	4a0f      	ldr	r2, [pc, #60]	; (80020f8 <main+0x38c>)
 80020ba:	f507 7068 	add.w	r0, r7, #928	; 0x3a0
 80020be:	2301      	movs	r3, #1
 80020c0:	ca06      	ldmia	r2, {r1, r2}
 80020c2:	f000 fbd9 	bl	8002878 <ssd1306_WriteString>
          	        	        	      ssd1306_SetCursor(2,45);
 80020c6:	212d      	movs	r1, #45	; 0x2d
 80020c8:	2002      	movs	r0, #2
 80020ca:	f000 fbfb 	bl	80028c4 <ssd1306_SetCursor>
          	        	        	      //ssd1306_WriteString("20 miles", Font_11x18, White);
          	        	        	      sprintf(buf2,"%0.4f",lon);
 80020ce:	4b18      	ldr	r3, [pc, #96]	; (8002130 <main+0x3c4>)
 80020d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80020d4:	f507 7064 	add.w	r0, r7, #912	; 0x390
 80020d8:	4914      	ldr	r1, [pc, #80]	; (800212c <main+0x3c0>)
 80020da:	f005 f95d 	bl	8007398 <siprintf>
          	        	        	      ssd1306_WriteString(buf2, Font_11x18, White);
 80020de:	4a06      	ldr	r2, [pc, #24]	; (80020f8 <main+0x38c>)
 80020e0:	f507 7064 	add.w	r0, r7, #912	; 0x390
 80020e4:	2301      	movs	r3, #1
 80020e6:	ca06      	ldmia	r2, {r1, r2}
 80020e8:	f000 fbc6 	bl	8002878 <ssd1306_WriteString>
          	        	        	      ssd1306_UpdateScreen();
 80020ec:	f000 fab4 	bl	8002658 <ssd1306_UpdateScreen>
                {
 80020f0:	e69b      	b.n	8001e2a <main+0xbe>
 80020f2:	bf00      	nop
 80020f4:	0800af50 	.word	0x0800af50
 80020f8:	20000014 	.word	0x20000014
 80020fc:	200007f0 	.word	0x200007f0
 8002100:	20000714 	.word	0x20000714
 8002104:	200007f8 	.word	0x200007f8
 8002108:	20000818 	.word	0x20000818
 800210c:	0800af60 	.word	0x0800af60
 8002110:	20000819 	.word	0x20000819
 8002114:	20000768 	.word	0x20000768
 8002118:	48000400 	.word	0x48000400
 800211c:	425d5134 	.word	0x425d5134
 8002120:	0800af30 	.word	0x0800af30
 8002124:	0800af40 	.word	0x0800af40
 8002128:	20000a20 	.word	0x20000a20
 800212c:	0800af48 	.word	0x0800af48
 8002130:	20000a28 	.word	0x20000a28

08002134 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002134:	b580      	push	{r7, lr}
 8002136:	b096      	sub	sp, #88	; 0x58
 8002138:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800213a:	f107 0314 	add.w	r3, r7, #20
 800213e:	2244      	movs	r2, #68	; 0x44
 8002140:	2100      	movs	r1, #0
 8002142:	4618      	mov	r0, r3
 8002144:	f006 f8e8 	bl	8008318 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002148:	463b      	mov	r3, r7
 800214a:	2200      	movs	r2, #0
 800214c:	601a      	str	r2, [r3, #0]
 800214e:	605a      	str	r2, [r3, #4]
 8002150:	609a      	str	r2, [r3, #8]
 8002152:	60da      	str	r2, [r3, #12]
 8002154:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 8002156:	f44f 7000 	mov.w	r0, #512	; 0x200
 800215a:	f002 f957 	bl	800440c <HAL_PWREx_ControlVoltageScaling>
 800215e:	4603      	mov	r3, r0
 8002160:	2b00      	cmp	r3, #0
 8002162:	d001      	beq.n	8002168 <SystemClock_Config+0x34>
  {
    Error_Handler();
 8002164:	f000 f970 	bl	8002448 <Error_Handler>
  }

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 8002168:	2310      	movs	r3, #16
 800216a:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 800216c:	2301      	movs	r3, #1
 800216e:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.MSICalibrationValue = 0;
 8002170:	2300      	movs	r3, #0
 8002172:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 8002174:	2360      	movs	r3, #96	; 0x60
 8002176:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002178:	2302      	movs	r3, #2
 800217a:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 800217c:	2301      	movs	r3, #1
 800217e:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLM = 1;
 8002180:	2301      	movs	r3, #1
 8002182:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLN = 40;
 8002184:	2328      	movs	r3, #40	; 0x28
 8002186:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 8002188:	2302      	movs	r3, #2
 800218a:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 800218c:	2302      	movs	r3, #2
 800218e:	657b      	str	r3, [r7, #84]	; 0x54
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002190:	f107 0314 	add.w	r3, r7, #20
 8002194:	4618      	mov	r0, r3
 8002196:	f002 f98f 	bl	80044b8 <HAL_RCC_OscConfig>
 800219a:	4603      	mov	r3, r0
 800219c:	2b00      	cmp	r3, #0
 800219e:	d001      	beq.n	80021a4 <SystemClock_Config+0x70>
  {
    Error_Handler();
 80021a0:	f000 f952 	bl	8002448 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80021a4:	230f      	movs	r3, #15
 80021a6:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80021a8:	2303      	movs	r3, #3
 80021aa:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80021ac:	2300      	movs	r3, #0
 80021ae:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80021b0:	2300      	movs	r3, #0
 80021b2:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80021b4:	2300      	movs	r3, #0
 80021b6:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 80021b8:	463b      	mov	r3, r7
 80021ba:	2104      	movs	r1, #4
 80021bc:	4618      	mov	r0, r3
 80021be:	f002 fddd 	bl	8004d7c <HAL_RCC_ClockConfig>
 80021c2:	4603      	mov	r3, r0
 80021c4:	2b00      	cmp	r3, #0
 80021c6:	d001      	beq.n	80021cc <SystemClock_Config+0x98>
  {
    Error_Handler();
 80021c8:	f000 f93e 	bl	8002448 <Error_Handler>
  }
}
 80021cc:	bf00      	nop
 80021ce:	3758      	adds	r7, #88	; 0x58
 80021d0:	46bd      	mov	sp, r7
 80021d2:	bd80      	pop	{r7, pc}

080021d4 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 80021d4:	b580      	push	{r7, lr}
 80021d6:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80021d8:	4b1b      	ldr	r3, [pc, #108]	; (8002248 <MX_I2C1_Init+0x74>)
 80021da:	4a1c      	ldr	r2, [pc, #112]	; (800224c <MX_I2C1_Init+0x78>)
 80021dc:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x10909CEC;
 80021de:	4b1a      	ldr	r3, [pc, #104]	; (8002248 <MX_I2C1_Init+0x74>)
 80021e0:	4a1b      	ldr	r2, [pc, #108]	; (8002250 <MX_I2C1_Init+0x7c>)
 80021e2:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 80021e4:	4b18      	ldr	r3, [pc, #96]	; (8002248 <MX_I2C1_Init+0x74>)
 80021e6:	2200      	movs	r2, #0
 80021e8:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80021ea:	4b17      	ldr	r3, [pc, #92]	; (8002248 <MX_I2C1_Init+0x74>)
 80021ec:	2201      	movs	r2, #1
 80021ee:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80021f0:	4b15      	ldr	r3, [pc, #84]	; (8002248 <MX_I2C1_Init+0x74>)
 80021f2:	2200      	movs	r2, #0
 80021f4:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 80021f6:	4b14      	ldr	r3, [pc, #80]	; (8002248 <MX_I2C1_Init+0x74>)
 80021f8:	2200      	movs	r2, #0
 80021fa:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 80021fc:	4b12      	ldr	r3, [pc, #72]	; (8002248 <MX_I2C1_Init+0x74>)
 80021fe:	2200      	movs	r2, #0
 8002200:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002202:	4b11      	ldr	r3, [pc, #68]	; (8002248 <MX_I2C1_Init+0x74>)
 8002204:	2200      	movs	r2, #0
 8002206:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002208:	4b0f      	ldr	r3, [pc, #60]	; (8002248 <MX_I2C1_Init+0x74>)
 800220a:	2200      	movs	r2, #0
 800220c:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800220e:	480e      	ldr	r0, [pc, #56]	; (8002248 <MX_I2C1_Init+0x74>)
 8002210:	f001 f9ca 	bl	80035a8 <HAL_I2C_Init>
 8002214:	4603      	mov	r3, r0
 8002216:	2b00      	cmp	r3, #0
 8002218:	d001      	beq.n	800221e <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 800221a:	f000 f915 	bl	8002448 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800221e:	2100      	movs	r1, #0
 8002220:	4809      	ldr	r0, [pc, #36]	; (8002248 <MX_I2C1_Init+0x74>)
 8002222:	f002 f84d 	bl	80042c0 <HAL_I2CEx_ConfigAnalogFilter>
 8002226:	4603      	mov	r3, r0
 8002228:	2b00      	cmp	r3, #0
 800222a:	d001      	beq.n	8002230 <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 800222c:	f000 f90c 	bl	8002448 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8002230:	2100      	movs	r1, #0
 8002232:	4805      	ldr	r0, [pc, #20]	; (8002248 <MX_I2C1_Init+0x74>)
 8002234:	f002 f88f 	bl	8004356 <HAL_I2CEx_ConfigDigitalFilter>
 8002238:	4603      	mov	r3, r0
 800223a:	2b00      	cmp	r3, #0
 800223c:	d001      	beq.n	8002242 <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 800223e:	f000 f903 	bl	8002448 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8002242:	bf00      	nop
 8002244:	bd80      	pop	{r7, pc}
 8002246:	bf00      	nop
 8002248:	200006c0 	.word	0x200006c0
 800224c:	40005400 	.word	0x40005400
 8002250:	10909cec 	.word	0x10909cec

08002254 <MX_I2C3_Init>:
  * @brief I2C3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C3_Init(void)
{
 8002254:	b580      	push	{r7, lr}
 8002256:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 8002258:	4b1b      	ldr	r3, [pc, #108]	; (80022c8 <MX_I2C3_Init+0x74>)
 800225a:	4a1c      	ldr	r2, [pc, #112]	; (80022cc <MX_I2C3_Init+0x78>)
 800225c:	601a      	str	r2, [r3, #0]
  hi2c3.Init.Timing = 0x10909CEC;
 800225e:	4b1a      	ldr	r3, [pc, #104]	; (80022c8 <MX_I2C3_Init+0x74>)
 8002260:	4a1b      	ldr	r2, [pc, #108]	; (80022d0 <MX_I2C3_Init+0x7c>)
 8002262:	605a      	str	r2, [r3, #4]
  hi2c3.Init.OwnAddress1 = 0;
 8002264:	4b18      	ldr	r3, [pc, #96]	; (80022c8 <MX_I2C3_Init+0x74>)
 8002266:	2200      	movs	r2, #0
 8002268:	609a      	str	r2, [r3, #8]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800226a:	4b17      	ldr	r3, [pc, #92]	; (80022c8 <MX_I2C3_Init+0x74>)
 800226c:	2201      	movs	r2, #1
 800226e:	60da      	str	r2, [r3, #12]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002270:	4b15      	ldr	r3, [pc, #84]	; (80022c8 <MX_I2C3_Init+0x74>)
 8002272:	2200      	movs	r2, #0
 8002274:	611a      	str	r2, [r3, #16]
  hi2c3.Init.OwnAddress2 = 0;
 8002276:	4b14      	ldr	r3, [pc, #80]	; (80022c8 <MX_I2C3_Init+0x74>)
 8002278:	2200      	movs	r2, #0
 800227a:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 800227c:	4b12      	ldr	r3, [pc, #72]	; (80022c8 <MX_I2C3_Init+0x74>)
 800227e:	2200      	movs	r2, #0
 8002280:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002282:	4b11      	ldr	r3, [pc, #68]	; (80022c8 <MX_I2C3_Init+0x74>)
 8002284:	2200      	movs	r2, #0
 8002286:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002288:	4b0f      	ldr	r3, [pc, #60]	; (80022c8 <MX_I2C3_Init+0x74>)
 800228a:	2200      	movs	r2, #0
 800228c:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800228e:	480e      	ldr	r0, [pc, #56]	; (80022c8 <MX_I2C3_Init+0x74>)
 8002290:	f001 f98a 	bl	80035a8 <HAL_I2C_Init>
 8002294:	4603      	mov	r3, r0
 8002296:	2b00      	cmp	r3, #0
 8002298:	d001      	beq.n	800229e <MX_I2C3_Init+0x4a>
  {
    Error_Handler();
 800229a:	f000 f8d5 	bl	8002448 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800229e:	2100      	movs	r1, #0
 80022a0:	4809      	ldr	r0, [pc, #36]	; (80022c8 <MX_I2C3_Init+0x74>)
 80022a2:	f002 f80d 	bl	80042c0 <HAL_I2CEx_ConfigAnalogFilter>
 80022a6:	4603      	mov	r3, r0
 80022a8:	2b00      	cmp	r3, #0
 80022aa:	d001      	beq.n	80022b0 <MX_I2C3_Init+0x5c>
  {
    Error_Handler();
 80022ac:	f000 f8cc 	bl	8002448 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80022b0:	2100      	movs	r1, #0
 80022b2:	4805      	ldr	r0, [pc, #20]	; (80022c8 <MX_I2C3_Init+0x74>)
 80022b4:	f002 f84f 	bl	8004356 <HAL_I2CEx_ConfigDigitalFilter>
 80022b8:	4603      	mov	r3, r0
 80022ba:	2b00      	cmp	r3, #0
 80022bc:	d001      	beq.n	80022c2 <MX_I2C3_Init+0x6e>
  {
    Error_Handler();
 80022be:	f000 f8c3 	bl	8002448 <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 80022c2:	bf00      	nop
 80022c4:	bd80      	pop	{r7, pc}
 80022c6:	bf00      	nop
 80022c8:	20000714 	.word	0x20000714
 80022cc:	40005c00 	.word	0x40005c00
 80022d0:	10909cec 	.word	0x10909cec

080022d4 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80022d4:	b580      	push	{r7, lr}
 80022d6:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80022d8:	4b14      	ldr	r3, [pc, #80]	; (800232c <MX_USART2_UART_Init+0x58>)
 80022da:	4a15      	ldr	r2, [pc, #84]	; (8002330 <MX_USART2_UART_Init+0x5c>)
 80022dc:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 80022de:	4b13      	ldr	r3, [pc, #76]	; (800232c <MX_USART2_UART_Init+0x58>)
 80022e0:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 80022e4:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80022e6:	4b11      	ldr	r3, [pc, #68]	; (800232c <MX_USART2_UART_Init+0x58>)
 80022e8:	2200      	movs	r2, #0
 80022ea:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80022ec:	4b0f      	ldr	r3, [pc, #60]	; (800232c <MX_USART2_UART_Init+0x58>)
 80022ee:	2200      	movs	r2, #0
 80022f0:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80022f2:	4b0e      	ldr	r3, [pc, #56]	; (800232c <MX_USART2_UART_Init+0x58>)
 80022f4:	2200      	movs	r2, #0
 80022f6:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80022f8:	4b0c      	ldr	r3, [pc, #48]	; (800232c <MX_USART2_UART_Init+0x58>)
 80022fa:	220c      	movs	r2, #12
 80022fc:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80022fe:	4b0b      	ldr	r3, [pc, #44]	; (800232c <MX_USART2_UART_Init+0x58>)
 8002300:	2200      	movs	r2, #0
 8002302:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002304:	4b09      	ldr	r3, [pc, #36]	; (800232c <MX_USART2_UART_Init+0x58>)
 8002306:	2200      	movs	r2, #0
 8002308:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 800230a:	4b08      	ldr	r3, [pc, #32]	; (800232c <MX_USART2_UART_Init+0x58>)
 800230c:	2200      	movs	r2, #0
 800230e:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002310:	4b06      	ldr	r3, [pc, #24]	; (800232c <MX_USART2_UART_Init+0x58>)
 8002312:	2200      	movs	r2, #0
 8002314:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002316:	4805      	ldr	r0, [pc, #20]	; (800232c <MX_USART2_UART_Init+0x58>)
 8002318:	f003 f8da 	bl	80054d0 <HAL_UART_Init>
 800231c:	4603      	mov	r3, r0
 800231e:	2b00      	cmp	r3, #0
 8002320:	d001      	beq.n	8002326 <MX_USART2_UART_Init+0x52>
  {
    Error_Handler();
 8002322:	f000 f891 	bl	8002448 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8002326:	bf00      	nop
 8002328:	bd80      	pop	{r7, pc}
 800232a:	bf00      	nop
 800232c:	20000768 	.word	0x20000768
 8002330:	40004400 	.word	0x40004400

08002334 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002334:	b580      	push	{r7, lr}
 8002336:	b08a      	sub	sp, #40	; 0x28
 8002338:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800233a:	f107 0314 	add.w	r3, r7, #20
 800233e:	2200      	movs	r2, #0
 8002340:	601a      	str	r2, [r3, #0]
 8002342:	605a      	str	r2, [r3, #4]
 8002344:	609a      	str	r2, [r3, #8]
 8002346:	60da      	str	r2, [r3, #12]
 8002348:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800234a:	4b3c      	ldr	r3, [pc, #240]	; (800243c <MX_GPIO_Init+0x108>)
 800234c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800234e:	4a3b      	ldr	r2, [pc, #236]	; (800243c <MX_GPIO_Init+0x108>)
 8002350:	f043 0304 	orr.w	r3, r3, #4
 8002354:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002356:	4b39      	ldr	r3, [pc, #228]	; (800243c <MX_GPIO_Init+0x108>)
 8002358:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800235a:	f003 0304 	and.w	r3, r3, #4
 800235e:	613b      	str	r3, [r7, #16]
 8002360:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8002362:	4b36      	ldr	r3, [pc, #216]	; (800243c <MX_GPIO_Init+0x108>)
 8002364:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002366:	4a35      	ldr	r2, [pc, #212]	; (800243c <MX_GPIO_Init+0x108>)
 8002368:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800236c:	64d3      	str	r3, [r2, #76]	; 0x4c
 800236e:	4b33      	ldr	r3, [pc, #204]	; (800243c <MX_GPIO_Init+0x108>)
 8002370:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002372:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002376:	60fb      	str	r3, [r7, #12]
 8002378:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800237a:	4b30      	ldr	r3, [pc, #192]	; (800243c <MX_GPIO_Init+0x108>)
 800237c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800237e:	4a2f      	ldr	r2, [pc, #188]	; (800243c <MX_GPIO_Init+0x108>)
 8002380:	f043 0301 	orr.w	r3, r3, #1
 8002384:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002386:	4b2d      	ldr	r3, [pc, #180]	; (800243c <MX_GPIO_Init+0x108>)
 8002388:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800238a:	f003 0301 	and.w	r3, r3, #1
 800238e:	60bb      	str	r3, [r7, #8]
 8002390:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002392:	4b2a      	ldr	r3, [pc, #168]	; (800243c <MX_GPIO_Init+0x108>)
 8002394:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002396:	4a29      	ldr	r2, [pc, #164]	; (800243c <MX_GPIO_Init+0x108>)
 8002398:	f043 0302 	orr.w	r3, r3, #2
 800239c:	64d3      	str	r3, [r2, #76]	; 0x4c
 800239e:	4b27      	ldr	r3, [pc, #156]	; (800243c <MX_GPIO_Init+0x108>)
 80023a0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80023a2:	f003 0302 	and.w	r3, r3, #2
 80023a6:	607b      	str	r3, [r7, #4]
 80023a8:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, SMPS_EN_Pin|SMPS_V1_Pin|SMPS_SW_Pin, GPIO_PIN_RESET);
 80023aa:	2200      	movs	r2, #0
 80023ac:	21b0      	movs	r1, #176	; 0xb0
 80023ae:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80023b2:	f001 f8c7 	bl	8003544 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_RESET);
 80023b6:	2200      	movs	r2, #0
 80023b8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80023bc:	4820      	ldr	r0, [pc, #128]	; (8002440 <MX_GPIO_Init+0x10c>)
 80023be:	f001 f8c1 	bl	8003544 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 80023c2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80023c6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80023c8:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 80023cc:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80023ce:	2300      	movs	r3, #0
 80023d0:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80023d2:	f107 0314 	add.w	r3, r7, #20
 80023d6:	4619      	mov	r1, r3
 80023d8:	481a      	ldr	r0, [pc, #104]	; (8002444 <MX_GPIO_Init+0x110>)
 80023da:	f000 ff41 	bl	8003260 <HAL_GPIO_Init>

  /*Configure GPIO pins : SMPS_EN_Pin SMPS_V1_Pin SMPS_SW_Pin */
  GPIO_InitStruct.Pin = SMPS_EN_Pin|SMPS_V1_Pin|SMPS_SW_Pin;
 80023de:	23b0      	movs	r3, #176	; 0xb0
 80023e0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80023e2:	2301      	movs	r3, #1
 80023e4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80023e6:	2300      	movs	r3, #0
 80023e8:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80023ea:	2300      	movs	r3, #0
 80023ec:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80023ee:	f107 0314 	add.w	r3, r7, #20
 80023f2:	4619      	mov	r1, r3
 80023f4:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80023f8:	f000 ff32 	bl	8003260 <HAL_GPIO_Init>

  /*Configure GPIO pin : SMPS_PG_Pin */
  GPIO_InitStruct.Pin = SMPS_PG_Pin;
 80023fc:	2340      	movs	r3, #64	; 0x40
 80023fe:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002400:	2300      	movs	r3, #0
 8002402:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002404:	2301      	movs	r3, #1
 8002406:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(SMPS_PG_GPIO_Port, &GPIO_InitStruct);
 8002408:	f107 0314 	add.w	r3, r7, #20
 800240c:	4619      	mov	r1, r3
 800240e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002412:	f000 ff25 	bl	8003260 <HAL_GPIO_Init>

  /*Configure GPIO pin : LD4_Pin */
  GPIO_InitStruct.Pin = LD4_Pin;
 8002416:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800241a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800241c:	2301      	movs	r3, #1
 800241e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002420:	2300      	movs	r3, #0
 8002422:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002424:	2300      	movs	r3, #0
 8002426:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LD4_GPIO_Port, &GPIO_InitStruct);
 8002428:	f107 0314 	add.w	r3, r7, #20
 800242c:	4619      	mov	r1, r3
 800242e:	4804      	ldr	r0, [pc, #16]	; (8002440 <MX_GPIO_Init+0x10c>)
 8002430:	f000 ff16 	bl	8003260 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8002434:	bf00      	nop
 8002436:	3728      	adds	r7, #40	; 0x28
 8002438:	46bd      	mov	sp, r7
 800243a:	bd80      	pop	{r7, pc}
 800243c:	40021000 	.word	0x40021000
 8002440:	48000400 	.word	0x48000400
 8002444:	48000800 	.word	0x48000800

08002448 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002448:	b480      	push	{r7}
 800244a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800244c:	b672      	cpsid	i
}
 800244e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002450:	e7fe      	b.n	8002450 <Error_Handler+0x8>

08002452 <ssd1306_Reset>:
#include <math.h>
#include <stdlib.h>
#include <string.h>  // For memcpy
#include "I2C.h"

void ssd1306_Reset(void) {
 8002452:	b480      	push	{r7}
 8002454:	af00      	add	r7, sp, #0
    /* for I2C - do nothing */
}
 8002456:	bf00      	nop
 8002458:	46bd      	mov	sp, r7
 800245a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800245e:	4770      	bx	lr

08002460 <ssd1306_WriteCommand>:

// Send a byte to the command register
void ssd1306_WriteCommand(uint8_t byte) {
 8002460:	b580      	push	{r7, lr}
 8002462:	b084      	sub	sp, #16
 8002464:	af00      	add	r7, sp, #0
 8002466:	4603      	mov	r3, r0
 8002468:	71fb      	strb	r3, [r7, #7]
		uint8_t buffer[2];
		buffer[0] = 0x00;
 800246a:	2300      	movs	r3, #0
 800246c:	733b      	strb	r3, [r7, #12]
		buffer[1] = byte;
 800246e:	79fb      	ldrb	r3, [r7, #7]
 8002470:	737b      	strb	r3, [r7, #13]
		//I2C_SendData(SSD1306_I2C_PORT, SSD1306_I2C_ADDR, buffer, 2);
		I2C_SendData(SSD1306_I2C_PORT, SSD1306_I2C_ADDR, buffer, 2);
 8002472:	f107 020c 	add.w	r2, r7, #12
 8002476:	2302      	movs	r3, #2
 8002478:	2178      	movs	r1, #120	; 0x78
 800247a:	4803      	ldr	r0, [pc, #12]	; (8002488 <ssd1306_WriteCommand+0x28>)
 800247c:	f7fe fdd9 	bl	8001032 <I2C_SendData>
		//I2C_SendData(SSD1306_I2C_PORT, SSD1306_I2C_ADDR, &byte, 1);
    //HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
}
 8002480:	bf00      	nop
 8002482:	3710      	adds	r7, #16
 8002484:	46bd      	mov	sp, r7
 8002486:	bd80      	pop	{r7, pc}
 8002488:	40005400 	.word	0x40005400

0800248c <ssd1306_WriteData>:

// Send data
void ssd1306_WriteData(uint8_t* buffer, size_t buff_size) {
 800248c:	b580      	push	{r7, lr}
 800248e:	f5ad 6d82 	sub.w	sp, sp, #1040	; 0x410
 8002492:	af00      	add	r7, sp, #0
 8002494:	f507 6382 	add.w	r3, r7, #1040	; 0x410
 8002498:	f2a3 430c 	subw	r3, r3, #1036	; 0x40c
 800249c:	6018      	str	r0, [r3, #0]
 800249e:	f507 6382 	add.w	r3, r7, #1040	; 0x410
 80024a2:	f5a3 6382 	sub.w	r3, r3, #1040	; 0x410
 80024a6:	6019      	str	r1, [r3, #0]
		int i;
		uint8_t buffer2[SSD1306_BUFFER_SIZE+1];
		buffer2[0] = 0x40;
 80024a8:	f507 6382 	add.w	r3, r7, #1040	; 0x410
 80024ac:	f5a3 6381 	sub.w	r3, r3, #1032	; 0x408
 80024b0:	2240      	movs	r2, #64	; 0x40
 80024b2:	701a      	strb	r2, [r3, #0]
		for(i=0; i<buff_size;  i++)
 80024b4:	2300      	movs	r3, #0
 80024b6:	f8c7 340c 	str.w	r3, [r7, #1036]	; 0x40c
 80024ba:	e015      	b.n	80024e8 <ssd1306_WriteData+0x5c>
			buffer2[i+1] = buffer[i];
 80024bc:	f8d7 340c 	ldr.w	r3, [r7, #1036]	; 0x40c
 80024c0:	f507 6282 	add.w	r2, r7, #1040	; 0x410
 80024c4:	f2a2 420c 	subw	r2, r2, #1036	; 0x40c
 80024c8:	6812      	ldr	r2, [r2, #0]
 80024ca:	441a      	add	r2, r3
 80024cc:	f8d7 340c 	ldr.w	r3, [r7, #1036]	; 0x40c
 80024d0:	3301      	adds	r3, #1
 80024d2:	7811      	ldrb	r1, [r2, #0]
 80024d4:	f507 6282 	add.w	r2, r7, #1040	; 0x410
 80024d8:	f5a2 6281 	sub.w	r2, r2, #1032	; 0x408
 80024dc:	54d1      	strb	r1, [r2, r3]
		for(i=0; i<buff_size;  i++)
 80024de:	f8d7 340c 	ldr.w	r3, [r7, #1036]	; 0x40c
 80024e2:	3301      	adds	r3, #1
 80024e4:	f8c7 340c 	str.w	r3, [r7, #1036]	; 0x40c
 80024e8:	f8d7 340c 	ldr.w	r3, [r7, #1036]	; 0x40c
 80024ec:	f507 6282 	add.w	r2, r7, #1040	; 0x410
 80024f0:	f5a2 6282 	sub.w	r2, r2, #1040	; 0x410
 80024f4:	6812      	ldr	r2, [r2, #0]
 80024f6:	429a      	cmp	r2, r3
 80024f8:	d8e0      	bhi.n	80024bc <ssd1306_WriteData+0x30>
		I2C_SendData(SSD1306_I2C_PORT, SSD1306_I2C_ADDR, buffer2, buff_size+1);
 80024fa:	f507 6382 	add.w	r3, r7, #1040	; 0x410
 80024fe:	f5a3 6382 	sub.w	r3, r3, #1040	; 0x410
 8002502:	681b      	ldr	r3, [r3, #0]
 8002504:	b2db      	uxtb	r3, r3
 8002506:	3301      	adds	r3, #1
 8002508:	b2db      	uxtb	r3, r3
 800250a:	f107 0208 	add.w	r2, r7, #8
 800250e:	2178      	movs	r1, #120	; 0x78
 8002510:	4803      	ldr	r0, [pc, #12]	; (8002520 <ssd1306_WriteData+0x94>)
 8002512:	f7fe fd8e 	bl	8001032 <I2C_SendData>
    //HAL_I2C_Mem_Write(&SSD1306_I2C_PORT, SSD1306_I2C_ADDR, 0x40, 1, buffer, buff_size, HAL_MAX_DELAY);
}
 8002516:	bf00      	nop
 8002518:	f507 6782 	add.w	r7, r7, #1040	; 0x410
 800251c:	46bd      	mov	sp, r7
 800251e:	bd80      	pop	{r7, pc}
 8002520:	40005400 	.word	0x40005400

08002524 <ssd1306_Init>:
    }
    return ret;
}

// Initialize the oled screen
void ssd1306_Init(void) {
 8002524:	b580      	push	{r7, lr}
 8002526:	b082      	sub	sp, #8
 8002528:	af00      	add	r7, sp, #0
		volatile uint32_t i;
	
    // Reset OLED
    ssd1306_Reset();
 800252a:	f7ff ff92 	bl	8002452 <ssd1306_Reset>

    // Wait for the screen to boot
    //delay(100);
	  for(i=0; i<100000; i++)
 800252e:	2300      	movs	r3, #0
 8002530:	607b      	str	r3, [r7, #4]
 8002532:	e002      	b.n	800253a <ssd1306_Init+0x16>
 8002534:	687b      	ldr	r3, [r7, #4]
 8002536:	3301      	adds	r3, #1
 8002538:	607b      	str	r3, [r7, #4]
 800253a:	687b      	ldr	r3, [r7, #4]
 800253c:	4a32      	ldr	r2, [pc, #200]	; (8002608 <ssd1306_Init+0xe4>)
 800253e:	4293      	cmp	r3, r2
 8002540:	d9f8      	bls.n	8002534 <ssd1306_Init+0x10>
			;

    // Init OLED
    ssd1306_SetDisplayOn(0); //display off
 8002542:	2000      	movs	r0, #0
 8002544:	f000 f9ea 	bl	800291c <ssd1306_SetDisplayOn>

    ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode
 8002548:	2020      	movs	r0, #32
 800254a:	f7ff ff89 	bl	8002460 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x00); // 00b,Horizontal Addressing Mode; 01b,Vertical Addressing Mode;
 800254e:	2000      	movs	r0, #0
 8002550:	f7ff ff86 	bl	8002460 <ssd1306_WriteCommand>
                                // 10b,Page Addressing Mode (RESET); 11b,Invalid

    ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 8002554:	20b0      	movs	r0, #176	; 0xb0
 8002556:	f7ff ff83 	bl	8002460 <ssd1306_WriteCommand>

#ifdef SSD1306_MIRROR_VERT
    ssd1306_WriteCommand(0xC0); // Mirror vertically
#else
    ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
 800255a:	20c8      	movs	r0, #200	; 0xc8
 800255c:	f7ff ff80 	bl	8002460 <ssd1306_WriteCommand>
#endif

    ssd1306_WriteCommand(0x00); //---set low column address
 8002560:	2000      	movs	r0, #0
 8002562:	f7ff ff7d 	bl	8002460 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x10); //---set high column address
 8002566:	2010      	movs	r0, #16
 8002568:	f7ff ff7a 	bl	8002460 <ssd1306_WriteCommand>

    ssd1306_WriteCommand(0x40); //--set start line address - CHECK
 800256c:	2040      	movs	r0, #64	; 0x40
 800256e:	f7ff ff77 	bl	8002460 <ssd1306_WriteCommand>

    ssd1306_SetContrast(0xFF);
 8002572:	20ff      	movs	r0, #255	; 0xff
 8002574:	f000 f9be 	bl	80028f4 <ssd1306_SetContrast>

#ifdef SSD1306_MIRROR_HORIZ
    ssd1306_WriteCommand(0xA0); // Mirror horizontally
#else
    ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127 - CHECK
 8002578:	20a1      	movs	r0, #161	; 0xa1
 800257a:	f7ff ff71 	bl	8002460 <ssd1306_WriteCommand>
#endif

#ifdef SSD1306_INVERSE_COLOR
    ssd1306_WriteCommand(0xA7); //--set inverse color
#else
    ssd1306_WriteCommand(0xA6); //--set normal color
 800257e:	20a6      	movs	r0, #166	; 0xa6
 8002580:	f7ff ff6e 	bl	8002460 <ssd1306_WriteCommand>
// Set multiplex ratio.
#if (SSD1306_HEIGHT == 128)
    // Found in the Luma Python lib for SH1106.
    ssd1306_WriteCommand(0xFF);
#else
    ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64) - CHECK
 8002584:	20a8      	movs	r0, #168	; 0xa8
 8002586:	f7ff ff6b 	bl	8002460 <ssd1306_WriteCommand>
#endif

#if (SSD1306_HEIGHT == 32)
    ssd1306_WriteCommand(0x1F); //
#elif (SSD1306_HEIGHT == 64)
    ssd1306_WriteCommand(0x3F); //
 800258a:	203f      	movs	r0, #63	; 0x3f
 800258c:	f7ff ff68 	bl	8002460 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x3F); // Seems to work for 128px high displays too.
#else
#error "Only 32, 64, or 128 lines of height are supported!"
#endif

    ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 8002590:	20a4      	movs	r0, #164	; 0xa4
 8002592:	f7ff ff65 	bl	8002460 <ssd1306_WriteCommand>

    ssd1306_WriteCommand(0xD3); //-set display offset - CHECK
 8002596:	20d3      	movs	r0, #211	; 0xd3
 8002598:	f7ff ff62 	bl	8002460 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x00); //-not offset
 800259c:	2000      	movs	r0, #0
 800259e:	f7ff ff5f 	bl	8002460 <ssd1306_WriteCommand>

    ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
 80025a2:	20d5      	movs	r0, #213	; 0xd5
 80025a4:	f7ff ff5c 	bl	8002460 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0xF0); //--set divide ratio
 80025a8:	20f0      	movs	r0, #240	; 0xf0
 80025aa:	f7ff ff59 	bl	8002460 <ssd1306_WriteCommand>

    ssd1306_WriteCommand(0xD9); //--set pre-charge period
 80025ae:	20d9      	movs	r0, #217	; 0xd9
 80025b0:	f7ff ff56 	bl	8002460 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x22); //
 80025b4:	2022      	movs	r0, #34	; 0x22
 80025b6:	f7ff ff53 	bl	8002460 <ssd1306_WriteCommand>

    ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration - CHECK
 80025ba:	20da      	movs	r0, #218	; 0xda
 80025bc:	f7ff ff50 	bl	8002460 <ssd1306_WriteCommand>
#if (SSD1306_HEIGHT == 32)
    ssd1306_WriteCommand(0x02);
#elif (SSD1306_HEIGHT == 64)
    ssd1306_WriteCommand(0x12);
 80025c0:	2012      	movs	r0, #18
 80025c2:	f7ff ff4d 	bl	8002460 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x12);
#else
#error "Only 32, 64, or 128 lines of height are supported!"
#endif

    ssd1306_WriteCommand(0xDB); //--set vcomh
 80025c6:	20db      	movs	r0, #219	; 0xdb
 80025c8:	f7ff ff4a 	bl	8002460 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
 80025cc:	2020      	movs	r0, #32
 80025ce:	f7ff ff47 	bl	8002460 <ssd1306_WriteCommand>

    ssd1306_WriteCommand(0x8D); //--set DC-DC enable
 80025d2:	208d      	movs	r0, #141	; 0x8d
 80025d4:	f7ff ff44 	bl	8002460 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(0x14); //
 80025d8:	2014      	movs	r0, #20
 80025da:	f7ff ff41 	bl	8002460 <ssd1306_WriteCommand>
    ssd1306_SetDisplayOn(1); //--turn on SSD1306 panel
 80025de:	2001      	movs	r0, #1
 80025e0:	f000 f99c 	bl	800291c <ssd1306_SetDisplayOn>

    // Clear screen
    ssd1306_Fill(Black);
 80025e4:	2000      	movs	r0, #0
 80025e6:	f000 f813 	bl	8002610 <ssd1306_Fill>
    
    // Flush buffer to screen
    ssd1306_UpdateScreen();
 80025ea:	f000 f835 	bl	8002658 <ssd1306_UpdateScreen>
    
    // Set default values for screen object
    SSD1306.CurrentX = 0;
 80025ee:	4b07      	ldr	r3, [pc, #28]	; (800260c <ssd1306_Init+0xe8>)
 80025f0:	2200      	movs	r2, #0
 80025f2:	801a      	strh	r2, [r3, #0]
    SSD1306.CurrentY = 0;
 80025f4:	4b05      	ldr	r3, [pc, #20]	; (800260c <ssd1306_Init+0xe8>)
 80025f6:	2200      	movs	r2, #0
 80025f8:	805a      	strh	r2, [r3, #2]
    
    SSD1306.Initialized = 1;
 80025fa:	4b04      	ldr	r3, [pc, #16]	; (800260c <ssd1306_Init+0xe8>)
 80025fc:	2201      	movs	r2, #1
 80025fe:	715a      	strb	r2, [r3, #5]
}
 8002600:	bf00      	nop
 8002602:	3708      	adds	r7, #8
 8002604:	46bd      	mov	sp, r7
 8002606:	bd80      	pop	{r7, pc}
 8002608:	0001869f 	.word	0x0001869f
 800260c:	20000e38 	.word	0x20000e38

08002610 <ssd1306_Fill>:

// Fill the whole screen with the given color
void ssd1306_Fill(SSD1306_COLOR color) {
 8002610:	b480      	push	{r7}
 8002612:	b085      	sub	sp, #20
 8002614:	af00      	add	r7, sp, #0
 8002616:	4603      	mov	r3, r0
 8002618:	71fb      	strb	r3, [r7, #7]
    /* Set memory */
    uint32_t i;

    for(i = 0; i < sizeof(SSD1306_Buffer); i++) {
 800261a:	2300      	movs	r3, #0
 800261c:	60fb      	str	r3, [r7, #12]
 800261e:	e00d      	b.n	800263c <ssd1306_Fill+0x2c>
        SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 8002620:	79fb      	ldrb	r3, [r7, #7]
 8002622:	2b00      	cmp	r3, #0
 8002624:	d101      	bne.n	800262a <ssd1306_Fill+0x1a>
 8002626:	2100      	movs	r1, #0
 8002628:	e000      	b.n	800262c <ssd1306_Fill+0x1c>
 800262a:	21ff      	movs	r1, #255	; 0xff
 800262c:	4a09      	ldr	r2, [pc, #36]	; (8002654 <ssd1306_Fill+0x44>)
 800262e:	68fb      	ldr	r3, [r7, #12]
 8002630:	4413      	add	r3, r2
 8002632:	460a      	mov	r2, r1
 8002634:	701a      	strb	r2, [r3, #0]
    for(i = 0; i < sizeof(SSD1306_Buffer); i++) {
 8002636:	68fb      	ldr	r3, [r7, #12]
 8002638:	3301      	adds	r3, #1
 800263a:	60fb      	str	r3, [r7, #12]
 800263c:	68fb      	ldr	r3, [r7, #12]
 800263e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002642:	d3ed      	bcc.n	8002620 <ssd1306_Fill+0x10>
    }
}
 8002644:	bf00      	nop
 8002646:	bf00      	nop
 8002648:	3714      	adds	r7, #20
 800264a:	46bd      	mov	sp, r7
 800264c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002650:	4770      	bx	lr
 8002652:	bf00      	nop
 8002654:	20000a38 	.word	0x20000a38

08002658 <ssd1306_UpdateScreen>:

// Write the screenbuffer with changed to the screen
void ssd1306_UpdateScreen(void) {
 8002658:	b580      	push	{r7, lr}
 800265a:	b082      	sub	sp, #8
 800265c:	af00      	add	r7, sp, #0
    //
    //  * 32px   ==  4 pages
    //  * 64px   ==  8 pages
    //  * 128px  ==  16 pages
		uint8_t i;
    for(i = 0; i < SSD1306_HEIGHT/8; i++) {
 800265e:	2300      	movs	r3, #0
 8002660:	71fb      	strb	r3, [r7, #7]
 8002662:	e016      	b.n	8002692 <ssd1306_UpdateScreen+0x3a>
        ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 8002664:	79fb      	ldrb	r3, [r7, #7]
 8002666:	3b50      	subs	r3, #80	; 0x50
 8002668:	b2db      	uxtb	r3, r3
 800266a:	4618      	mov	r0, r3
 800266c:	f7ff fef8 	bl	8002460 <ssd1306_WriteCommand>
        ssd1306_WriteCommand(0x00);
 8002670:	2000      	movs	r0, #0
 8002672:	f7ff fef5 	bl	8002460 <ssd1306_WriteCommand>
        ssd1306_WriteCommand(0x10);
 8002676:	2010      	movs	r0, #16
 8002678:	f7ff fef2 	bl	8002460 <ssd1306_WriteCommand>
        ssd1306_WriteData(&SSD1306_Buffer[SSD1306_WIDTH*i],SSD1306_WIDTH);
 800267c:	79fb      	ldrb	r3, [r7, #7]
 800267e:	01db      	lsls	r3, r3, #7
 8002680:	4a08      	ldr	r2, [pc, #32]	; (80026a4 <ssd1306_UpdateScreen+0x4c>)
 8002682:	4413      	add	r3, r2
 8002684:	2180      	movs	r1, #128	; 0x80
 8002686:	4618      	mov	r0, r3
 8002688:	f7ff ff00 	bl	800248c <ssd1306_WriteData>
    for(i = 0; i < SSD1306_HEIGHT/8; i++) {
 800268c:	79fb      	ldrb	r3, [r7, #7]
 800268e:	3301      	adds	r3, #1
 8002690:	71fb      	strb	r3, [r7, #7]
 8002692:	79fb      	ldrb	r3, [r7, #7]
 8002694:	2b07      	cmp	r3, #7
 8002696:	d9e5      	bls.n	8002664 <ssd1306_UpdateScreen+0xc>
    }
}
 8002698:	bf00      	nop
 800269a:	bf00      	nop
 800269c:	3708      	adds	r7, #8
 800269e:	46bd      	mov	sp, r7
 80026a0:	bd80      	pop	{r7, pc}
 80026a2:	bf00      	nop
 80026a4:	20000a38 	.word	0x20000a38

080026a8 <ssd1306_DrawPixel>:

//    Draw one pixel in the screenbuffer
//    X => X Coordinate
//    Y => Y Coordinate
//    color => Pixel color
void ssd1306_DrawPixel(uint8_t x, uint8_t y, SSD1306_COLOR color) {
 80026a8:	b480      	push	{r7}
 80026aa:	b083      	sub	sp, #12
 80026ac:	af00      	add	r7, sp, #0
 80026ae:	4603      	mov	r3, r0
 80026b0:	71fb      	strb	r3, [r7, #7]
 80026b2:	460b      	mov	r3, r1
 80026b4:	71bb      	strb	r3, [r7, #6]
 80026b6:	4613      	mov	r3, r2
 80026b8:	717b      	strb	r3, [r7, #5]
    if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 80026ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80026be:	2b00      	cmp	r3, #0
 80026c0:	db48      	blt.n	8002754 <ssd1306_DrawPixel+0xac>
 80026c2:	79bb      	ldrb	r3, [r7, #6]
 80026c4:	2b3f      	cmp	r3, #63	; 0x3f
 80026c6:	d845      	bhi.n	8002754 <ssd1306_DrawPixel+0xac>
        // Don't write outside the buffer
        return;
    }
    
    // Check if pixel should be inverted
    if(SSD1306.Inverted) {
 80026c8:	4b25      	ldr	r3, [pc, #148]	; (8002760 <ssd1306_DrawPixel+0xb8>)
 80026ca:	791b      	ldrb	r3, [r3, #4]
 80026cc:	2b00      	cmp	r3, #0
 80026ce:	d006      	beq.n	80026de <ssd1306_DrawPixel+0x36>
        color = (SSD1306_COLOR)!color;
 80026d0:	797b      	ldrb	r3, [r7, #5]
 80026d2:	2b00      	cmp	r3, #0
 80026d4:	bf0c      	ite	eq
 80026d6:	2301      	moveq	r3, #1
 80026d8:	2300      	movne	r3, #0
 80026da:	b2db      	uxtb	r3, r3
 80026dc:	717b      	strb	r3, [r7, #5]
    }
    
    // Draw in the right color
    if(color == White) {
 80026de:	797b      	ldrb	r3, [r7, #5]
 80026e0:	2b01      	cmp	r3, #1
 80026e2:	d11a      	bne.n	800271a <ssd1306_DrawPixel+0x72>
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 80026e4:	79fa      	ldrb	r2, [r7, #7]
 80026e6:	79bb      	ldrb	r3, [r7, #6]
 80026e8:	08db      	lsrs	r3, r3, #3
 80026ea:	b2d8      	uxtb	r0, r3
 80026ec:	4603      	mov	r3, r0
 80026ee:	01db      	lsls	r3, r3, #7
 80026f0:	4413      	add	r3, r2
 80026f2:	4a1c      	ldr	r2, [pc, #112]	; (8002764 <ssd1306_DrawPixel+0xbc>)
 80026f4:	5cd3      	ldrb	r3, [r2, r3]
 80026f6:	b25a      	sxtb	r2, r3
 80026f8:	79bb      	ldrb	r3, [r7, #6]
 80026fa:	f003 0307 	and.w	r3, r3, #7
 80026fe:	2101      	movs	r1, #1
 8002700:	fa01 f303 	lsl.w	r3, r1, r3
 8002704:	b25b      	sxtb	r3, r3
 8002706:	4313      	orrs	r3, r2
 8002708:	b259      	sxtb	r1, r3
 800270a:	79fa      	ldrb	r2, [r7, #7]
 800270c:	4603      	mov	r3, r0
 800270e:	01db      	lsls	r3, r3, #7
 8002710:	4413      	add	r3, r2
 8002712:	b2c9      	uxtb	r1, r1
 8002714:	4a13      	ldr	r2, [pc, #76]	; (8002764 <ssd1306_DrawPixel+0xbc>)
 8002716:	54d1      	strb	r1, [r2, r3]
 8002718:	e01d      	b.n	8002756 <ssd1306_DrawPixel+0xae>
    } else { 
        SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 800271a:	79fa      	ldrb	r2, [r7, #7]
 800271c:	79bb      	ldrb	r3, [r7, #6]
 800271e:	08db      	lsrs	r3, r3, #3
 8002720:	b2d8      	uxtb	r0, r3
 8002722:	4603      	mov	r3, r0
 8002724:	01db      	lsls	r3, r3, #7
 8002726:	4413      	add	r3, r2
 8002728:	4a0e      	ldr	r2, [pc, #56]	; (8002764 <ssd1306_DrawPixel+0xbc>)
 800272a:	5cd3      	ldrb	r3, [r2, r3]
 800272c:	b25a      	sxtb	r2, r3
 800272e:	79bb      	ldrb	r3, [r7, #6]
 8002730:	f003 0307 	and.w	r3, r3, #7
 8002734:	2101      	movs	r1, #1
 8002736:	fa01 f303 	lsl.w	r3, r1, r3
 800273a:	b25b      	sxtb	r3, r3
 800273c:	43db      	mvns	r3, r3
 800273e:	b25b      	sxtb	r3, r3
 8002740:	4013      	ands	r3, r2
 8002742:	b259      	sxtb	r1, r3
 8002744:	79fa      	ldrb	r2, [r7, #7]
 8002746:	4603      	mov	r3, r0
 8002748:	01db      	lsls	r3, r3, #7
 800274a:	4413      	add	r3, r2
 800274c:	b2c9      	uxtb	r1, r1
 800274e:	4a05      	ldr	r2, [pc, #20]	; (8002764 <ssd1306_DrawPixel+0xbc>)
 8002750:	54d1      	strb	r1, [r2, r3]
 8002752:	e000      	b.n	8002756 <ssd1306_DrawPixel+0xae>
        return;
 8002754:	bf00      	nop
    }
}
 8002756:	370c      	adds	r7, #12
 8002758:	46bd      	mov	sp, r7
 800275a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800275e:	4770      	bx	lr
 8002760:	20000e38 	.word	0x20000e38
 8002764:	20000a38 	.word	0x20000a38

08002768 <ssd1306_WriteChar>:

// Draw 1 char to the screen buffer
// ch       => char om weg te schrijven
// Font     => Font waarmee we gaan schrijven
// color    => Black or White
char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 8002768:	b590      	push	{r4, r7, lr}
 800276a:	b089      	sub	sp, #36	; 0x24
 800276c:	af00      	add	r7, sp, #0
 800276e:	4604      	mov	r4, r0
 8002770:	1d38      	adds	r0, r7, #4
 8002772:	e880 0006 	stmia.w	r0, {r1, r2}
 8002776:	461a      	mov	r2, r3
 8002778:	4623      	mov	r3, r4
 800277a:	73fb      	strb	r3, [r7, #15]
 800277c:	4613      	mov	r3, r2
 800277e:	73bb      	strb	r3, [r7, #14]
    uint32_t i, b, j;
    
    // Check if character is valid
    if (ch < 32 || ch > 126)
 8002780:	7bfb      	ldrb	r3, [r7, #15]
 8002782:	2b1f      	cmp	r3, #31
 8002784:	d902      	bls.n	800278c <ssd1306_WriteChar+0x24>
 8002786:	7bfb      	ldrb	r3, [r7, #15]
 8002788:	2b7e      	cmp	r3, #126	; 0x7e
 800278a:	d901      	bls.n	8002790 <ssd1306_WriteChar+0x28>
        return 0;
 800278c:	2300      	movs	r3, #0
 800278e:	e06d      	b.n	800286c <ssd1306_WriteChar+0x104>
    
    // Check remaining space on current line
    if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 8002790:	4b38      	ldr	r3, [pc, #224]	; (8002874 <ssd1306_WriteChar+0x10c>)
 8002792:	881b      	ldrh	r3, [r3, #0]
 8002794:	461a      	mov	r2, r3
 8002796:	793b      	ldrb	r3, [r7, #4]
 8002798:	4413      	add	r3, r2
 800279a:	2b80      	cmp	r3, #128	; 0x80
 800279c:	dc06      	bgt.n	80027ac <ssd1306_WriteChar+0x44>
        SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 800279e:	4b35      	ldr	r3, [pc, #212]	; (8002874 <ssd1306_WriteChar+0x10c>)
 80027a0:	885b      	ldrh	r3, [r3, #2]
 80027a2:	461a      	mov	r2, r3
 80027a4:	797b      	ldrb	r3, [r7, #5]
 80027a6:	4413      	add	r3, r2
    if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 80027a8:	2b40      	cmp	r3, #64	; 0x40
 80027aa:	dd01      	ble.n	80027b0 <ssd1306_WriteChar+0x48>
    {
        // Not enough space on current line
        return 0;
 80027ac:	2300      	movs	r3, #0
 80027ae:	e05d      	b.n	800286c <ssd1306_WriteChar+0x104>
    }
    
    // Use the font to write
    for(i = 0; i < Font.FontHeight; i++) {
 80027b0:	2300      	movs	r3, #0
 80027b2:	61fb      	str	r3, [r7, #28]
 80027b4:	e04c      	b.n	8002850 <ssd1306_WriteChar+0xe8>
        b = Font.data[(ch - 32) * Font.FontHeight + i];
 80027b6:	68ba      	ldr	r2, [r7, #8]
 80027b8:	7bfb      	ldrb	r3, [r7, #15]
 80027ba:	3b20      	subs	r3, #32
 80027bc:	7979      	ldrb	r1, [r7, #5]
 80027be:	fb01 f303 	mul.w	r3, r1, r3
 80027c2:	4619      	mov	r1, r3
 80027c4:	69fb      	ldr	r3, [r7, #28]
 80027c6:	440b      	add	r3, r1
 80027c8:	005b      	lsls	r3, r3, #1
 80027ca:	4413      	add	r3, r2
 80027cc:	881b      	ldrh	r3, [r3, #0]
 80027ce:	617b      	str	r3, [r7, #20]
        for(j = 0; j < Font.FontWidth; j++) {
 80027d0:	2300      	movs	r3, #0
 80027d2:	61bb      	str	r3, [r7, #24]
 80027d4:	e034      	b.n	8002840 <ssd1306_WriteChar+0xd8>
            if((b << j) & 0x8000)  {
 80027d6:	697a      	ldr	r2, [r7, #20]
 80027d8:	69bb      	ldr	r3, [r7, #24]
 80027da:	fa02 f303 	lsl.w	r3, r2, r3
 80027de:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80027e2:	2b00      	cmp	r3, #0
 80027e4:	d012      	beq.n	800280c <ssd1306_WriteChar+0xa4>
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) color);
 80027e6:	4b23      	ldr	r3, [pc, #140]	; (8002874 <ssd1306_WriteChar+0x10c>)
 80027e8:	881b      	ldrh	r3, [r3, #0]
 80027ea:	b2da      	uxtb	r2, r3
 80027ec:	69bb      	ldr	r3, [r7, #24]
 80027ee:	b2db      	uxtb	r3, r3
 80027f0:	4413      	add	r3, r2
 80027f2:	b2d8      	uxtb	r0, r3
 80027f4:	4b1f      	ldr	r3, [pc, #124]	; (8002874 <ssd1306_WriteChar+0x10c>)
 80027f6:	885b      	ldrh	r3, [r3, #2]
 80027f8:	b2da      	uxtb	r2, r3
 80027fa:	69fb      	ldr	r3, [r7, #28]
 80027fc:	b2db      	uxtb	r3, r3
 80027fe:	4413      	add	r3, r2
 8002800:	b2db      	uxtb	r3, r3
 8002802:	7bba      	ldrb	r2, [r7, #14]
 8002804:	4619      	mov	r1, r3
 8002806:	f7ff ff4f 	bl	80026a8 <ssd1306_DrawPixel>
 800280a:	e016      	b.n	800283a <ssd1306_WriteChar+0xd2>
            } else {
                ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR)!color);
 800280c:	4b19      	ldr	r3, [pc, #100]	; (8002874 <ssd1306_WriteChar+0x10c>)
 800280e:	881b      	ldrh	r3, [r3, #0]
 8002810:	b2da      	uxtb	r2, r3
 8002812:	69bb      	ldr	r3, [r7, #24]
 8002814:	b2db      	uxtb	r3, r3
 8002816:	4413      	add	r3, r2
 8002818:	b2d8      	uxtb	r0, r3
 800281a:	4b16      	ldr	r3, [pc, #88]	; (8002874 <ssd1306_WriteChar+0x10c>)
 800281c:	885b      	ldrh	r3, [r3, #2]
 800281e:	b2da      	uxtb	r2, r3
 8002820:	69fb      	ldr	r3, [r7, #28]
 8002822:	b2db      	uxtb	r3, r3
 8002824:	4413      	add	r3, r2
 8002826:	b2d9      	uxtb	r1, r3
 8002828:	7bbb      	ldrb	r3, [r7, #14]
 800282a:	2b00      	cmp	r3, #0
 800282c:	bf0c      	ite	eq
 800282e:	2301      	moveq	r3, #1
 8002830:	2300      	movne	r3, #0
 8002832:	b2db      	uxtb	r3, r3
 8002834:	461a      	mov	r2, r3
 8002836:	f7ff ff37 	bl	80026a8 <ssd1306_DrawPixel>
        for(j = 0; j < Font.FontWidth; j++) {
 800283a:	69bb      	ldr	r3, [r7, #24]
 800283c:	3301      	adds	r3, #1
 800283e:	61bb      	str	r3, [r7, #24]
 8002840:	793b      	ldrb	r3, [r7, #4]
 8002842:	461a      	mov	r2, r3
 8002844:	69bb      	ldr	r3, [r7, #24]
 8002846:	4293      	cmp	r3, r2
 8002848:	d3c5      	bcc.n	80027d6 <ssd1306_WriteChar+0x6e>
    for(i = 0; i < Font.FontHeight; i++) {
 800284a:	69fb      	ldr	r3, [r7, #28]
 800284c:	3301      	adds	r3, #1
 800284e:	61fb      	str	r3, [r7, #28]
 8002850:	797b      	ldrb	r3, [r7, #5]
 8002852:	461a      	mov	r2, r3
 8002854:	69fb      	ldr	r3, [r7, #28]
 8002856:	4293      	cmp	r3, r2
 8002858:	d3ad      	bcc.n	80027b6 <ssd1306_WriteChar+0x4e>
            }
        }
    }
    
    // The current space is now taken
    SSD1306.CurrentX += Font.FontWidth;
 800285a:	4b06      	ldr	r3, [pc, #24]	; (8002874 <ssd1306_WriteChar+0x10c>)
 800285c:	881a      	ldrh	r2, [r3, #0]
 800285e:	793b      	ldrb	r3, [r7, #4]
 8002860:	b29b      	uxth	r3, r3
 8002862:	4413      	add	r3, r2
 8002864:	b29a      	uxth	r2, r3
 8002866:	4b03      	ldr	r3, [pc, #12]	; (8002874 <ssd1306_WriteChar+0x10c>)
 8002868:	801a      	strh	r2, [r3, #0]
    
    // Return written char for validation
    return ch;
 800286a:	7bfb      	ldrb	r3, [r7, #15]
}
 800286c:	4618      	mov	r0, r3
 800286e:	3724      	adds	r7, #36	; 0x24
 8002870:	46bd      	mov	sp, r7
 8002872:	bd90      	pop	{r4, r7, pc}
 8002874:	20000e38 	.word	0x20000e38

08002878 <ssd1306_WriteString>:

// Write full string to screenbuffer
char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color) {
 8002878:	b580      	push	{r7, lr}
 800287a:	b084      	sub	sp, #16
 800287c:	af00      	add	r7, sp, #0
 800287e:	60f8      	str	r0, [r7, #12]
 8002880:	1d38      	adds	r0, r7, #4
 8002882:	e880 0006 	stmia.w	r0, {r1, r2}
 8002886:	70fb      	strb	r3, [r7, #3]
    // Write until null-byte
    while (*str) {
 8002888:	e012      	b.n	80028b0 <ssd1306_WriteString+0x38>
        if (ssd1306_WriteChar(*str, Font, color) != *str) {
 800288a:	68fb      	ldr	r3, [r7, #12]
 800288c:	7818      	ldrb	r0, [r3, #0]
 800288e:	78fb      	ldrb	r3, [r7, #3]
 8002890:	1d3a      	adds	r2, r7, #4
 8002892:	ca06      	ldmia	r2, {r1, r2}
 8002894:	f7ff ff68 	bl	8002768 <ssd1306_WriteChar>
 8002898:	4603      	mov	r3, r0
 800289a:	461a      	mov	r2, r3
 800289c:	68fb      	ldr	r3, [r7, #12]
 800289e:	781b      	ldrb	r3, [r3, #0]
 80028a0:	429a      	cmp	r2, r3
 80028a2:	d002      	beq.n	80028aa <ssd1306_WriteString+0x32>
            // Char could not be written
            return *str;
 80028a4:	68fb      	ldr	r3, [r7, #12]
 80028a6:	781b      	ldrb	r3, [r3, #0]
 80028a8:	e008      	b.n	80028bc <ssd1306_WriteString+0x44>
        }
        
        // Next char
        str++;
 80028aa:	68fb      	ldr	r3, [r7, #12]
 80028ac:	3301      	adds	r3, #1
 80028ae:	60fb      	str	r3, [r7, #12]
    while (*str) {
 80028b0:	68fb      	ldr	r3, [r7, #12]
 80028b2:	781b      	ldrb	r3, [r3, #0]
 80028b4:	2b00      	cmp	r3, #0
 80028b6:	d1e8      	bne.n	800288a <ssd1306_WriteString+0x12>
    }
    
    // Everything ok
    return *str;
 80028b8:	68fb      	ldr	r3, [r7, #12]
 80028ba:	781b      	ldrb	r3, [r3, #0]
}
 80028bc:	4618      	mov	r0, r3
 80028be:	3710      	adds	r7, #16
 80028c0:	46bd      	mov	sp, r7
 80028c2:	bd80      	pop	{r7, pc}

080028c4 <ssd1306_SetCursor>:

// Position the cursor
void ssd1306_SetCursor(uint8_t x, uint8_t y) {
 80028c4:	b480      	push	{r7}
 80028c6:	b083      	sub	sp, #12
 80028c8:	af00      	add	r7, sp, #0
 80028ca:	4603      	mov	r3, r0
 80028cc:	460a      	mov	r2, r1
 80028ce:	71fb      	strb	r3, [r7, #7]
 80028d0:	4613      	mov	r3, r2
 80028d2:	71bb      	strb	r3, [r7, #6]
    SSD1306.CurrentX = x;
 80028d4:	79fb      	ldrb	r3, [r7, #7]
 80028d6:	b29a      	uxth	r2, r3
 80028d8:	4b05      	ldr	r3, [pc, #20]	; (80028f0 <ssd1306_SetCursor+0x2c>)
 80028da:	801a      	strh	r2, [r3, #0]
    SSD1306.CurrentY = y;
 80028dc:	79bb      	ldrb	r3, [r7, #6]
 80028de:	b29a      	uxth	r2, r3
 80028e0:	4b03      	ldr	r3, [pc, #12]	; (80028f0 <ssd1306_SetCursor+0x2c>)
 80028e2:	805a      	strh	r2, [r3, #2]
}
 80028e4:	bf00      	nop
 80028e6:	370c      	adds	r7, #12
 80028e8:	46bd      	mov	sp, r7
 80028ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028ee:	4770      	bx	lr
 80028f0:	20000e38 	.word	0x20000e38

080028f4 <ssd1306_SetContrast>:
  ssd1306_Line(x1,y2,x1,y1,color);

  return;
}

void ssd1306_SetContrast(const uint8_t value) {
 80028f4:	b580      	push	{r7, lr}
 80028f6:	b084      	sub	sp, #16
 80028f8:	af00      	add	r7, sp, #0
 80028fa:	4603      	mov	r3, r0
 80028fc:	71fb      	strb	r3, [r7, #7]
    const uint8_t kSetContrastControlRegister = 0x81;
 80028fe:	2381      	movs	r3, #129	; 0x81
 8002900:	73fb      	strb	r3, [r7, #15]
    ssd1306_WriteCommand(kSetContrastControlRegister);
 8002902:	7bfb      	ldrb	r3, [r7, #15]
 8002904:	4618      	mov	r0, r3
 8002906:	f7ff fdab 	bl	8002460 <ssd1306_WriteCommand>
    ssd1306_WriteCommand(value);
 800290a:	79fb      	ldrb	r3, [r7, #7]
 800290c:	4618      	mov	r0, r3
 800290e:	f7ff fda7 	bl	8002460 <ssd1306_WriteCommand>
}
 8002912:	bf00      	nop
 8002914:	3710      	adds	r7, #16
 8002916:	46bd      	mov	sp, r7
 8002918:	bd80      	pop	{r7, pc}
	...

0800291c <ssd1306_SetDisplayOn>:

void ssd1306_SetDisplayOn(const uint8_t on) {
 800291c:	b580      	push	{r7, lr}
 800291e:	b084      	sub	sp, #16
 8002920:	af00      	add	r7, sp, #0
 8002922:	4603      	mov	r3, r0
 8002924:	71fb      	strb	r3, [r7, #7]
    uint8_t value;
    if (on) {
 8002926:	79fb      	ldrb	r3, [r7, #7]
 8002928:	2b00      	cmp	r3, #0
 800292a:	d005      	beq.n	8002938 <ssd1306_SetDisplayOn+0x1c>
        value = 0xAF;   // Display on
 800292c:	23af      	movs	r3, #175	; 0xaf
 800292e:	73fb      	strb	r3, [r7, #15]
        SSD1306.DisplayOn = 1;
 8002930:	4b08      	ldr	r3, [pc, #32]	; (8002954 <ssd1306_SetDisplayOn+0x38>)
 8002932:	2201      	movs	r2, #1
 8002934:	719a      	strb	r2, [r3, #6]
 8002936:	e004      	b.n	8002942 <ssd1306_SetDisplayOn+0x26>
    } else {
        value = 0xAE;   // Display off
 8002938:	23ae      	movs	r3, #174	; 0xae
 800293a:	73fb      	strb	r3, [r7, #15]
        SSD1306.DisplayOn = 0;
 800293c:	4b05      	ldr	r3, [pc, #20]	; (8002954 <ssd1306_SetDisplayOn+0x38>)
 800293e:	2200      	movs	r2, #0
 8002940:	719a      	strb	r2, [r3, #6]
    }
    ssd1306_WriteCommand(value);
 8002942:	7bfb      	ldrb	r3, [r7, #15]
 8002944:	4618      	mov	r0, r3
 8002946:	f7ff fd8b 	bl	8002460 <ssd1306_WriteCommand>
}
 800294a:	bf00      	nop
 800294c:	3710      	adds	r7, #16
 800294e:	46bd      	mov	sp, r7
 8002950:	bd80      	pop	{r7, pc}
 8002952:	bf00      	nop
 8002954:	20000e38 	.word	0x20000e38

08002958 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002958:	b480      	push	{r7}
 800295a:	b083      	sub	sp, #12
 800295c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800295e:	4b0f      	ldr	r3, [pc, #60]	; (800299c <HAL_MspInit+0x44>)
 8002960:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002962:	4a0e      	ldr	r2, [pc, #56]	; (800299c <HAL_MspInit+0x44>)
 8002964:	f043 0301 	orr.w	r3, r3, #1
 8002968:	6613      	str	r3, [r2, #96]	; 0x60
 800296a:	4b0c      	ldr	r3, [pc, #48]	; (800299c <HAL_MspInit+0x44>)
 800296c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800296e:	f003 0301 	and.w	r3, r3, #1
 8002972:	607b      	str	r3, [r7, #4]
 8002974:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002976:	4b09      	ldr	r3, [pc, #36]	; (800299c <HAL_MspInit+0x44>)
 8002978:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800297a:	4a08      	ldr	r2, [pc, #32]	; (800299c <HAL_MspInit+0x44>)
 800297c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002980:	6593      	str	r3, [r2, #88]	; 0x58
 8002982:	4b06      	ldr	r3, [pc, #24]	; (800299c <HAL_MspInit+0x44>)
 8002984:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002986:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800298a:	603b      	str	r3, [r7, #0]
 800298c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800298e:	bf00      	nop
 8002990:	370c      	adds	r7, #12
 8002992:	46bd      	mov	sp, r7
 8002994:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002998:	4770      	bx	lr
 800299a:	bf00      	nop
 800299c:	40021000 	.word	0x40021000

080029a0 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80029a0:	b580      	push	{r7, lr}
 80029a2:	b098      	sub	sp, #96	; 0x60
 80029a4:	af00      	add	r7, sp, #0
 80029a6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80029a8:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 80029ac:	2200      	movs	r2, #0
 80029ae:	601a      	str	r2, [r3, #0]
 80029b0:	605a      	str	r2, [r3, #4]
 80029b2:	609a      	str	r2, [r3, #8]
 80029b4:	60da      	str	r2, [r3, #12]
 80029b6:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80029b8:	f107 0318 	add.w	r3, r7, #24
 80029bc:	2234      	movs	r2, #52	; 0x34
 80029be:	2100      	movs	r1, #0
 80029c0:	4618      	mov	r0, r3
 80029c2:	f005 fca9 	bl	8008318 <memset>
  if(hi2c->Instance==I2C1)
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	681b      	ldr	r3, [r3, #0]
 80029ca:	4a3e      	ldr	r2, [pc, #248]	; (8002ac4 <HAL_I2C_MspInit+0x124>)
 80029cc:	4293      	cmp	r3, r2
 80029ce:	d138      	bne.n	8002a42 <HAL_I2C_MspInit+0xa2>

  /* USER CODE END I2C1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 80029d0:	2340      	movs	r3, #64	; 0x40
 80029d2:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 80029d4:	2300      	movs	r3, #0
 80029d6:	62fb      	str	r3, [r7, #44]	; 0x2c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80029d8:	f107 0318 	add.w	r3, r7, #24
 80029dc:	4618      	mov	r0, r3
 80029de:	f002 fbf1 	bl	80051c4 <HAL_RCCEx_PeriphCLKConfig>
 80029e2:	4603      	mov	r3, r0
 80029e4:	2b00      	cmp	r3, #0
 80029e6:	d001      	beq.n	80029ec <HAL_I2C_MspInit+0x4c>
    {
      Error_Handler();
 80029e8:	f7ff fd2e 	bl	8002448 <Error_Handler>
    }

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80029ec:	4b36      	ldr	r3, [pc, #216]	; (8002ac8 <HAL_I2C_MspInit+0x128>)
 80029ee:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80029f0:	4a35      	ldr	r2, [pc, #212]	; (8002ac8 <HAL_I2C_MspInit+0x128>)
 80029f2:	f043 0301 	orr.w	r3, r3, #1
 80029f6:	64d3      	str	r3, [r2, #76]	; 0x4c
 80029f8:	4b33      	ldr	r3, [pc, #204]	; (8002ac8 <HAL_I2C_MspInit+0x128>)
 80029fa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80029fc:	f003 0301 	and.w	r3, r3, #1
 8002a00:	617b      	str	r3, [r7, #20]
 8002a02:	697b      	ldr	r3, [r7, #20]
    /**I2C1 GPIO Configuration
    PA9     ------> I2C1_SCL
    PA10     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = Disp_SCL_Pin|Disp_SDA_Pin;
 8002a04:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8002a08:	64fb      	str	r3, [r7, #76]	; 0x4c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002a0a:	2312      	movs	r3, #18
 8002a0c:	653b      	str	r3, [r7, #80]	; 0x50
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a0e:	2300      	movs	r3, #0
 8002a10:	657b      	str	r3, [r7, #84]	; 0x54
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002a12:	2303      	movs	r3, #3
 8002a14:	65bb      	str	r3, [r7, #88]	; 0x58
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002a16:	2304      	movs	r3, #4
 8002a18:	65fb      	str	r3, [r7, #92]	; 0x5c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a1a:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8002a1e:	4619      	mov	r1, r3
 8002a20:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002a24:	f000 fc1c 	bl	8003260 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002a28:	4b27      	ldr	r3, [pc, #156]	; (8002ac8 <HAL_I2C_MspInit+0x128>)
 8002a2a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002a2c:	4a26      	ldr	r2, [pc, #152]	; (8002ac8 <HAL_I2C_MspInit+0x128>)
 8002a2e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002a32:	6593      	str	r3, [r2, #88]	; 0x58
 8002a34:	4b24      	ldr	r3, [pc, #144]	; (8002ac8 <HAL_I2C_MspInit+0x128>)
 8002a36:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002a38:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002a3c:	613b      	str	r3, [r7, #16]
 8002a3e:	693b      	ldr	r3, [r7, #16]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8002a40:	e03b      	b.n	8002aba <HAL_I2C_MspInit+0x11a>
  else if(hi2c->Instance==I2C3)
 8002a42:	687b      	ldr	r3, [r7, #4]
 8002a44:	681b      	ldr	r3, [r3, #0]
 8002a46:	4a21      	ldr	r2, [pc, #132]	; (8002acc <HAL_I2C_MspInit+0x12c>)
 8002a48:	4293      	cmp	r3, r2
 8002a4a:	d136      	bne.n	8002aba <HAL_I2C_MspInit+0x11a>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8002a4c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002a50:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 8002a52:	2300      	movs	r3, #0
 8002a54:	637b      	str	r3, [r7, #52]	; 0x34
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002a56:	f107 0318 	add.w	r3, r7, #24
 8002a5a:	4618      	mov	r0, r3
 8002a5c:	f002 fbb2 	bl	80051c4 <HAL_RCCEx_PeriphCLKConfig>
 8002a60:	4603      	mov	r3, r0
 8002a62:	2b00      	cmp	r3, #0
 8002a64:	d001      	beq.n	8002a6a <HAL_I2C_MspInit+0xca>
      Error_Handler();
 8002a66:	f7ff fcef 	bl	8002448 <Error_Handler>
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002a6a:	4b17      	ldr	r3, [pc, #92]	; (8002ac8 <HAL_I2C_MspInit+0x128>)
 8002a6c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002a6e:	4a16      	ldr	r2, [pc, #88]	; (8002ac8 <HAL_I2C_MspInit+0x128>)
 8002a70:	f043 0304 	orr.w	r3, r3, #4
 8002a74:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002a76:	4b14      	ldr	r3, [pc, #80]	; (8002ac8 <HAL_I2C_MspInit+0x128>)
 8002a78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002a7a:	f003 0304 	and.w	r3, r3, #4
 8002a7e:	60fb      	str	r3, [r7, #12]
 8002a80:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = Accel_SCL_Pin|Accel_SDA_Pin;
 8002a82:	2303      	movs	r3, #3
 8002a84:	64fb      	str	r3, [r7, #76]	; 0x4c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002a86:	2312      	movs	r3, #18
 8002a88:	653b      	str	r3, [r7, #80]	; 0x50
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a8a:	2300      	movs	r3, #0
 8002a8c:	657b      	str	r3, [r7, #84]	; 0x54
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002a8e:	2303      	movs	r3, #3
 8002a90:	65bb      	str	r3, [r7, #88]	; 0x58
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002a92:	2304      	movs	r3, #4
 8002a94:	65fb      	str	r3, [r7, #92]	; 0x5c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002a96:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8002a9a:	4619      	mov	r1, r3
 8002a9c:	480c      	ldr	r0, [pc, #48]	; (8002ad0 <HAL_I2C_MspInit+0x130>)
 8002a9e:	f000 fbdf 	bl	8003260 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002aa2:	4b09      	ldr	r3, [pc, #36]	; (8002ac8 <HAL_I2C_MspInit+0x128>)
 8002aa4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002aa6:	4a08      	ldr	r2, [pc, #32]	; (8002ac8 <HAL_I2C_MspInit+0x128>)
 8002aa8:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002aac:	6593      	str	r3, [r2, #88]	; 0x58
 8002aae:	4b06      	ldr	r3, [pc, #24]	; (8002ac8 <HAL_I2C_MspInit+0x128>)
 8002ab0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002ab2:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002ab6:	60bb      	str	r3, [r7, #8]
 8002ab8:	68bb      	ldr	r3, [r7, #8]
}
 8002aba:	bf00      	nop
 8002abc:	3760      	adds	r7, #96	; 0x60
 8002abe:	46bd      	mov	sp, r7
 8002ac0:	bd80      	pop	{r7, pc}
 8002ac2:	bf00      	nop
 8002ac4:	40005400 	.word	0x40005400
 8002ac8:	40021000 	.word	0x40021000
 8002acc:	40005c00 	.word	0x40005c00
 8002ad0:	48000800 	.word	0x48000800

08002ad4 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002ad4:	b580      	push	{r7, lr}
 8002ad6:	b096      	sub	sp, #88	; 0x58
 8002ad8:	af00      	add	r7, sp, #0
 8002ada:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002adc:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8002ae0:	2200      	movs	r2, #0
 8002ae2:	601a      	str	r2, [r3, #0]
 8002ae4:	605a      	str	r2, [r3, #4]
 8002ae6:	609a      	str	r2, [r3, #8]
 8002ae8:	60da      	str	r2, [r3, #12]
 8002aea:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002aec:	f107 0310 	add.w	r3, r7, #16
 8002af0:	2234      	movs	r2, #52	; 0x34
 8002af2:	2100      	movs	r1, #0
 8002af4:	4618      	mov	r0, r3
 8002af6:	f005 fc0f 	bl	8008318 <memset>
  if(huart->Instance==USART2)
 8002afa:	687b      	ldr	r3, [r7, #4]
 8002afc:	681b      	ldr	r3, [r3, #0]
 8002afe:	4a23      	ldr	r2, [pc, #140]	; (8002b8c <HAL_UART_MspInit+0xb8>)
 8002b00:	4293      	cmp	r3, r2
 8002b02:	d13e      	bne.n	8002b82 <HAL_UART_MspInit+0xae>

  /* USER CODE END USART2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 8002b04:	2302      	movs	r3, #2
 8002b06:	613b      	str	r3, [r7, #16]
    PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8002b08:	2300      	movs	r3, #0
 8002b0a:	61bb      	str	r3, [r7, #24]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002b0c:	f107 0310 	add.w	r3, r7, #16
 8002b10:	4618      	mov	r0, r3
 8002b12:	f002 fb57 	bl	80051c4 <HAL_RCCEx_PeriphCLKConfig>
 8002b16:	4603      	mov	r3, r0
 8002b18:	2b00      	cmp	r3, #0
 8002b1a:	d001      	beq.n	8002b20 <HAL_UART_MspInit+0x4c>
    {
      Error_Handler();
 8002b1c:	f7ff fc94 	bl	8002448 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8002b20:	4b1b      	ldr	r3, [pc, #108]	; (8002b90 <HAL_UART_MspInit+0xbc>)
 8002b22:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002b24:	4a1a      	ldr	r2, [pc, #104]	; (8002b90 <HAL_UART_MspInit+0xbc>)
 8002b26:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002b2a:	6593      	str	r3, [r2, #88]	; 0x58
 8002b2c:	4b18      	ldr	r3, [pc, #96]	; (8002b90 <HAL_UART_MspInit+0xbc>)
 8002b2e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002b30:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002b34:	60fb      	str	r3, [r7, #12]
 8002b36:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002b38:	4b15      	ldr	r3, [pc, #84]	; (8002b90 <HAL_UART_MspInit+0xbc>)
 8002b3a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002b3c:	4a14      	ldr	r2, [pc, #80]	; (8002b90 <HAL_UART_MspInit+0xbc>)
 8002b3e:	f043 0301 	orr.w	r3, r3, #1
 8002b42:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002b44:	4b12      	ldr	r3, [pc, #72]	; (8002b90 <HAL_UART_MspInit+0xbc>)
 8002b46:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002b48:	f003 0301 	and.w	r3, r3, #1
 8002b4c:	60bb      	str	r3, [r7, #8]
 8002b4e:	68bb      	ldr	r3, [r7, #8]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPS_TX_Pin|GPS_RX_Pin;
 8002b50:	230c      	movs	r3, #12
 8002b52:	647b      	str	r3, [r7, #68]	; 0x44
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b54:	2302      	movs	r3, #2
 8002b56:	64bb      	str	r3, [r7, #72]	; 0x48
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b58:	2300      	movs	r3, #0
 8002b5a:	64fb      	str	r3, [r7, #76]	; 0x4c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002b5c:	2303      	movs	r3, #3
 8002b5e:	653b      	str	r3, [r7, #80]	; 0x50
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8002b60:	2307      	movs	r3, #7
 8002b62:	657b      	str	r3, [r7, #84]	; 0x54
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002b64:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8002b68:	4619      	mov	r1, r3
 8002b6a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002b6e:	f000 fb77 	bl	8003260 <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8002b72:	2200      	movs	r2, #0
 8002b74:	2100      	movs	r1, #0
 8002b76:	2026      	movs	r0, #38	; 0x26
 8002b78:	f000 fabd 	bl	80030f6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8002b7c:	2026      	movs	r0, #38	; 0x26
 8002b7e:	f000 fad6 	bl	800312e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8002b82:	bf00      	nop
 8002b84:	3758      	adds	r7, #88	; 0x58
 8002b86:	46bd      	mov	sp, r7
 8002b88:	bd80      	pop	{r7, pc}
 8002b8a:	bf00      	nop
 8002b8c:	40004400 	.word	0x40004400
 8002b90:	40021000 	.word	0x40021000

08002b94 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002b94:	b480      	push	{r7}
 8002b96:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002b98:	e7fe      	b.n	8002b98 <NMI_Handler+0x4>

08002b9a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002b9a:	b480      	push	{r7}
 8002b9c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002b9e:	e7fe      	b.n	8002b9e <HardFault_Handler+0x4>

08002ba0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002ba0:	b480      	push	{r7}
 8002ba2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002ba4:	e7fe      	b.n	8002ba4 <MemManage_Handler+0x4>

08002ba6 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002ba6:	b480      	push	{r7}
 8002ba8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002baa:	e7fe      	b.n	8002baa <BusFault_Handler+0x4>

08002bac <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002bac:	b480      	push	{r7}
 8002bae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002bb0:	e7fe      	b.n	8002bb0 <UsageFault_Handler+0x4>

08002bb2 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002bb2:	b480      	push	{r7}
 8002bb4:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002bb6:	bf00      	nop
 8002bb8:	46bd      	mov	sp, r7
 8002bba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bbe:	4770      	bx	lr

08002bc0 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002bc0:	b480      	push	{r7}
 8002bc2:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002bc4:	bf00      	nop
 8002bc6:	46bd      	mov	sp, r7
 8002bc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bcc:	4770      	bx	lr

08002bce <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002bce:	b480      	push	{r7}
 8002bd0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002bd2:	bf00      	nop
 8002bd4:	46bd      	mov	sp, r7
 8002bd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bda:	4770      	bx	lr

08002bdc <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002bdc:	b580      	push	{r7, lr}
 8002bde:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002be0:	f000 f96a 	bl	8002eb8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002be4:	bf00      	nop
 8002be6:	bd80      	pop	{r7, pc}

08002be8 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8002be8:	b580      	push	{r7, lr}
 8002bea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8002bec:	4802      	ldr	r0, [pc, #8]	; (8002bf8 <USART2_IRQHandler+0x10>)
 8002bee:	f002 fd09 	bl	8005604 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8002bf2:	bf00      	nop
 8002bf4:	bd80      	pop	{r7, pc}
 8002bf6:	bf00      	nop
 8002bf8:	20000768 	.word	0x20000768

08002bfc <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002bfc:	b480      	push	{r7}
 8002bfe:	af00      	add	r7, sp, #0
  return 1;
 8002c00:	2301      	movs	r3, #1
}
 8002c02:	4618      	mov	r0, r3
 8002c04:	46bd      	mov	sp, r7
 8002c06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c0a:	4770      	bx	lr

08002c0c <_kill>:

int _kill(int pid, int sig)
{
 8002c0c:	b580      	push	{r7, lr}
 8002c0e:	b082      	sub	sp, #8
 8002c10:	af00      	add	r7, sp, #0
 8002c12:	6078      	str	r0, [r7, #4]
 8002c14:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8002c16:	f005 fb8b 	bl	8008330 <__errno>
 8002c1a:	4603      	mov	r3, r0
 8002c1c:	2216      	movs	r2, #22
 8002c1e:	601a      	str	r2, [r3, #0]
  return -1;
 8002c20:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8002c24:	4618      	mov	r0, r3
 8002c26:	3708      	adds	r7, #8
 8002c28:	46bd      	mov	sp, r7
 8002c2a:	bd80      	pop	{r7, pc}

08002c2c <_exit>:

void _exit (int status)
{
 8002c2c:	b580      	push	{r7, lr}
 8002c2e:	b082      	sub	sp, #8
 8002c30:	af00      	add	r7, sp, #0
 8002c32:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002c34:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002c38:	6878      	ldr	r0, [r7, #4]
 8002c3a:	f7ff ffe7 	bl	8002c0c <_kill>
  while (1) {}    /* Make sure we hang here */
 8002c3e:	e7fe      	b.n	8002c3e <_exit+0x12>

08002c40 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002c40:	b580      	push	{r7, lr}
 8002c42:	b086      	sub	sp, #24
 8002c44:	af00      	add	r7, sp, #0
 8002c46:	60f8      	str	r0, [r7, #12]
 8002c48:	60b9      	str	r1, [r7, #8]
 8002c4a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c4c:	2300      	movs	r3, #0
 8002c4e:	617b      	str	r3, [r7, #20]
 8002c50:	e00a      	b.n	8002c68 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002c52:	f3af 8000 	nop.w
 8002c56:	4601      	mov	r1, r0
 8002c58:	68bb      	ldr	r3, [r7, #8]
 8002c5a:	1c5a      	adds	r2, r3, #1
 8002c5c:	60ba      	str	r2, [r7, #8]
 8002c5e:	b2ca      	uxtb	r2, r1
 8002c60:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c62:	697b      	ldr	r3, [r7, #20]
 8002c64:	3301      	adds	r3, #1
 8002c66:	617b      	str	r3, [r7, #20]
 8002c68:	697a      	ldr	r2, [r7, #20]
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	429a      	cmp	r2, r3
 8002c6e:	dbf0      	blt.n	8002c52 <_read+0x12>
  }

  return len;
 8002c70:	687b      	ldr	r3, [r7, #4]
}
 8002c72:	4618      	mov	r0, r3
 8002c74:	3718      	adds	r7, #24
 8002c76:	46bd      	mov	sp, r7
 8002c78:	bd80      	pop	{r7, pc}

08002c7a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002c7a:	b580      	push	{r7, lr}
 8002c7c:	b086      	sub	sp, #24
 8002c7e:	af00      	add	r7, sp, #0
 8002c80:	60f8      	str	r0, [r7, #12]
 8002c82:	60b9      	str	r1, [r7, #8]
 8002c84:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c86:	2300      	movs	r3, #0
 8002c88:	617b      	str	r3, [r7, #20]
 8002c8a:	e009      	b.n	8002ca0 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8002c8c:	68bb      	ldr	r3, [r7, #8]
 8002c8e:	1c5a      	adds	r2, r3, #1
 8002c90:	60ba      	str	r2, [r7, #8]
 8002c92:	781b      	ldrb	r3, [r3, #0]
 8002c94:	4618      	mov	r0, r3
 8002c96:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c9a:	697b      	ldr	r3, [r7, #20]
 8002c9c:	3301      	adds	r3, #1
 8002c9e:	617b      	str	r3, [r7, #20]
 8002ca0:	697a      	ldr	r2, [r7, #20]
 8002ca2:	687b      	ldr	r3, [r7, #4]
 8002ca4:	429a      	cmp	r2, r3
 8002ca6:	dbf1      	blt.n	8002c8c <_write+0x12>
  }
  return len;
 8002ca8:	687b      	ldr	r3, [r7, #4]
}
 8002caa:	4618      	mov	r0, r3
 8002cac:	3718      	adds	r7, #24
 8002cae:	46bd      	mov	sp, r7
 8002cb0:	bd80      	pop	{r7, pc}

08002cb2 <_close>:

int _close(int file)
{
 8002cb2:	b480      	push	{r7}
 8002cb4:	b083      	sub	sp, #12
 8002cb6:	af00      	add	r7, sp, #0
 8002cb8:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8002cba:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8002cbe:	4618      	mov	r0, r3
 8002cc0:	370c      	adds	r7, #12
 8002cc2:	46bd      	mov	sp, r7
 8002cc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cc8:	4770      	bx	lr

08002cca <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002cca:	b480      	push	{r7}
 8002ccc:	b083      	sub	sp, #12
 8002cce:	af00      	add	r7, sp, #0
 8002cd0:	6078      	str	r0, [r7, #4]
 8002cd2:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002cd4:	683b      	ldr	r3, [r7, #0]
 8002cd6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002cda:	605a      	str	r2, [r3, #4]
  return 0;
 8002cdc:	2300      	movs	r3, #0
}
 8002cde:	4618      	mov	r0, r3
 8002ce0:	370c      	adds	r7, #12
 8002ce2:	46bd      	mov	sp, r7
 8002ce4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ce8:	4770      	bx	lr

08002cea <_isatty>:

int _isatty(int file)
{
 8002cea:	b480      	push	{r7}
 8002cec:	b083      	sub	sp, #12
 8002cee:	af00      	add	r7, sp, #0
 8002cf0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002cf2:	2301      	movs	r3, #1
}
 8002cf4:	4618      	mov	r0, r3
 8002cf6:	370c      	adds	r7, #12
 8002cf8:	46bd      	mov	sp, r7
 8002cfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cfe:	4770      	bx	lr

08002d00 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002d00:	b480      	push	{r7}
 8002d02:	b085      	sub	sp, #20
 8002d04:	af00      	add	r7, sp, #0
 8002d06:	60f8      	str	r0, [r7, #12]
 8002d08:	60b9      	str	r1, [r7, #8]
 8002d0a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002d0c:	2300      	movs	r3, #0
}
 8002d0e:	4618      	mov	r0, r3
 8002d10:	3714      	adds	r7, #20
 8002d12:	46bd      	mov	sp, r7
 8002d14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d18:	4770      	bx	lr
	...

08002d1c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002d1c:	b580      	push	{r7, lr}
 8002d1e:	b086      	sub	sp, #24
 8002d20:	af00      	add	r7, sp, #0
 8002d22:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002d24:	4a14      	ldr	r2, [pc, #80]	; (8002d78 <_sbrk+0x5c>)
 8002d26:	4b15      	ldr	r3, [pc, #84]	; (8002d7c <_sbrk+0x60>)
 8002d28:	1ad3      	subs	r3, r2, r3
 8002d2a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002d2c:	697b      	ldr	r3, [r7, #20]
 8002d2e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002d30:	4b13      	ldr	r3, [pc, #76]	; (8002d80 <_sbrk+0x64>)
 8002d32:	681b      	ldr	r3, [r3, #0]
 8002d34:	2b00      	cmp	r3, #0
 8002d36:	d102      	bne.n	8002d3e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002d38:	4b11      	ldr	r3, [pc, #68]	; (8002d80 <_sbrk+0x64>)
 8002d3a:	4a12      	ldr	r2, [pc, #72]	; (8002d84 <_sbrk+0x68>)
 8002d3c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002d3e:	4b10      	ldr	r3, [pc, #64]	; (8002d80 <_sbrk+0x64>)
 8002d40:	681a      	ldr	r2, [r3, #0]
 8002d42:	687b      	ldr	r3, [r7, #4]
 8002d44:	4413      	add	r3, r2
 8002d46:	693a      	ldr	r2, [r7, #16]
 8002d48:	429a      	cmp	r2, r3
 8002d4a:	d207      	bcs.n	8002d5c <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002d4c:	f005 faf0 	bl	8008330 <__errno>
 8002d50:	4603      	mov	r3, r0
 8002d52:	220c      	movs	r2, #12
 8002d54:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002d56:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002d5a:	e009      	b.n	8002d70 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002d5c:	4b08      	ldr	r3, [pc, #32]	; (8002d80 <_sbrk+0x64>)
 8002d5e:	681b      	ldr	r3, [r3, #0]
 8002d60:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002d62:	4b07      	ldr	r3, [pc, #28]	; (8002d80 <_sbrk+0x64>)
 8002d64:	681a      	ldr	r2, [r3, #0]
 8002d66:	687b      	ldr	r3, [r7, #4]
 8002d68:	4413      	add	r3, r2
 8002d6a:	4a05      	ldr	r2, [pc, #20]	; (8002d80 <_sbrk+0x64>)
 8002d6c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002d6e:	68fb      	ldr	r3, [r7, #12]
}
 8002d70:	4618      	mov	r0, r3
 8002d72:	3718      	adds	r7, #24
 8002d74:	46bd      	mov	sp, r7
 8002d76:	bd80      	pop	{r7, pc}
 8002d78:	2000a000 	.word	0x2000a000
 8002d7c:	00000400 	.word	0x00000400
 8002d80:	20000e40 	.word	0x20000e40
 8002d84:	20000f98 	.word	0x20000f98

08002d88 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @retval None
  */

void SystemInit(void)
{
 8002d88:	b480      	push	{r7}
 8002d8a:	af00      	add	r7, sp, #0
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
#endif

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 8002d8c:	4b06      	ldr	r3, [pc, #24]	; (8002da8 <SystemInit+0x20>)
 8002d8e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002d92:	4a05      	ldr	r2, [pc, #20]	; (8002da8 <SystemInit+0x20>)
 8002d94:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002d98:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
#endif
}
 8002d9c:	bf00      	nop
 8002d9e:	46bd      	mov	sp, r7
 8002da0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002da4:	4770      	bx	lr
 8002da6:	bf00      	nop
 8002da8:	e000ed00 	.word	0xe000ed00

08002dac <Reset_Handler>:
 8002dac:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002de4 <LoopForever+0x2>
 8002db0:	f7ff ffea 	bl	8002d88 <SystemInit>
 8002db4:	480c      	ldr	r0, [pc, #48]	; (8002de8 <LoopForever+0x6>)
 8002db6:	490d      	ldr	r1, [pc, #52]	; (8002dec <LoopForever+0xa>)
 8002db8:	4a0d      	ldr	r2, [pc, #52]	; (8002df0 <LoopForever+0xe>)
 8002dba:	2300      	movs	r3, #0
 8002dbc:	e002      	b.n	8002dc4 <LoopCopyDataInit>

08002dbe <CopyDataInit>:
 8002dbe:	58d4      	ldr	r4, [r2, r3]
 8002dc0:	50c4      	str	r4, [r0, r3]
 8002dc2:	3304      	adds	r3, #4

08002dc4 <LoopCopyDataInit>:
 8002dc4:	18c4      	adds	r4, r0, r3
 8002dc6:	428c      	cmp	r4, r1
 8002dc8:	d3f9      	bcc.n	8002dbe <CopyDataInit>
 8002dca:	4a0a      	ldr	r2, [pc, #40]	; (8002df4 <LoopForever+0x12>)
 8002dcc:	4c0a      	ldr	r4, [pc, #40]	; (8002df8 <LoopForever+0x16>)
 8002dce:	2300      	movs	r3, #0
 8002dd0:	e001      	b.n	8002dd6 <LoopFillZerobss>

08002dd2 <FillZerobss>:
 8002dd2:	6013      	str	r3, [r2, #0]
 8002dd4:	3204      	adds	r2, #4

08002dd6 <LoopFillZerobss>:
 8002dd6:	42a2      	cmp	r2, r4
 8002dd8:	d3fb      	bcc.n	8002dd2 <FillZerobss>
 8002dda:	f005 faaf 	bl	800833c <__libc_init_array>
 8002dde:	f7fe ffc5 	bl	8001d6c <main>

08002de2 <LoopForever>:
 8002de2:	e7fe      	b.n	8002de2 <LoopForever>
 8002de4:	2000a000 	.word	0x2000a000
 8002de8:	20000000 	.word	0x20000000
 8002dec:	200001f0 	.word	0x200001f0
 8002df0:	0800c1c4 	.word	0x0800c1c4
 8002df4:	200001f0 	.word	0x200001f0
 8002df8:	20000f94 	.word	0x20000f94

08002dfc <ADC1_2_IRQHandler>:
 8002dfc:	e7fe      	b.n	8002dfc <ADC1_2_IRQHandler>
	...

08002e00 <HAL_Init>:
 8002e00:	b580      	push	{r7, lr}
 8002e02:	b082      	sub	sp, #8
 8002e04:	af00      	add	r7, sp, #0
 8002e06:	2300      	movs	r3, #0
 8002e08:	71fb      	strb	r3, [r7, #7]
 8002e0a:	4b0c      	ldr	r3, [pc, #48]	; (8002e3c <HAL_Init+0x3c>)
 8002e0c:	681b      	ldr	r3, [r3, #0]
 8002e0e:	4a0b      	ldr	r2, [pc, #44]	; (8002e3c <HAL_Init+0x3c>)
 8002e10:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002e14:	6013      	str	r3, [r2, #0]
 8002e16:	2003      	movs	r0, #3
 8002e18:	f000 f962 	bl	80030e0 <HAL_NVIC_SetPriorityGrouping>
 8002e1c:	2000      	movs	r0, #0
 8002e1e:	f000 f80f 	bl	8002e40 <HAL_InitTick>
 8002e22:	4603      	mov	r3, r0
 8002e24:	2b00      	cmp	r3, #0
 8002e26:	d002      	beq.n	8002e2e <HAL_Init+0x2e>
 8002e28:	2301      	movs	r3, #1
 8002e2a:	71fb      	strb	r3, [r7, #7]
 8002e2c:	e001      	b.n	8002e32 <HAL_Init+0x32>
 8002e2e:	f7ff fd93 	bl	8002958 <HAL_MspInit>
 8002e32:	79fb      	ldrb	r3, [r7, #7]
 8002e34:	4618      	mov	r0, r3
 8002e36:	3708      	adds	r7, #8
 8002e38:	46bd      	mov	sp, r7
 8002e3a:	bd80      	pop	{r7, pc}
 8002e3c:	40022000 	.word	0x40022000

08002e40 <HAL_InitTick>:
 8002e40:	b580      	push	{r7, lr}
 8002e42:	b084      	sub	sp, #16
 8002e44:	af00      	add	r7, sp, #0
 8002e46:	6078      	str	r0, [r7, #4]
 8002e48:	2300      	movs	r3, #0
 8002e4a:	73fb      	strb	r3, [r7, #15]
 8002e4c:	4b17      	ldr	r3, [pc, #92]	; (8002eac <HAL_InitTick+0x6c>)
 8002e4e:	781b      	ldrb	r3, [r3, #0]
 8002e50:	2b00      	cmp	r3, #0
 8002e52:	d023      	beq.n	8002e9c <HAL_InitTick+0x5c>
 8002e54:	4b16      	ldr	r3, [pc, #88]	; (8002eb0 <HAL_InitTick+0x70>)
 8002e56:	681a      	ldr	r2, [r3, #0]
 8002e58:	4b14      	ldr	r3, [pc, #80]	; (8002eac <HAL_InitTick+0x6c>)
 8002e5a:	781b      	ldrb	r3, [r3, #0]
 8002e5c:	4619      	mov	r1, r3
 8002e5e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002e62:	fbb3 f3f1 	udiv	r3, r3, r1
 8002e66:	fbb2 f3f3 	udiv	r3, r2, r3
 8002e6a:	4618      	mov	r0, r3
 8002e6c:	f000 f96d 	bl	800314a <HAL_SYSTICK_Config>
 8002e70:	4603      	mov	r3, r0
 8002e72:	2b00      	cmp	r3, #0
 8002e74:	d10f      	bne.n	8002e96 <HAL_InitTick+0x56>
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	2b0f      	cmp	r3, #15
 8002e7a:	d809      	bhi.n	8002e90 <HAL_InitTick+0x50>
 8002e7c:	2200      	movs	r2, #0
 8002e7e:	6879      	ldr	r1, [r7, #4]
 8002e80:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002e84:	f000 f937 	bl	80030f6 <HAL_NVIC_SetPriority>
 8002e88:	4a0a      	ldr	r2, [pc, #40]	; (8002eb4 <HAL_InitTick+0x74>)
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	6013      	str	r3, [r2, #0]
 8002e8e:	e007      	b.n	8002ea0 <HAL_InitTick+0x60>
 8002e90:	2301      	movs	r3, #1
 8002e92:	73fb      	strb	r3, [r7, #15]
 8002e94:	e004      	b.n	8002ea0 <HAL_InitTick+0x60>
 8002e96:	2301      	movs	r3, #1
 8002e98:	73fb      	strb	r3, [r7, #15]
 8002e9a:	e001      	b.n	8002ea0 <HAL_InitTick+0x60>
 8002e9c:	2301      	movs	r3, #1
 8002e9e:	73fb      	strb	r3, [r7, #15]
 8002ea0:	7bfb      	ldrb	r3, [r7, #15]
 8002ea2:	4618      	mov	r0, r3
 8002ea4:	3710      	adds	r7, #16
 8002ea6:	46bd      	mov	sp, r7
 8002ea8:	bd80      	pop	{r7, pc}
 8002eaa:	bf00      	nop
 8002eac:	20000024 	.word	0x20000024
 8002eb0:	2000001c 	.word	0x2000001c
 8002eb4:	20000020 	.word	0x20000020

08002eb8 <HAL_IncTick>:
 8002eb8:	b480      	push	{r7}
 8002eba:	af00      	add	r7, sp, #0
 8002ebc:	4b06      	ldr	r3, [pc, #24]	; (8002ed8 <HAL_IncTick+0x20>)
 8002ebe:	781b      	ldrb	r3, [r3, #0]
 8002ec0:	461a      	mov	r2, r3
 8002ec2:	4b06      	ldr	r3, [pc, #24]	; (8002edc <HAL_IncTick+0x24>)
 8002ec4:	681b      	ldr	r3, [r3, #0]
 8002ec6:	4413      	add	r3, r2
 8002ec8:	4a04      	ldr	r2, [pc, #16]	; (8002edc <HAL_IncTick+0x24>)
 8002eca:	6013      	str	r3, [r2, #0]
 8002ecc:	bf00      	nop
 8002ece:	46bd      	mov	sp, r7
 8002ed0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ed4:	4770      	bx	lr
 8002ed6:	bf00      	nop
 8002ed8:	20000024 	.word	0x20000024
 8002edc:	20000e44 	.word	0x20000e44

08002ee0 <HAL_GetTick>:
 8002ee0:	b480      	push	{r7}
 8002ee2:	af00      	add	r7, sp, #0
 8002ee4:	4b03      	ldr	r3, [pc, #12]	; (8002ef4 <HAL_GetTick+0x14>)
 8002ee6:	681b      	ldr	r3, [r3, #0]
 8002ee8:	4618      	mov	r0, r3
 8002eea:	46bd      	mov	sp, r7
 8002eec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ef0:	4770      	bx	lr
 8002ef2:	bf00      	nop
 8002ef4:	20000e44 	.word	0x20000e44

08002ef8 <HAL_Delay>:
 8002ef8:	b580      	push	{r7, lr}
 8002efa:	b084      	sub	sp, #16
 8002efc:	af00      	add	r7, sp, #0
 8002efe:	6078      	str	r0, [r7, #4]
 8002f00:	f7ff ffee 	bl	8002ee0 <HAL_GetTick>
 8002f04:	60b8      	str	r0, [r7, #8]
 8002f06:	687b      	ldr	r3, [r7, #4]
 8002f08:	60fb      	str	r3, [r7, #12]
 8002f0a:	68fb      	ldr	r3, [r7, #12]
 8002f0c:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002f10:	d005      	beq.n	8002f1e <HAL_Delay+0x26>
 8002f12:	4b0a      	ldr	r3, [pc, #40]	; (8002f3c <HAL_Delay+0x44>)
 8002f14:	781b      	ldrb	r3, [r3, #0]
 8002f16:	461a      	mov	r2, r3
 8002f18:	68fb      	ldr	r3, [r7, #12]
 8002f1a:	4413      	add	r3, r2
 8002f1c:	60fb      	str	r3, [r7, #12]
 8002f1e:	bf00      	nop
 8002f20:	f7ff ffde 	bl	8002ee0 <HAL_GetTick>
 8002f24:	4602      	mov	r2, r0
 8002f26:	68bb      	ldr	r3, [r7, #8]
 8002f28:	1ad3      	subs	r3, r2, r3
 8002f2a:	68fa      	ldr	r2, [r7, #12]
 8002f2c:	429a      	cmp	r2, r3
 8002f2e:	d8f7      	bhi.n	8002f20 <HAL_Delay+0x28>
 8002f30:	bf00      	nop
 8002f32:	bf00      	nop
 8002f34:	3710      	adds	r7, #16
 8002f36:	46bd      	mov	sp, r7
 8002f38:	bd80      	pop	{r7, pc}
 8002f3a:	bf00      	nop
 8002f3c:	20000024 	.word	0x20000024

08002f40 <__NVIC_SetPriorityGrouping>:
 8002f40:	b480      	push	{r7}
 8002f42:	b085      	sub	sp, #20
 8002f44:	af00      	add	r7, sp, #0
 8002f46:	6078      	str	r0, [r7, #4]
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	f003 0307 	and.w	r3, r3, #7
 8002f4e:	60fb      	str	r3, [r7, #12]
 8002f50:	4b0c      	ldr	r3, [pc, #48]	; (8002f84 <__NVIC_SetPriorityGrouping+0x44>)
 8002f52:	68db      	ldr	r3, [r3, #12]
 8002f54:	60bb      	str	r3, [r7, #8]
 8002f56:	68ba      	ldr	r2, [r7, #8]
 8002f58:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002f5c:	4013      	ands	r3, r2
 8002f5e:	60bb      	str	r3, [r7, #8]
 8002f60:	68fb      	ldr	r3, [r7, #12]
 8002f62:	021a      	lsls	r2, r3, #8
 8002f64:	68bb      	ldr	r3, [r7, #8]
 8002f66:	4313      	orrs	r3, r2
 8002f68:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002f6c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002f70:	60bb      	str	r3, [r7, #8]
 8002f72:	4a04      	ldr	r2, [pc, #16]	; (8002f84 <__NVIC_SetPriorityGrouping+0x44>)
 8002f74:	68bb      	ldr	r3, [r7, #8]
 8002f76:	60d3      	str	r3, [r2, #12]
 8002f78:	bf00      	nop
 8002f7a:	3714      	adds	r7, #20
 8002f7c:	46bd      	mov	sp, r7
 8002f7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f82:	4770      	bx	lr
 8002f84:	e000ed00 	.word	0xe000ed00

08002f88 <__NVIC_GetPriorityGrouping>:
 8002f88:	b480      	push	{r7}
 8002f8a:	af00      	add	r7, sp, #0
 8002f8c:	4b04      	ldr	r3, [pc, #16]	; (8002fa0 <__NVIC_GetPriorityGrouping+0x18>)
 8002f8e:	68db      	ldr	r3, [r3, #12]
 8002f90:	0a1b      	lsrs	r3, r3, #8
 8002f92:	f003 0307 	and.w	r3, r3, #7
 8002f96:	4618      	mov	r0, r3
 8002f98:	46bd      	mov	sp, r7
 8002f9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f9e:	4770      	bx	lr
 8002fa0:	e000ed00 	.word	0xe000ed00

08002fa4 <__NVIC_EnableIRQ>:
 8002fa4:	b480      	push	{r7}
 8002fa6:	b083      	sub	sp, #12
 8002fa8:	af00      	add	r7, sp, #0
 8002faa:	4603      	mov	r3, r0
 8002fac:	71fb      	strb	r3, [r7, #7]
 8002fae:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	db0b      	blt.n	8002fce <__NVIC_EnableIRQ+0x2a>
 8002fb6:	79fb      	ldrb	r3, [r7, #7]
 8002fb8:	f003 021f 	and.w	r2, r3, #31
 8002fbc:	4907      	ldr	r1, [pc, #28]	; (8002fdc <__NVIC_EnableIRQ+0x38>)
 8002fbe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002fc2:	095b      	lsrs	r3, r3, #5
 8002fc4:	2001      	movs	r0, #1
 8002fc6:	fa00 f202 	lsl.w	r2, r0, r2
 8002fca:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002fce:	bf00      	nop
 8002fd0:	370c      	adds	r7, #12
 8002fd2:	46bd      	mov	sp, r7
 8002fd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fd8:	4770      	bx	lr
 8002fda:	bf00      	nop
 8002fdc:	e000e100 	.word	0xe000e100

08002fe0 <__NVIC_SetPriority>:
 8002fe0:	b480      	push	{r7}
 8002fe2:	b083      	sub	sp, #12
 8002fe4:	af00      	add	r7, sp, #0
 8002fe6:	4603      	mov	r3, r0
 8002fe8:	6039      	str	r1, [r7, #0]
 8002fea:	71fb      	strb	r3, [r7, #7]
 8002fec:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ff0:	2b00      	cmp	r3, #0
 8002ff2:	db0a      	blt.n	800300a <__NVIC_SetPriority+0x2a>
 8002ff4:	683b      	ldr	r3, [r7, #0]
 8002ff6:	b2da      	uxtb	r2, r3
 8002ff8:	490c      	ldr	r1, [pc, #48]	; (800302c <__NVIC_SetPriority+0x4c>)
 8002ffa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ffe:	0112      	lsls	r2, r2, #4
 8003000:	b2d2      	uxtb	r2, r2
 8003002:	440b      	add	r3, r1
 8003004:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8003008:	e00a      	b.n	8003020 <__NVIC_SetPriority+0x40>
 800300a:	683b      	ldr	r3, [r7, #0]
 800300c:	b2da      	uxtb	r2, r3
 800300e:	4908      	ldr	r1, [pc, #32]	; (8003030 <__NVIC_SetPriority+0x50>)
 8003010:	79fb      	ldrb	r3, [r7, #7]
 8003012:	f003 030f 	and.w	r3, r3, #15
 8003016:	3b04      	subs	r3, #4
 8003018:	0112      	lsls	r2, r2, #4
 800301a:	b2d2      	uxtb	r2, r2
 800301c:	440b      	add	r3, r1
 800301e:	761a      	strb	r2, [r3, #24]
 8003020:	bf00      	nop
 8003022:	370c      	adds	r7, #12
 8003024:	46bd      	mov	sp, r7
 8003026:	f85d 7b04 	ldr.w	r7, [sp], #4
 800302a:	4770      	bx	lr
 800302c:	e000e100 	.word	0xe000e100
 8003030:	e000ed00 	.word	0xe000ed00

08003034 <NVIC_EncodePriority>:
 8003034:	b480      	push	{r7}
 8003036:	b089      	sub	sp, #36	; 0x24
 8003038:	af00      	add	r7, sp, #0
 800303a:	60f8      	str	r0, [r7, #12]
 800303c:	60b9      	str	r1, [r7, #8]
 800303e:	607a      	str	r2, [r7, #4]
 8003040:	68fb      	ldr	r3, [r7, #12]
 8003042:	f003 0307 	and.w	r3, r3, #7
 8003046:	61fb      	str	r3, [r7, #28]
 8003048:	69fb      	ldr	r3, [r7, #28]
 800304a:	f1c3 0307 	rsb	r3, r3, #7
 800304e:	2b04      	cmp	r3, #4
 8003050:	bf28      	it	cs
 8003052:	2304      	movcs	r3, #4
 8003054:	61bb      	str	r3, [r7, #24]
 8003056:	69fb      	ldr	r3, [r7, #28]
 8003058:	3304      	adds	r3, #4
 800305a:	2b06      	cmp	r3, #6
 800305c:	d902      	bls.n	8003064 <NVIC_EncodePriority+0x30>
 800305e:	69fb      	ldr	r3, [r7, #28]
 8003060:	3b03      	subs	r3, #3
 8003062:	e000      	b.n	8003066 <NVIC_EncodePriority+0x32>
 8003064:	2300      	movs	r3, #0
 8003066:	617b      	str	r3, [r7, #20]
 8003068:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800306c:	69bb      	ldr	r3, [r7, #24]
 800306e:	fa02 f303 	lsl.w	r3, r2, r3
 8003072:	43da      	mvns	r2, r3
 8003074:	68bb      	ldr	r3, [r7, #8]
 8003076:	401a      	ands	r2, r3
 8003078:	697b      	ldr	r3, [r7, #20]
 800307a:	409a      	lsls	r2, r3
 800307c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003080:	697b      	ldr	r3, [r7, #20]
 8003082:	fa01 f303 	lsl.w	r3, r1, r3
 8003086:	43d9      	mvns	r1, r3
 8003088:	687b      	ldr	r3, [r7, #4]
 800308a:	400b      	ands	r3, r1
 800308c:	4313      	orrs	r3, r2
 800308e:	4618      	mov	r0, r3
 8003090:	3724      	adds	r7, #36	; 0x24
 8003092:	46bd      	mov	sp, r7
 8003094:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003098:	4770      	bx	lr
	...

0800309c <SysTick_Config>:
 800309c:	b580      	push	{r7, lr}
 800309e:	b082      	sub	sp, #8
 80030a0:	af00      	add	r7, sp, #0
 80030a2:	6078      	str	r0, [r7, #4]
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	3b01      	subs	r3, #1
 80030a8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80030ac:	d301      	bcc.n	80030b2 <SysTick_Config+0x16>
 80030ae:	2301      	movs	r3, #1
 80030b0:	e00f      	b.n	80030d2 <SysTick_Config+0x36>
 80030b2:	4a0a      	ldr	r2, [pc, #40]	; (80030dc <SysTick_Config+0x40>)
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	3b01      	subs	r3, #1
 80030b8:	6053      	str	r3, [r2, #4]
 80030ba:	210f      	movs	r1, #15
 80030bc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80030c0:	f7ff ff8e 	bl	8002fe0 <__NVIC_SetPriority>
 80030c4:	4b05      	ldr	r3, [pc, #20]	; (80030dc <SysTick_Config+0x40>)
 80030c6:	2200      	movs	r2, #0
 80030c8:	609a      	str	r2, [r3, #8]
 80030ca:	4b04      	ldr	r3, [pc, #16]	; (80030dc <SysTick_Config+0x40>)
 80030cc:	2207      	movs	r2, #7
 80030ce:	601a      	str	r2, [r3, #0]
 80030d0:	2300      	movs	r3, #0
 80030d2:	4618      	mov	r0, r3
 80030d4:	3708      	adds	r7, #8
 80030d6:	46bd      	mov	sp, r7
 80030d8:	bd80      	pop	{r7, pc}
 80030da:	bf00      	nop
 80030dc:	e000e010 	.word	0xe000e010

080030e0 <HAL_NVIC_SetPriorityGrouping>:
 80030e0:	b580      	push	{r7, lr}
 80030e2:	b082      	sub	sp, #8
 80030e4:	af00      	add	r7, sp, #0
 80030e6:	6078      	str	r0, [r7, #4]
 80030e8:	6878      	ldr	r0, [r7, #4]
 80030ea:	f7ff ff29 	bl	8002f40 <__NVIC_SetPriorityGrouping>
 80030ee:	bf00      	nop
 80030f0:	3708      	adds	r7, #8
 80030f2:	46bd      	mov	sp, r7
 80030f4:	bd80      	pop	{r7, pc}

080030f6 <HAL_NVIC_SetPriority>:
 80030f6:	b580      	push	{r7, lr}
 80030f8:	b086      	sub	sp, #24
 80030fa:	af00      	add	r7, sp, #0
 80030fc:	4603      	mov	r3, r0
 80030fe:	60b9      	str	r1, [r7, #8]
 8003100:	607a      	str	r2, [r7, #4]
 8003102:	73fb      	strb	r3, [r7, #15]
 8003104:	2300      	movs	r3, #0
 8003106:	617b      	str	r3, [r7, #20]
 8003108:	f7ff ff3e 	bl	8002f88 <__NVIC_GetPriorityGrouping>
 800310c:	6178      	str	r0, [r7, #20]
 800310e:	687a      	ldr	r2, [r7, #4]
 8003110:	68b9      	ldr	r1, [r7, #8]
 8003112:	6978      	ldr	r0, [r7, #20]
 8003114:	f7ff ff8e 	bl	8003034 <NVIC_EncodePriority>
 8003118:	4602      	mov	r2, r0
 800311a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800311e:	4611      	mov	r1, r2
 8003120:	4618      	mov	r0, r3
 8003122:	f7ff ff5d 	bl	8002fe0 <__NVIC_SetPriority>
 8003126:	bf00      	nop
 8003128:	3718      	adds	r7, #24
 800312a:	46bd      	mov	sp, r7
 800312c:	bd80      	pop	{r7, pc}

0800312e <HAL_NVIC_EnableIRQ>:
 800312e:	b580      	push	{r7, lr}
 8003130:	b082      	sub	sp, #8
 8003132:	af00      	add	r7, sp, #0
 8003134:	4603      	mov	r3, r0
 8003136:	71fb      	strb	r3, [r7, #7]
 8003138:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800313c:	4618      	mov	r0, r3
 800313e:	f7ff ff31 	bl	8002fa4 <__NVIC_EnableIRQ>
 8003142:	bf00      	nop
 8003144:	3708      	adds	r7, #8
 8003146:	46bd      	mov	sp, r7
 8003148:	bd80      	pop	{r7, pc}

0800314a <HAL_SYSTICK_Config>:
 800314a:	b580      	push	{r7, lr}
 800314c:	b082      	sub	sp, #8
 800314e:	af00      	add	r7, sp, #0
 8003150:	6078      	str	r0, [r7, #4]
 8003152:	6878      	ldr	r0, [r7, #4]
 8003154:	f7ff ffa2 	bl	800309c <SysTick_Config>
 8003158:	4603      	mov	r3, r0
 800315a:	4618      	mov	r0, r3
 800315c:	3708      	adds	r7, #8
 800315e:	46bd      	mov	sp, r7
 8003160:	bd80      	pop	{r7, pc}

08003162 <HAL_DMA_Abort>:
 8003162:	b480      	push	{r7}
 8003164:	b085      	sub	sp, #20
 8003166:	af00      	add	r7, sp, #0
 8003168:	6078      	str	r0, [r7, #4]
 800316a:	2300      	movs	r3, #0
 800316c:	73fb      	strb	r3, [r7, #15]
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 8003174:	b2db      	uxtb	r3, r3
 8003176:	2b02      	cmp	r3, #2
 8003178:	d008      	beq.n	800318c <HAL_DMA_Abort+0x2a>
 800317a:	687b      	ldr	r3, [r7, #4]
 800317c:	2204      	movs	r2, #4
 800317e:	63da      	str	r2, [r3, #60]	; 0x3c
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	2200      	movs	r2, #0
 8003184:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8003188:	2301      	movs	r3, #1
 800318a:	e022      	b.n	80031d2 <HAL_DMA_Abort+0x70>
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	681b      	ldr	r3, [r3, #0]
 8003190:	681a      	ldr	r2, [r3, #0]
 8003192:	687b      	ldr	r3, [r7, #4]
 8003194:	681b      	ldr	r3, [r3, #0]
 8003196:	f022 020e 	bic.w	r2, r2, #14
 800319a:	601a      	str	r2, [r3, #0]
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	681b      	ldr	r3, [r3, #0]
 80031a0:	681a      	ldr	r2, [r3, #0]
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	681b      	ldr	r3, [r3, #0]
 80031a6:	f022 0201 	bic.w	r2, r2, #1
 80031aa:	601a      	str	r2, [r3, #0]
 80031ac:	687b      	ldr	r3, [r7, #4]
 80031ae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80031b0:	f003 021c 	and.w	r2, r3, #28
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80031b8:	2101      	movs	r1, #1
 80031ba:	fa01 f202 	lsl.w	r2, r1, r2
 80031be:	605a      	str	r2, [r3, #4]
 80031c0:	687b      	ldr	r3, [r7, #4]
 80031c2:	2201      	movs	r2, #1
 80031c4:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	2200      	movs	r2, #0
 80031cc:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80031d0:	7bfb      	ldrb	r3, [r7, #15]
 80031d2:	4618      	mov	r0, r3
 80031d4:	3714      	adds	r7, #20
 80031d6:	46bd      	mov	sp, r7
 80031d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031dc:	4770      	bx	lr

080031de <HAL_DMA_Abort_IT>:
 80031de:	b580      	push	{r7, lr}
 80031e0:	b084      	sub	sp, #16
 80031e2:	af00      	add	r7, sp, #0
 80031e4:	6078      	str	r0, [r7, #4]
 80031e6:	2300      	movs	r3, #0
 80031e8:	73fb      	strb	r3, [r7, #15]
 80031ea:	687b      	ldr	r3, [r7, #4]
 80031ec:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 80031f0:	b2db      	uxtb	r3, r3
 80031f2:	2b02      	cmp	r3, #2
 80031f4:	d005      	beq.n	8003202 <HAL_DMA_Abort_IT+0x24>
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	2204      	movs	r2, #4
 80031fa:	63da      	str	r2, [r3, #60]	; 0x3c
 80031fc:	2301      	movs	r3, #1
 80031fe:	73fb      	strb	r3, [r7, #15]
 8003200:	e029      	b.n	8003256 <HAL_DMA_Abort_IT+0x78>
 8003202:	687b      	ldr	r3, [r7, #4]
 8003204:	681b      	ldr	r3, [r3, #0]
 8003206:	681a      	ldr	r2, [r3, #0]
 8003208:	687b      	ldr	r3, [r7, #4]
 800320a:	681b      	ldr	r3, [r3, #0]
 800320c:	f022 020e 	bic.w	r2, r2, #14
 8003210:	601a      	str	r2, [r3, #0]
 8003212:	687b      	ldr	r3, [r7, #4]
 8003214:	681b      	ldr	r3, [r3, #0]
 8003216:	681a      	ldr	r2, [r3, #0]
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	681b      	ldr	r3, [r3, #0]
 800321c:	f022 0201 	bic.w	r2, r2, #1
 8003220:	601a      	str	r2, [r3, #0]
 8003222:	687b      	ldr	r3, [r7, #4]
 8003224:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003226:	f003 021c 	and.w	r2, r3, #28
 800322a:	687b      	ldr	r3, [r7, #4]
 800322c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800322e:	2101      	movs	r1, #1
 8003230:	fa01 f202 	lsl.w	r2, r1, r2
 8003234:	605a      	str	r2, [r3, #4]
 8003236:	687b      	ldr	r3, [r7, #4]
 8003238:	2201      	movs	r2, #1
 800323a:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	2200      	movs	r2, #0
 8003242:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800324a:	2b00      	cmp	r3, #0
 800324c:	d003      	beq.n	8003256 <HAL_DMA_Abort_IT+0x78>
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003252:	6878      	ldr	r0, [r7, #4]
 8003254:	4798      	blx	r3
 8003256:	7bfb      	ldrb	r3, [r7, #15]
 8003258:	4618      	mov	r0, r3
 800325a:	3710      	adds	r7, #16
 800325c:	46bd      	mov	sp, r7
 800325e:	bd80      	pop	{r7, pc}

08003260 <HAL_GPIO_Init>:
 8003260:	b480      	push	{r7}
 8003262:	b087      	sub	sp, #28
 8003264:	af00      	add	r7, sp, #0
 8003266:	6078      	str	r0, [r7, #4]
 8003268:	6039      	str	r1, [r7, #0]
 800326a:	2300      	movs	r3, #0
 800326c:	617b      	str	r3, [r7, #20]
 800326e:	e14e      	b.n	800350e <HAL_GPIO_Init+0x2ae>
 8003270:	683b      	ldr	r3, [r7, #0]
 8003272:	681a      	ldr	r2, [r3, #0]
 8003274:	2101      	movs	r1, #1
 8003276:	697b      	ldr	r3, [r7, #20]
 8003278:	fa01 f303 	lsl.w	r3, r1, r3
 800327c:	4013      	ands	r3, r2
 800327e:	60fb      	str	r3, [r7, #12]
 8003280:	68fb      	ldr	r3, [r7, #12]
 8003282:	2b00      	cmp	r3, #0
 8003284:	f000 8140 	beq.w	8003508 <HAL_GPIO_Init+0x2a8>
 8003288:	683b      	ldr	r3, [r7, #0]
 800328a:	685b      	ldr	r3, [r3, #4]
 800328c:	f003 0303 	and.w	r3, r3, #3
 8003290:	2b01      	cmp	r3, #1
 8003292:	d005      	beq.n	80032a0 <HAL_GPIO_Init+0x40>
 8003294:	683b      	ldr	r3, [r7, #0]
 8003296:	685b      	ldr	r3, [r3, #4]
 8003298:	f003 0303 	and.w	r3, r3, #3
 800329c:	2b02      	cmp	r3, #2
 800329e:	d130      	bne.n	8003302 <HAL_GPIO_Init+0xa2>
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	689b      	ldr	r3, [r3, #8]
 80032a4:	613b      	str	r3, [r7, #16]
 80032a6:	697b      	ldr	r3, [r7, #20]
 80032a8:	005b      	lsls	r3, r3, #1
 80032aa:	2203      	movs	r2, #3
 80032ac:	fa02 f303 	lsl.w	r3, r2, r3
 80032b0:	43db      	mvns	r3, r3
 80032b2:	693a      	ldr	r2, [r7, #16]
 80032b4:	4013      	ands	r3, r2
 80032b6:	613b      	str	r3, [r7, #16]
 80032b8:	683b      	ldr	r3, [r7, #0]
 80032ba:	68da      	ldr	r2, [r3, #12]
 80032bc:	697b      	ldr	r3, [r7, #20]
 80032be:	005b      	lsls	r3, r3, #1
 80032c0:	fa02 f303 	lsl.w	r3, r2, r3
 80032c4:	693a      	ldr	r2, [r7, #16]
 80032c6:	4313      	orrs	r3, r2
 80032c8:	613b      	str	r3, [r7, #16]
 80032ca:	687b      	ldr	r3, [r7, #4]
 80032cc:	693a      	ldr	r2, [r7, #16]
 80032ce:	609a      	str	r2, [r3, #8]
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	685b      	ldr	r3, [r3, #4]
 80032d4:	613b      	str	r3, [r7, #16]
 80032d6:	2201      	movs	r2, #1
 80032d8:	697b      	ldr	r3, [r7, #20]
 80032da:	fa02 f303 	lsl.w	r3, r2, r3
 80032de:	43db      	mvns	r3, r3
 80032e0:	693a      	ldr	r2, [r7, #16]
 80032e2:	4013      	ands	r3, r2
 80032e4:	613b      	str	r3, [r7, #16]
 80032e6:	683b      	ldr	r3, [r7, #0]
 80032e8:	685b      	ldr	r3, [r3, #4]
 80032ea:	091b      	lsrs	r3, r3, #4
 80032ec:	f003 0201 	and.w	r2, r3, #1
 80032f0:	697b      	ldr	r3, [r7, #20]
 80032f2:	fa02 f303 	lsl.w	r3, r2, r3
 80032f6:	693a      	ldr	r2, [r7, #16]
 80032f8:	4313      	orrs	r3, r2
 80032fa:	613b      	str	r3, [r7, #16]
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	693a      	ldr	r2, [r7, #16]
 8003300:	605a      	str	r2, [r3, #4]
 8003302:	683b      	ldr	r3, [r7, #0]
 8003304:	685b      	ldr	r3, [r3, #4]
 8003306:	f003 0303 	and.w	r3, r3, #3
 800330a:	2b03      	cmp	r3, #3
 800330c:	d017      	beq.n	800333e <HAL_GPIO_Init+0xde>
 800330e:	687b      	ldr	r3, [r7, #4]
 8003310:	68db      	ldr	r3, [r3, #12]
 8003312:	613b      	str	r3, [r7, #16]
 8003314:	697b      	ldr	r3, [r7, #20]
 8003316:	005b      	lsls	r3, r3, #1
 8003318:	2203      	movs	r2, #3
 800331a:	fa02 f303 	lsl.w	r3, r2, r3
 800331e:	43db      	mvns	r3, r3
 8003320:	693a      	ldr	r2, [r7, #16]
 8003322:	4013      	ands	r3, r2
 8003324:	613b      	str	r3, [r7, #16]
 8003326:	683b      	ldr	r3, [r7, #0]
 8003328:	689a      	ldr	r2, [r3, #8]
 800332a:	697b      	ldr	r3, [r7, #20]
 800332c:	005b      	lsls	r3, r3, #1
 800332e:	fa02 f303 	lsl.w	r3, r2, r3
 8003332:	693a      	ldr	r2, [r7, #16]
 8003334:	4313      	orrs	r3, r2
 8003336:	613b      	str	r3, [r7, #16]
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	693a      	ldr	r2, [r7, #16]
 800333c:	60da      	str	r2, [r3, #12]
 800333e:	683b      	ldr	r3, [r7, #0]
 8003340:	685b      	ldr	r3, [r3, #4]
 8003342:	f003 0303 	and.w	r3, r3, #3
 8003346:	2b02      	cmp	r3, #2
 8003348:	d123      	bne.n	8003392 <HAL_GPIO_Init+0x132>
 800334a:	697b      	ldr	r3, [r7, #20]
 800334c:	08da      	lsrs	r2, r3, #3
 800334e:	687b      	ldr	r3, [r7, #4]
 8003350:	3208      	adds	r2, #8
 8003352:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003356:	613b      	str	r3, [r7, #16]
 8003358:	697b      	ldr	r3, [r7, #20]
 800335a:	f003 0307 	and.w	r3, r3, #7
 800335e:	009b      	lsls	r3, r3, #2
 8003360:	220f      	movs	r2, #15
 8003362:	fa02 f303 	lsl.w	r3, r2, r3
 8003366:	43db      	mvns	r3, r3
 8003368:	693a      	ldr	r2, [r7, #16]
 800336a:	4013      	ands	r3, r2
 800336c:	613b      	str	r3, [r7, #16]
 800336e:	683b      	ldr	r3, [r7, #0]
 8003370:	691a      	ldr	r2, [r3, #16]
 8003372:	697b      	ldr	r3, [r7, #20]
 8003374:	f003 0307 	and.w	r3, r3, #7
 8003378:	009b      	lsls	r3, r3, #2
 800337a:	fa02 f303 	lsl.w	r3, r2, r3
 800337e:	693a      	ldr	r2, [r7, #16]
 8003380:	4313      	orrs	r3, r2
 8003382:	613b      	str	r3, [r7, #16]
 8003384:	697b      	ldr	r3, [r7, #20]
 8003386:	08da      	lsrs	r2, r3, #3
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	3208      	adds	r2, #8
 800338c:	6939      	ldr	r1, [r7, #16]
 800338e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003392:	687b      	ldr	r3, [r7, #4]
 8003394:	681b      	ldr	r3, [r3, #0]
 8003396:	613b      	str	r3, [r7, #16]
 8003398:	697b      	ldr	r3, [r7, #20]
 800339a:	005b      	lsls	r3, r3, #1
 800339c:	2203      	movs	r2, #3
 800339e:	fa02 f303 	lsl.w	r3, r2, r3
 80033a2:	43db      	mvns	r3, r3
 80033a4:	693a      	ldr	r2, [r7, #16]
 80033a6:	4013      	ands	r3, r2
 80033a8:	613b      	str	r3, [r7, #16]
 80033aa:	683b      	ldr	r3, [r7, #0]
 80033ac:	685b      	ldr	r3, [r3, #4]
 80033ae:	f003 0203 	and.w	r2, r3, #3
 80033b2:	697b      	ldr	r3, [r7, #20]
 80033b4:	005b      	lsls	r3, r3, #1
 80033b6:	fa02 f303 	lsl.w	r3, r2, r3
 80033ba:	693a      	ldr	r2, [r7, #16]
 80033bc:	4313      	orrs	r3, r2
 80033be:	613b      	str	r3, [r7, #16]
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	693a      	ldr	r2, [r7, #16]
 80033c4:	601a      	str	r2, [r3, #0]
 80033c6:	683b      	ldr	r3, [r7, #0]
 80033c8:	685b      	ldr	r3, [r3, #4]
 80033ca:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80033ce:	2b00      	cmp	r3, #0
 80033d0:	f000 809a 	beq.w	8003508 <HAL_GPIO_Init+0x2a8>
 80033d4:	4b55      	ldr	r3, [pc, #340]	; (800352c <HAL_GPIO_Init+0x2cc>)
 80033d6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80033d8:	4a54      	ldr	r2, [pc, #336]	; (800352c <HAL_GPIO_Init+0x2cc>)
 80033da:	f043 0301 	orr.w	r3, r3, #1
 80033de:	6613      	str	r3, [r2, #96]	; 0x60
 80033e0:	4b52      	ldr	r3, [pc, #328]	; (800352c <HAL_GPIO_Init+0x2cc>)
 80033e2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80033e4:	f003 0301 	and.w	r3, r3, #1
 80033e8:	60bb      	str	r3, [r7, #8]
 80033ea:	68bb      	ldr	r3, [r7, #8]
 80033ec:	4a50      	ldr	r2, [pc, #320]	; (8003530 <HAL_GPIO_Init+0x2d0>)
 80033ee:	697b      	ldr	r3, [r7, #20]
 80033f0:	089b      	lsrs	r3, r3, #2
 80033f2:	3302      	adds	r3, #2
 80033f4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80033f8:	613b      	str	r3, [r7, #16]
 80033fa:	697b      	ldr	r3, [r7, #20]
 80033fc:	f003 0303 	and.w	r3, r3, #3
 8003400:	009b      	lsls	r3, r3, #2
 8003402:	220f      	movs	r2, #15
 8003404:	fa02 f303 	lsl.w	r3, r2, r3
 8003408:	43db      	mvns	r3, r3
 800340a:	693a      	ldr	r2, [r7, #16]
 800340c:	4013      	ands	r3, r2
 800340e:	613b      	str	r3, [r7, #16]
 8003410:	687b      	ldr	r3, [r7, #4]
 8003412:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8003416:	d013      	beq.n	8003440 <HAL_GPIO_Init+0x1e0>
 8003418:	687b      	ldr	r3, [r7, #4]
 800341a:	4a46      	ldr	r2, [pc, #280]	; (8003534 <HAL_GPIO_Init+0x2d4>)
 800341c:	4293      	cmp	r3, r2
 800341e:	d00d      	beq.n	800343c <HAL_GPIO_Init+0x1dc>
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	4a45      	ldr	r2, [pc, #276]	; (8003538 <HAL_GPIO_Init+0x2d8>)
 8003424:	4293      	cmp	r3, r2
 8003426:	d007      	beq.n	8003438 <HAL_GPIO_Init+0x1d8>
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	4a44      	ldr	r2, [pc, #272]	; (800353c <HAL_GPIO_Init+0x2dc>)
 800342c:	4293      	cmp	r3, r2
 800342e:	d101      	bne.n	8003434 <HAL_GPIO_Init+0x1d4>
 8003430:	2303      	movs	r3, #3
 8003432:	e006      	b.n	8003442 <HAL_GPIO_Init+0x1e2>
 8003434:	2307      	movs	r3, #7
 8003436:	e004      	b.n	8003442 <HAL_GPIO_Init+0x1e2>
 8003438:	2302      	movs	r3, #2
 800343a:	e002      	b.n	8003442 <HAL_GPIO_Init+0x1e2>
 800343c:	2301      	movs	r3, #1
 800343e:	e000      	b.n	8003442 <HAL_GPIO_Init+0x1e2>
 8003440:	2300      	movs	r3, #0
 8003442:	697a      	ldr	r2, [r7, #20]
 8003444:	f002 0203 	and.w	r2, r2, #3
 8003448:	0092      	lsls	r2, r2, #2
 800344a:	4093      	lsls	r3, r2
 800344c:	693a      	ldr	r2, [r7, #16]
 800344e:	4313      	orrs	r3, r2
 8003450:	613b      	str	r3, [r7, #16]
 8003452:	4937      	ldr	r1, [pc, #220]	; (8003530 <HAL_GPIO_Init+0x2d0>)
 8003454:	697b      	ldr	r3, [r7, #20]
 8003456:	089b      	lsrs	r3, r3, #2
 8003458:	3302      	adds	r3, #2
 800345a:	693a      	ldr	r2, [r7, #16]
 800345c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003460:	4b37      	ldr	r3, [pc, #220]	; (8003540 <HAL_GPIO_Init+0x2e0>)
 8003462:	689b      	ldr	r3, [r3, #8]
 8003464:	613b      	str	r3, [r7, #16]
 8003466:	68fb      	ldr	r3, [r7, #12]
 8003468:	43db      	mvns	r3, r3
 800346a:	693a      	ldr	r2, [r7, #16]
 800346c:	4013      	ands	r3, r2
 800346e:	613b      	str	r3, [r7, #16]
 8003470:	683b      	ldr	r3, [r7, #0]
 8003472:	685b      	ldr	r3, [r3, #4]
 8003474:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003478:	2b00      	cmp	r3, #0
 800347a:	d003      	beq.n	8003484 <HAL_GPIO_Init+0x224>
 800347c:	693a      	ldr	r2, [r7, #16]
 800347e:	68fb      	ldr	r3, [r7, #12]
 8003480:	4313      	orrs	r3, r2
 8003482:	613b      	str	r3, [r7, #16]
 8003484:	4a2e      	ldr	r2, [pc, #184]	; (8003540 <HAL_GPIO_Init+0x2e0>)
 8003486:	693b      	ldr	r3, [r7, #16]
 8003488:	6093      	str	r3, [r2, #8]
 800348a:	4b2d      	ldr	r3, [pc, #180]	; (8003540 <HAL_GPIO_Init+0x2e0>)
 800348c:	68db      	ldr	r3, [r3, #12]
 800348e:	613b      	str	r3, [r7, #16]
 8003490:	68fb      	ldr	r3, [r7, #12]
 8003492:	43db      	mvns	r3, r3
 8003494:	693a      	ldr	r2, [r7, #16]
 8003496:	4013      	ands	r3, r2
 8003498:	613b      	str	r3, [r7, #16]
 800349a:	683b      	ldr	r3, [r7, #0]
 800349c:	685b      	ldr	r3, [r3, #4]
 800349e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80034a2:	2b00      	cmp	r3, #0
 80034a4:	d003      	beq.n	80034ae <HAL_GPIO_Init+0x24e>
 80034a6:	693a      	ldr	r2, [r7, #16]
 80034a8:	68fb      	ldr	r3, [r7, #12]
 80034aa:	4313      	orrs	r3, r2
 80034ac:	613b      	str	r3, [r7, #16]
 80034ae:	4a24      	ldr	r2, [pc, #144]	; (8003540 <HAL_GPIO_Init+0x2e0>)
 80034b0:	693b      	ldr	r3, [r7, #16]
 80034b2:	60d3      	str	r3, [r2, #12]
 80034b4:	4b22      	ldr	r3, [pc, #136]	; (8003540 <HAL_GPIO_Init+0x2e0>)
 80034b6:	685b      	ldr	r3, [r3, #4]
 80034b8:	613b      	str	r3, [r7, #16]
 80034ba:	68fb      	ldr	r3, [r7, #12]
 80034bc:	43db      	mvns	r3, r3
 80034be:	693a      	ldr	r2, [r7, #16]
 80034c0:	4013      	ands	r3, r2
 80034c2:	613b      	str	r3, [r7, #16]
 80034c4:	683b      	ldr	r3, [r7, #0]
 80034c6:	685b      	ldr	r3, [r3, #4]
 80034c8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80034cc:	2b00      	cmp	r3, #0
 80034ce:	d003      	beq.n	80034d8 <HAL_GPIO_Init+0x278>
 80034d0:	693a      	ldr	r2, [r7, #16]
 80034d2:	68fb      	ldr	r3, [r7, #12]
 80034d4:	4313      	orrs	r3, r2
 80034d6:	613b      	str	r3, [r7, #16]
 80034d8:	4a19      	ldr	r2, [pc, #100]	; (8003540 <HAL_GPIO_Init+0x2e0>)
 80034da:	693b      	ldr	r3, [r7, #16]
 80034dc:	6053      	str	r3, [r2, #4]
 80034de:	4b18      	ldr	r3, [pc, #96]	; (8003540 <HAL_GPIO_Init+0x2e0>)
 80034e0:	681b      	ldr	r3, [r3, #0]
 80034e2:	613b      	str	r3, [r7, #16]
 80034e4:	68fb      	ldr	r3, [r7, #12]
 80034e6:	43db      	mvns	r3, r3
 80034e8:	693a      	ldr	r2, [r7, #16]
 80034ea:	4013      	ands	r3, r2
 80034ec:	613b      	str	r3, [r7, #16]
 80034ee:	683b      	ldr	r3, [r7, #0]
 80034f0:	685b      	ldr	r3, [r3, #4]
 80034f2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80034f6:	2b00      	cmp	r3, #0
 80034f8:	d003      	beq.n	8003502 <HAL_GPIO_Init+0x2a2>
 80034fa:	693a      	ldr	r2, [r7, #16]
 80034fc:	68fb      	ldr	r3, [r7, #12]
 80034fe:	4313      	orrs	r3, r2
 8003500:	613b      	str	r3, [r7, #16]
 8003502:	4a0f      	ldr	r2, [pc, #60]	; (8003540 <HAL_GPIO_Init+0x2e0>)
 8003504:	693b      	ldr	r3, [r7, #16]
 8003506:	6013      	str	r3, [r2, #0]
 8003508:	697b      	ldr	r3, [r7, #20]
 800350a:	3301      	adds	r3, #1
 800350c:	617b      	str	r3, [r7, #20]
 800350e:	683b      	ldr	r3, [r7, #0]
 8003510:	681a      	ldr	r2, [r3, #0]
 8003512:	697b      	ldr	r3, [r7, #20]
 8003514:	fa22 f303 	lsr.w	r3, r2, r3
 8003518:	2b00      	cmp	r3, #0
 800351a:	f47f aea9 	bne.w	8003270 <HAL_GPIO_Init+0x10>
 800351e:	bf00      	nop
 8003520:	bf00      	nop
 8003522:	371c      	adds	r7, #28
 8003524:	46bd      	mov	sp, r7
 8003526:	f85d 7b04 	ldr.w	r7, [sp], #4
 800352a:	4770      	bx	lr
 800352c:	40021000 	.word	0x40021000
 8003530:	40010000 	.word	0x40010000
 8003534:	48000400 	.word	0x48000400
 8003538:	48000800 	.word	0x48000800
 800353c:	48000c00 	.word	0x48000c00
 8003540:	40010400 	.word	0x40010400

08003544 <HAL_GPIO_WritePin>:
 8003544:	b480      	push	{r7}
 8003546:	b083      	sub	sp, #12
 8003548:	af00      	add	r7, sp, #0
 800354a:	6078      	str	r0, [r7, #4]
 800354c:	460b      	mov	r3, r1
 800354e:	807b      	strh	r3, [r7, #2]
 8003550:	4613      	mov	r3, r2
 8003552:	707b      	strb	r3, [r7, #1]
 8003554:	787b      	ldrb	r3, [r7, #1]
 8003556:	2b00      	cmp	r3, #0
 8003558:	d003      	beq.n	8003562 <HAL_GPIO_WritePin+0x1e>
 800355a:	887a      	ldrh	r2, [r7, #2]
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	619a      	str	r2, [r3, #24]
 8003560:	e002      	b.n	8003568 <HAL_GPIO_WritePin+0x24>
 8003562:	887a      	ldrh	r2, [r7, #2]
 8003564:	687b      	ldr	r3, [r7, #4]
 8003566:	629a      	str	r2, [r3, #40]	; 0x28
 8003568:	bf00      	nop
 800356a:	370c      	adds	r7, #12
 800356c:	46bd      	mov	sp, r7
 800356e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003572:	4770      	bx	lr

08003574 <HAL_GPIO_TogglePin>:
 8003574:	b480      	push	{r7}
 8003576:	b085      	sub	sp, #20
 8003578:	af00      	add	r7, sp, #0
 800357a:	6078      	str	r0, [r7, #4]
 800357c:	460b      	mov	r3, r1
 800357e:	807b      	strh	r3, [r7, #2]
 8003580:	687b      	ldr	r3, [r7, #4]
 8003582:	695b      	ldr	r3, [r3, #20]
 8003584:	60fb      	str	r3, [r7, #12]
 8003586:	887a      	ldrh	r2, [r7, #2]
 8003588:	68fb      	ldr	r3, [r7, #12]
 800358a:	4013      	ands	r3, r2
 800358c:	041a      	lsls	r2, r3, #16
 800358e:	68fb      	ldr	r3, [r7, #12]
 8003590:	43d9      	mvns	r1, r3
 8003592:	887b      	ldrh	r3, [r7, #2]
 8003594:	400b      	ands	r3, r1
 8003596:	431a      	orrs	r2, r3
 8003598:	687b      	ldr	r3, [r7, #4]
 800359a:	619a      	str	r2, [r3, #24]
 800359c:	bf00      	nop
 800359e:	3714      	adds	r7, #20
 80035a0:	46bd      	mov	sp, r7
 80035a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035a6:	4770      	bx	lr

080035a8 <HAL_I2C_Init>:
 80035a8:	b580      	push	{r7, lr}
 80035aa:	b082      	sub	sp, #8
 80035ac:	af00      	add	r7, sp, #0
 80035ae:	6078      	str	r0, [r7, #4]
 80035b0:	687b      	ldr	r3, [r7, #4]
 80035b2:	2b00      	cmp	r3, #0
 80035b4:	d101      	bne.n	80035ba <HAL_I2C_Init+0x12>
 80035b6:	2301      	movs	r3, #1
 80035b8:	e08d      	b.n	80036d6 <HAL_I2C_Init+0x12e>
 80035ba:	687b      	ldr	r3, [r7, #4]
 80035bc:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80035c0:	b2db      	uxtb	r3, r3
 80035c2:	2b00      	cmp	r3, #0
 80035c4:	d106      	bne.n	80035d4 <HAL_I2C_Init+0x2c>
 80035c6:	687b      	ldr	r3, [r7, #4]
 80035c8:	2200      	movs	r2, #0
 80035ca:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80035ce:	6878      	ldr	r0, [r7, #4]
 80035d0:	f7ff f9e6 	bl	80029a0 <HAL_I2C_MspInit>
 80035d4:	687b      	ldr	r3, [r7, #4]
 80035d6:	2224      	movs	r2, #36	; 0x24
 80035d8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	681b      	ldr	r3, [r3, #0]
 80035e0:	681a      	ldr	r2, [r3, #0]
 80035e2:	687b      	ldr	r3, [r7, #4]
 80035e4:	681b      	ldr	r3, [r3, #0]
 80035e6:	f022 0201 	bic.w	r2, r2, #1
 80035ea:	601a      	str	r2, [r3, #0]
 80035ec:	687b      	ldr	r3, [r7, #4]
 80035ee:	685a      	ldr	r2, [r3, #4]
 80035f0:	687b      	ldr	r3, [r7, #4]
 80035f2:	681b      	ldr	r3, [r3, #0]
 80035f4:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80035f8:	611a      	str	r2, [r3, #16]
 80035fa:	687b      	ldr	r3, [r7, #4]
 80035fc:	681b      	ldr	r3, [r3, #0]
 80035fe:	689a      	ldr	r2, [r3, #8]
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	681b      	ldr	r3, [r3, #0]
 8003604:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003608:	609a      	str	r2, [r3, #8]
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	68db      	ldr	r3, [r3, #12]
 800360e:	2b01      	cmp	r3, #1
 8003610:	d107      	bne.n	8003622 <HAL_I2C_Init+0x7a>
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	689a      	ldr	r2, [r3, #8]
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	681b      	ldr	r3, [r3, #0]
 800361a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800361e:	609a      	str	r2, [r3, #8]
 8003620:	e006      	b.n	8003630 <HAL_I2C_Init+0x88>
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	689a      	ldr	r2, [r3, #8]
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	681b      	ldr	r3, [r3, #0]
 800362a:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 800362e:	609a      	str	r2, [r3, #8]
 8003630:	687b      	ldr	r3, [r7, #4]
 8003632:	68db      	ldr	r3, [r3, #12]
 8003634:	2b02      	cmp	r3, #2
 8003636:	d108      	bne.n	800364a <HAL_I2C_Init+0xa2>
 8003638:	687b      	ldr	r3, [r7, #4]
 800363a:	681b      	ldr	r3, [r3, #0]
 800363c:	685a      	ldr	r2, [r3, #4]
 800363e:	687b      	ldr	r3, [r7, #4]
 8003640:	681b      	ldr	r3, [r3, #0]
 8003642:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8003646:	605a      	str	r2, [r3, #4]
 8003648:	e007      	b.n	800365a <HAL_I2C_Init+0xb2>
 800364a:	687b      	ldr	r3, [r7, #4]
 800364c:	681b      	ldr	r3, [r3, #0]
 800364e:	685a      	ldr	r2, [r3, #4]
 8003650:	687b      	ldr	r3, [r7, #4]
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003658:	605a      	str	r2, [r3, #4]
 800365a:	687b      	ldr	r3, [r7, #4]
 800365c:	681b      	ldr	r3, [r3, #0]
 800365e:	685b      	ldr	r3, [r3, #4]
 8003660:	687a      	ldr	r2, [r7, #4]
 8003662:	6812      	ldr	r2, [r2, #0]
 8003664:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8003668:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800366c:	6053      	str	r3, [r2, #4]
 800366e:	687b      	ldr	r3, [r7, #4]
 8003670:	681b      	ldr	r3, [r3, #0]
 8003672:	68da      	ldr	r2, [r3, #12]
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	681b      	ldr	r3, [r3, #0]
 8003678:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800367c:	60da      	str	r2, [r3, #12]
 800367e:	687b      	ldr	r3, [r7, #4]
 8003680:	691a      	ldr	r2, [r3, #16]
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	695b      	ldr	r3, [r3, #20]
 8003686:	ea42 0103 	orr.w	r1, r2, r3
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	699b      	ldr	r3, [r3, #24]
 800368e:	021a      	lsls	r2, r3, #8
 8003690:	687b      	ldr	r3, [r7, #4]
 8003692:	681b      	ldr	r3, [r3, #0]
 8003694:	430a      	orrs	r2, r1
 8003696:	60da      	str	r2, [r3, #12]
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	69d9      	ldr	r1, [r3, #28]
 800369c:	687b      	ldr	r3, [r7, #4]
 800369e:	6a1a      	ldr	r2, [r3, #32]
 80036a0:	687b      	ldr	r3, [r7, #4]
 80036a2:	681b      	ldr	r3, [r3, #0]
 80036a4:	430a      	orrs	r2, r1
 80036a6:	601a      	str	r2, [r3, #0]
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	681b      	ldr	r3, [r3, #0]
 80036ac:	681a      	ldr	r2, [r3, #0]
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	681b      	ldr	r3, [r3, #0]
 80036b2:	f042 0201 	orr.w	r2, r2, #1
 80036b6:	601a      	str	r2, [r3, #0]
 80036b8:	687b      	ldr	r3, [r7, #4]
 80036ba:	2200      	movs	r2, #0
 80036bc:	645a      	str	r2, [r3, #68]	; 0x44
 80036be:	687b      	ldr	r3, [r7, #4]
 80036c0:	2220      	movs	r2, #32
 80036c2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80036c6:	687b      	ldr	r3, [r7, #4]
 80036c8:	2200      	movs	r2, #0
 80036ca:	631a      	str	r2, [r3, #48]	; 0x30
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	2200      	movs	r2, #0
 80036d0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80036d4:	2300      	movs	r3, #0
 80036d6:	4618      	mov	r0, r3
 80036d8:	3708      	adds	r7, #8
 80036da:	46bd      	mov	sp, r7
 80036dc:	bd80      	pop	{r7, pc}
	...

080036e0 <HAL_I2C_Mem_Write>:
 80036e0:	b580      	push	{r7, lr}
 80036e2:	b088      	sub	sp, #32
 80036e4:	af02      	add	r7, sp, #8
 80036e6:	60f8      	str	r0, [r7, #12]
 80036e8:	4608      	mov	r0, r1
 80036ea:	4611      	mov	r1, r2
 80036ec:	461a      	mov	r2, r3
 80036ee:	4603      	mov	r3, r0
 80036f0:	817b      	strh	r3, [r7, #10]
 80036f2:	460b      	mov	r3, r1
 80036f4:	813b      	strh	r3, [r7, #8]
 80036f6:	4613      	mov	r3, r2
 80036f8:	80fb      	strh	r3, [r7, #6]
 80036fa:	68fb      	ldr	r3, [r7, #12]
 80036fc:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003700:	b2db      	uxtb	r3, r3
 8003702:	2b20      	cmp	r3, #32
 8003704:	f040 80f9 	bne.w	80038fa <HAL_I2C_Mem_Write+0x21a>
 8003708:	6a3b      	ldr	r3, [r7, #32]
 800370a:	2b00      	cmp	r3, #0
 800370c:	d002      	beq.n	8003714 <HAL_I2C_Mem_Write+0x34>
 800370e:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8003710:	2b00      	cmp	r3, #0
 8003712:	d105      	bne.n	8003720 <HAL_I2C_Mem_Write+0x40>
 8003714:	68fb      	ldr	r3, [r7, #12]
 8003716:	f44f 7200 	mov.w	r2, #512	; 0x200
 800371a:	645a      	str	r2, [r3, #68]	; 0x44
 800371c:	2301      	movs	r3, #1
 800371e:	e0ed      	b.n	80038fc <HAL_I2C_Mem_Write+0x21c>
 8003720:	68fb      	ldr	r3, [r7, #12]
 8003722:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8003726:	2b01      	cmp	r3, #1
 8003728:	d101      	bne.n	800372e <HAL_I2C_Mem_Write+0x4e>
 800372a:	2302      	movs	r3, #2
 800372c:	e0e6      	b.n	80038fc <HAL_I2C_Mem_Write+0x21c>
 800372e:	68fb      	ldr	r3, [r7, #12]
 8003730:	2201      	movs	r2, #1
 8003732:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003736:	f7ff fbd3 	bl	8002ee0 <HAL_GetTick>
 800373a:	6178      	str	r0, [r7, #20]
 800373c:	697b      	ldr	r3, [r7, #20]
 800373e:	9300      	str	r3, [sp, #0]
 8003740:	2319      	movs	r3, #25
 8003742:	2201      	movs	r2, #1
 8003744:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8003748:	68f8      	ldr	r0, [r7, #12]
 800374a:	f000 fbcd 	bl	8003ee8 <I2C_WaitOnFlagUntilTimeout>
 800374e:	4603      	mov	r3, r0
 8003750:	2b00      	cmp	r3, #0
 8003752:	d001      	beq.n	8003758 <HAL_I2C_Mem_Write+0x78>
 8003754:	2301      	movs	r3, #1
 8003756:	e0d1      	b.n	80038fc <HAL_I2C_Mem_Write+0x21c>
 8003758:	68fb      	ldr	r3, [r7, #12]
 800375a:	2221      	movs	r2, #33	; 0x21
 800375c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003760:	68fb      	ldr	r3, [r7, #12]
 8003762:	2240      	movs	r2, #64	; 0x40
 8003764:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003768:	68fb      	ldr	r3, [r7, #12]
 800376a:	2200      	movs	r2, #0
 800376c:	645a      	str	r2, [r3, #68]	; 0x44
 800376e:	68fb      	ldr	r3, [r7, #12]
 8003770:	6a3a      	ldr	r2, [r7, #32]
 8003772:	625a      	str	r2, [r3, #36]	; 0x24
 8003774:	68fb      	ldr	r3, [r7, #12]
 8003776:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8003778:	855a      	strh	r2, [r3, #42]	; 0x2a
 800377a:	68fb      	ldr	r3, [r7, #12]
 800377c:	2200      	movs	r2, #0
 800377e:	635a      	str	r2, [r3, #52]	; 0x34
 8003780:	88f8      	ldrh	r0, [r7, #6]
 8003782:	893a      	ldrh	r2, [r7, #8]
 8003784:	8979      	ldrh	r1, [r7, #10]
 8003786:	697b      	ldr	r3, [r7, #20]
 8003788:	9301      	str	r3, [sp, #4]
 800378a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800378c:	9300      	str	r3, [sp, #0]
 800378e:	4603      	mov	r3, r0
 8003790:	68f8      	ldr	r0, [r7, #12]
 8003792:	f000 fadd 	bl	8003d50 <I2C_RequestMemoryWrite>
 8003796:	4603      	mov	r3, r0
 8003798:	2b00      	cmp	r3, #0
 800379a:	d005      	beq.n	80037a8 <HAL_I2C_Mem_Write+0xc8>
 800379c:	68fb      	ldr	r3, [r7, #12]
 800379e:	2200      	movs	r2, #0
 80037a0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80037a4:	2301      	movs	r3, #1
 80037a6:	e0a9      	b.n	80038fc <HAL_I2C_Mem_Write+0x21c>
 80037a8:	68fb      	ldr	r3, [r7, #12]
 80037aa:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80037ac:	b29b      	uxth	r3, r3
 80037ae:	2bff      	cmp	r3, #255	; 0xff
 80037b0:	d90e      	bls.n	80037d0 <HAL_I2C_Mem_Write+0xf0>
 80037b2:	68fb      	ldr	r3, [r7, #12]
 80037b4:	22ff      	movs	r2, #255	; 0xff
 80037b6:	851a      	strh	r2, [r3, #40]	; 0x28
 80037b8:	68fb      	ldr	r3, [r7, #12]
 80037ba:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80037bc:	b2da      	uxtb	r2, r3
 80037be:	8979      	ldrh	r1, [r7, #10]
 80037c0:	2300      	movs	r3, #0
 80037c2:	9300      	str	r3, [sp, #0]
 80037c4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80037c8:	68f8      	ldr	r0, [r7, #12]
 80037ca:	f000 fd47 	bl	800425c <I2C_TransferConfig>
 80037ce:	e00f      	b.n	80037f0 <HAL_I2C_Mem_Write+0x110>
 80037d0:	68fb      	ldr	r3, [r7, #12]
 80037d2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80037d4:	b29a      	uxth	r2, r3
 80037d6:	68fb      	ldr	r3, [r7, #12]
 80037d8:	851a      	strh	r2, [r3, #40]	; 0x28
 80037da:	68fb      	ldr	r3, [r7, #12]
 80037dc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80037de:	b2da      	uxtb	r2, r3
 80037e0:	8979      	ldrh	r1, [r7, #10]
 80037e2:	2300      	movs	r3, #0
 80037e4:	9300      	str	r3, [sp, #0]
 80037e6:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80037ea:	68f8      	ldr	r0, [r7, #12]
 80037ec:	f000 fd36 	bl	800425c <I2C_TransferConfig>
 80037f0:	697a      	ldr	r2, [r7, #20]
 80037f2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80037f4:	68f8      	ldr	r0, [r7, #12]
 80037f6:	f000 fbc6 	bl	8003f86 <I2C_WaitOnTXISFlagUntilTimeout>
 80037fa:	4603      	mov	r3, r0
 80037fc:	2b00      	cmp	r3, #0
 80037fe:	d001      	beq.n	8003804 <HAL_I2C_Mem_Write+0x124>
 8003800:	2301      	movs	r3, #1
 8003802:	e07b      	b.n	80038fc <HAL_I2C_Mem_Write+0x21c>
 8003804:	68fb      	ldr	r3, [r7, #12]
 8003806:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003808:	781a      	ldrb	r2, [r3, #0]
 800380a:	68fb      	ldr	r3, [r7, #12]
 800380c:	681b      	ldr	r3, [r3, #0]
 800380e:	629a      	str	r2, [r3, #40]	; 0x28
 8003810:	68fb      	ldr	r3, [r7, #12]
 8003812:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003814:	1c5a      	adds	r2, r3, #1
 8003816:	68fb      	ldr	r3, [r7, #12]
 8003818:	625a      	str	r2, [r3, #36]	; 0x24
 800381a:	68fb      	ldr	r3, [r7, #12]
 800381c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800381e:	b29b      	uxth	r3, r3
 8003820:	3b01      	subs	r3, #1
 8003822:	b29a      	uxth	r2, r3
 8003824:	68fb      	ldr	r3, [r7, #12]
 8003826:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003828:	68fb      	ldr	r3, [r7, #12]
 800382a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800382c:	3b01      	subs	r3, #1
 800382e:	b29a      	uxth	r2, r3
 8003830:	68fb      	ldr	r3, [r7, #12]
 8003832:	851a      	strh	r2, [r3, #40]	; 0x28
 8003834:	68fb      	ldr	r3, [r7, #12]
 8003836:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003838:	b29b      	uxth	r3, r3
 800383a:	2b00      	cmp	r3, #0
 800383c:	d034      	beq.n	80038a8 <HAL_I2C_Mem_Write+0x1c8>
 800383e:	68fb      	ldr	r3, [r7, #12]
 8003840:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003842:	2b00      	cmp	r3, #0
 8003844:	d130      	bne.n	80038a8 <HAL_I2C_Mem_Write+0x1c8>
 8003846:	697b      	ldr	r3, [r7, #20]
 8003848:	9300      	str	r3, [sp, #0]
 800384a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800384c:	2200      	movs	r2, #0
 800384e:	2180      	movs	r1, #128	; 0x80
 8003850:	68f8      	ldr	r0, [r7, #12]
 8003852:	f000 fb49 	bl	8003ee8 <I2C_WaitOnFlagUntilTimeout>
 8003856:	4603      	mov	r3, r0
 8003858:	2b00      	cmp	r3, #0
 800385a:	d001      	beq.n	8003860 <HAL_I2C_Mem_Write+0x180>
 800385c:	2301      	movs	r3, #1
 800385e:	e04d      	b.n	80038fc <HAL_I2C_Mem_Write+0x21c>
 8003860:	68fb      	ldr	r3, [r7, #12]
 8003862:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003864:	b29b      	uxth	r3, r3
 8003866:	2bff      	cmp	r3, #255	; 0xff
 8003868:	d90e      	bls.n	8003888 <HAL_I2C_Mem_Write+0x1a8>
 800386a:	68fb      	ldr	r3, [r7, #12]
 800386c:	22ff      	movs	r2, #255	; 0xff
 800386e:	851a      	strh	r2, [r3, #40]	; 0x28
 8003870:	68fb      	ldr	r3, [r7, #12]
 8003872:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003874:	b2da      	uxtb	r2, r3
 8003876:	8979      	ldrh	r1, [r7, #10]
 8003878:	2300      	movs	r3, #0
 800387a:	9300      	str	r3, [sp, #0]
 800387c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003880:	68f8      	ldr	r0, [r7, #12]
 8003882:	f000 fceb 	bl	800425c <I2C_TransferConfig>
 8003886:	e00f      	b.n	80038a8 <HAL_I2C_Mem_Write+0x1c8>
 8003888:	68fb      	ldr	r3, [r7, #12]
 800388a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800388c:	b29a      	uxth	r2, r3
 800388e:	68fb      	ldr	r3, [r7, #12]
 8003890:	851a      	strh	r2, [r3, #40]	; 0x28
 8003892:	68fb      	ldr	r3, [r7, #12]
 8003894:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003896:	b2da      	uxtb	r2, r3
 8003898:	8979      	ldrh	r1, [r7, #10]
 800389a:	2300      	movs	r3, #0
 800389c:	9300      	str	r3, [sp, #0]
 800389e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80038a2:	68f8      	ldr	r0, [r7, #12]
 80038a4:	f000 fcda 	bl	800425c <I2C_TransferConfig>
 80038a8:	68fb      	ldr	r3, [r7, #12]
 80038aa:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80038ac:	b29b      	uxth	r3, r3
 80038ae:	2b00      	cmp	r3, #0
 80038b0:	d19e      	bne.n	80037f0 <HAL_I2C_Mem_Write+0x110>
 80038b2:	697a      	ldr	r2, [r7, #20]
 80038b4:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80038b6:	68f8      	ldr	r0, [r7, #12]
 80038b8:	f000 fbac 	bl	8004014 <I2C_WaitOnSTOPFlagUntilTimeout>
 80038bc:	4603      	mov	r3, r0
 80038be:	2b00      	cmp	r3, #0
 80038c0:	d001      	beq.n	80038c6 <HAL_I2C_Mem_Write+0x1e6>
 80038c2:	2301      	movs	r3, #1
 80038c4:	e01a      	b.n	80038fc <HAL_I2C_Mem_Write+0x21c>
 80038c6:	68fb      	ldr	r3, [r7, #12]
 80038c8:	681b      	ldr	r3, [r3, #0]
 80038ca:	2220      	movs	r2, #32
 80038cc:	61da      	str	r2, [r3, #28]
 80038ce:	68fb      	ldr	r3, [r7, #12]
 80038d0:	681b      	ldr	r3, [r3, #0]
 80038d2:	6859      	ldr	r1, [r3, #4]
 80038d4:	68fb      	ldr	r3, [r7, #12]
 80038d6:	681a      	ldr	r2, [r3, #0]
 80038d8:	4b0a      	ldr	r3, [pc, #40]	; (8003904 <HAL_I2C_Mem_Write+0x224>)
 80038da:	400b      	ands	r3, r1
 80038dc:	6053      	str	r3, [r2, #4]
 80038de:	68fb      	ldr	r3, [r7, #12]
 80038e0:	2220      	movs	r2, #32
 80038e2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80038e6:	68fb      	ldr	r3, [r7, #12]
 80038e8:	2200      	movs	r2, #0
 80038ea:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80038ee:	68fb      	ldr	r3, [r7, #12]
 80038f0:	2200      	movs	r2, #0
 80038f2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80038f6:	2300      	movs	r3, #0
 80038f8:	e000      	b.n	80038fc <HAL_I2C_Mem_Write+0x21c>
 80038fa:	2302      	movs	r3, #2
 80038fc:	4618      	mov	r0, r3
 80038fe:	3718      	adds	r7, #24
 8003900:	46bd      	mov	sp, r7
 8003902:	bd80      	pop	{r7, pc}
 8003904:	fe00e800 	.word	0xfe00e800

08003908 <HAL_I2C_Mem_Read>:
 8003908:	b580      	push	{r7, lr}
 800390a:	b088      	sub	sp, #32
 800390c:	af02      	add	r7, sp, #8
 800390e:	60f8      	str	r0, [r7, #12]
 8003910:	4608      	mov	r0, r1
 8003912:	4611      	mov	r1, r2
 8003914:	461a      	mov	r2, r3
 8003916:	4603      	mov	r3, r0
 8003918:	817b      	strh	r3, [r7, #10]
 800391a:	460b      	mov	r3, r1
 800391c:	813b      	strh	r3, [r7, #8]
 800391e:	4613      	mov	r3, r2
 8003920:	80fb      	strh	r3, [r7, #6]
 8003922:	68fb      	ldr	r3, [r7, #12]
 8003924:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003928:	b2db      	uxtb	r3, r3
 800392a:	2b20      	cmp	r3, #32
 800392c:	f040 80fd 	bne.w	8003b2a <HAL_I2C_Mem_Read+0x222>
 8003930:	6a3b      	ldr	r3, [r7, #32]
 8003932:	2b00      	cmp	r3, #0
 8003934:	d002      	beq.n	800393c <HAL_I2C_Mem_Read+0x34>
 8003936:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8003938:	2b00      	cmp	r3, #0
 800393a:	d105      	bne.n	8003948 <HAL_I2C_Mem_Read+0x40>
 800393c:	68fb      	ldr	r3, [r7, #12]
 800393e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003942:	645a      	str	r2, [r3, #68]	; 0x44
 8003944:	2301      	movs	r3, #1
 8003946:	e0f1      	b.n	8003b2c <HAL_I2C_Mem_Read+0x224>
 8003948:	68fb      	ldr	r3, [r7, #12]
 800394a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800394e:	2b01      	cmp	r3, #1
 8003950:	d101      	bne.n	8003956 <HAL_I2C_Mem_Read+0x4e>
 8003952:	2302      	movs	r3, #2
 8003954:	e0ea      	b.n	8003b2c <HAL_I2C_Mem_Read+0x224>
 8003956:	68fb      	ldr	r3, [r7, #12]
 8003958:	2201      	movs	r2, #1
 800395a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800395e:	f7ff fabf 	bl	8002ee0 <HAL_GetTick>
 8003962:	6178      	str	r0, [r7, #20]
 8003964:	697b      	ldr	r3, [r7, #20]
 8003966:	9300      	str	r3, [sp, #0]
 8003968:	2319      	movs	r3, #25
 800396a:	2201      	movs	r2, #1
 800396c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8003970:	68f8      	ldr	r0, [r7, #12]
 8003972:	f000 fab9 	bl	8003ee8 <I2C_WaitOnFlagUntilTimeout>
 8003976:	4603      	mov	r3, r0
 8003978:	2b00      	cmp	r3, #0
 800397a:	d001      	beq.n	8003980 <HAL_I2C_Mem_Read+0x78>
 800397c:	2301      	movs	r3, #1
 800397e:	e0d5      	b.n	8003b2c <HAL_I2C_Mem_Read+0x224>
 8003980:	68fb      	ldr	r3, [r7, #12]
 8003982:	2222      	movs	r2, #34	; 0x22
 8003984:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003988:	68fb      	ldr	r3, [r7, #12]
 800398a:	2240      	movs	r2, #64	; 0x40
 800398c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003990:	68fb      	ldr	r3, [r7, #12]
 8003992:	2200      	movs	r2, #0
 8003994:	645a      	str	r2, [r3, #68]	; 0x44
 8003996:	68fb      	ldr	r3, [r7, #12]
 8003998:	6a3a      	ldr	r2, [r7, #32]
 800399a:	625a      	str	r2, [r3, #36]	; 0x24
 800399c:	68fb      	ldr	r3, [r7, #12]
 800399e:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 80039a0:	855a      	strh	r2, [r3, #42]	; 0x2a
 80039a2:	68fb      	ldr	r3, [r7, #12]
 80039a4:	2200      	movs	r2, #0
 80039a6:	635a      	str	r2, [r3, #52]	; 0x34
 80039a8:	88f8      	ldrh	r0, [r7, #6]
 80039aa:	893a      	ldrh	r2, [r7, #8]
 80039ac:	8979      	ldrh	r1, [r7, #10]
 80039ae:	697b      	ldr	r3, [r7, #20]
 80039b0:	9301      	str	r3, [sp, #4]
 80039b2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80039b4:	9300      	str	r3, [sp, #0]
 80039b6:	4603      	mov	r3, r0
 80039b8:	68f8      	ldr	r0, [r7, #12]
 80039ba:	f000 fa1d 	bl	8003df8 <I2C_RequestMemoryRead>
 80039be:	4603      	mov	r3, r0
 80039c0:	2b00      	cmp	r3, #0
 80039c2:	d005      	beq.n	80039d0 <HAL_I2C_Mem_Read+0xc8>
 80039c4:	68fb      	ldr	r3, [r7, #12]
 80039c6:	2200      	movs	r2, #0
 80039c8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80039cc:	2301      	movs	r3, #1
 80039ce:	e0ad      	b.n	8003b2c <HAL_I2C_Mem_Read+0x224>
 80039d0:	68fb      	ldr	r3, [r7, #12]
 80039d2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80039d4:	b29b      	uxth	r3, r3
 80039d6:	2bff      	cmp	r3, #255	; 0xff
 80039d8:	d90e      	bls.n	80039f8 <HAL_I2C_Mem_Read+0xf0>
 80039da:	68fb      	ldr	r3, [r7, #12]
 80039dc:	22ff      	movs	r2, #255	; 0xff
 80039de:	851a      	strh	r2, [r3, #40]	; 0x28
 80039e0:	68fb      	ldr	r3, [r7, #12]
 80039e2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80039e4:	b2da      	uxtb	r2, r3
 80039e6:	8979      	ldrh	r1, [r7, #10]
 80039e8:	4b52      	ldr	r3, [pc, #328]	; (8003b34 <HAL_I2C_Mem_Read+0x22c>)
 80039ea:	9300      	str	r3, [sp, #0]
 80039ec:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80039f0:	68f8      	ldr	r0, [r7, #12]
 80039f2:	f000 fc33 	bl	800425c <I2C_TransferConfig>
 80039f6:	e00f      	b.n	8003a18 <HAL_I2C_Mem_Read+0x110>
 80039f8:	68fb      	ldr	r3, [r7, #12]
 80039fa:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80039fc:	b29a      	uxth	r2, r3
 80039fe:	68fb      	ldr	r3, [r7, #12]
 8003a00:	851a      	strh	r2, [r3, #40]	; 0x28
 8003a02:	68fb      	ldr	r3, [r7, #12]
 8003a04:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003a06:	b2da      	uxtb	r2, r3
 8003a08:	8979      	ldrh	r1, [r7, #10]
 8003a0a:	4b4a      	ldr	r3, [pc, #296]	; (8003b34 <HAL_I2C_Mem_Read+0x22c>)
 8003a0c:	9300      	str	r3, [sp, #0]
 8003a0e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003a12:	68f8      	ldr	r0, [r7, #12]
 8003a14:	f000 fc22 	bl	800425c <I2C_TransferConfig>
 8003a18:	697b      	ldr	r3, [r7, #20]
 8003a1a:	9300      	str	r3, [sp, #0]
 8003a1c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003a1e:	2200      	movs	r2, #0
 8003a20:	2104      	movs	r1, #4
 8003a22:	68f8      	ldr	r0, [r7, #12]
 8003a24:	f000 fa60 	bl	8003ee8 <I2C_WaitOnFlagUntilTimeout>
 8003a28:	4603      	mov	r3, r0
 8003a2a:	2b00      	cmp	r3, #0
 8003a2c:	d001      	beq.n	8003a32 <HAL_I2C_Mem_Read+0x12a>
 8003a2e:	2301      	movs	r3, #1
 8003a30:	e07c      	b.n	8003b2c <HAL_I2C_Mem_Read+0x224>
 8003a32:	68fb      	ldr	r3, [r7, #12]
 8003a34:	681b      	ldr	r3, [r3, #0]
 8003a36:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003a38:	68fb      	ldr	r3, [r7, #12]
 8003a3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a3c:	b2d2      	uxtb	r2, r2
 8003a3e:	701a      	strb	r2, [r3, #0]
 8003a40:	68fb      	ldr	r3, [r7, #12]
 8003a42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a44:	1c5a      	adds	r2, r3, #1
 8003a46:	68fb      	ldr	r3, [r7, #12]
 8003a48:	625a      	str	r2, [r3, #36]	; 0x24
 8003a4a:	68fb      	ldr	r3, [r7, #12]
 8003a4c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003a4e:	3b01      	subs	r3, #1
 8003a50:	b29a      	uxth	r2, r3
 8003a52:	68fb      	ldr	r3, [r7, #12]
 8003a54:	851a      	strh	r2, [r3, #40]	; 0x28
 8003a56:	68fb      	ldr	r3, [r7, #12]
 8003a58:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003a5a:	b29b      	uxth	r3, r3
 8003a5c:	3b01      	subs	r3, #1
 8003a5e:	b29a      	uxth	r2, r3
 8003a60:	68fb      	ldr	r3, [r7, #12]
 8003a62:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003a64:	68fb      	ldr	r3, [r7, #12]
 8003a66:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003a68:	b29b      	uxth	r3, r3
 8003a6a:	2b00      	cmp	r3, #0
 8003a6c:	d034      	beq.n	8003ad8 <HAL_I2C_Mem_Read+0x1d0>
 8003a6e:	68fb      	ldr	r3, [r7, #12]
 8003a70:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003a72:	2b00      	cmp	r3, #0
 8003a74:	d130      	bne.n	8003ad8 <HAL_I2C_Mem_Read+0x1d0>
 8003a76:	697b      	ldr	r3, [r7, #20]
 8003a78:	9300      	str	r3, [sp, #0]
 8003a7a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003a7c:	2200      	movs	r2, #0
 8003a7e:	2180      	movs	r1, #128	; 0x80
 8003a80:	68f8      	ldr	r0, [r7, #12]
 8003a82:	f000 fa31 	bl	8003ee8 <I2C_WaitOnFlagUntilTimeout>
 8003a86:	4603      	mov	r3, r0
 8003a88:	2b00      	cmp	r3, #0
 8003a8a:	d001      	beq.n	8003a90 <HAL_I2C_Mem_Read+0x188>
 8003a8c:	2301      	movs	r3, #1
 8003a8e:	e04d      	b.n	8003b2c <HAL_I2C_Mem_Read+0x224>
 8003a90:	68fb      	ldr	r3, [r7, #12]
 8003a92:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003a94:	b29b      	uxth	r3, r3
 8003a96:	2bff      	cmp	r3, #255	; 0xff
 8003a98:	d90e      	bls.n	8003ab8 <HAL_I2C_Mem_Read+0x1b0>
 8003a9a:	68fb      	ldr	r3, [r7, #12]
 8003a9c:	22ff      	movs	r2, #255	; 0xff
 8003a9e:	851a      	strh	r2, [r3, #40]	; 0x28
 8003aa0:	68fb      	ldr	r3, [r7, #12]
 8003aa2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003aa4:	b2da      	uxtb	r2, r3
 8003aa6:	8979      	ldrh	r1, [r7, #10]
 8003aa8:	2300      	movs	r3, #0
 8003aaa:	9300      	str	r3, [sp, #0]
 8003aac:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003ab0:	68f8      	ldr	r0, [r7, #12]
 8003ab2:	f000 fbd3 	bl	800425c <I2C_TransferConfig>
 8003ab6:	e00f      	b.n	8003ad8 <HAL_I2C_Mem_Read+0x1d0>
 8003ab8:	68fb      	ldr	r3, [r7, #12]
 8003aba:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003abc:	b29a      	uxth	r2, r3
 8003abe:	68fb      	ldr	r3, [r7, #12]
 8003ac0:	851a      	strh	r2, [r3, #40]	; 0x28
 8003ac2:	68fb      	ldr	r3, [r7, #12]
 8003ac4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003ac6:	b2da      	uxtb	r2, r3
 8003ac8:	8979      	ldrh	r1, [r7, #10]
 8003aca:	2300      	movs	r3, #0
 8003acc:	9300      	str	r3, [sp, #0]
 8003ace:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003ad2:	68f8      	ldr	r0, [r7, #12]
 8003ad4:	f000 fbc2 	bl	800425c <I2C_TransferConfig>
 8003ad8:	68fb      	ldr	r3, [r7, #12]
 8003ada:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003adc:	b29b      	uxth	r3, r3
 8003ade:	2b00      	cmp	r3, #0
 8003ae0:	d19a      	bne.n	8003a18 <HAL_I2C_Mem_Read+0x110>
 8003ae2:	697a      	ldr	r2, [r7, #20]
 8003ae4:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003ae6:	68f8      	ldr	r0, [r7, #12]
 8003ae8:	f000 fa94 	bl	8004014 <I2C_WaitOnSTOPFlagUntilTimeout>
 8003aec:	4603      	mov	r3, r0
 8003aee:	2b00      	cmp	r3, #0
 8003af0:	d001      	beq.n	8003af6 <HAL_I2C_Mem_Read+0x1ee>
 8003af2:	2301      	movs	r3, #1
 8003af4:	e01a      	b.n	8003b2c <HAL_I2C_Mem_Read+0x224>
 8003af6:	68fb      	ldr	r3, [r7, #12]
 8003af8:	681b      	ldr	r3, [r3, #0]
 8003afa:	2220      	movs	r2, #32
 8003afc:	61da      	str	r2, [r3, #28]
 8003afe:	68fb      	ldr	r3, [r7, #12]
 8003b00:	681b      	ldr	r3, [r3, #0]
 8003b02:	6859      	ldr	r1, [r3, #4]
 8003b04:	68fb      	ldr	r3, [r7, #12]
 8003b06:	681a      	ldr	r2, [r3, #0]
 8003b08:	4b0b      	ldr	r3, [pc, #44]	; (8003b38 <HAL_I2C_Mem_Read+0x230>)
 8003b0a:	400b      	ands	r3, r1
 8003b0c:	6053      	str	r3, [r2, #4]
 8003b0e:	68fb      	ldr	r3, [r7, #12]
 8003b10:	2220      	movs	r2, #32
 8003b12:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003b16:	68fb      	ldr	r3, [r7, #12]
 8003b18:	2200      	movs	r2, #0
 8003b1a:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003b1e:	68fb      	ldr	r3, [r7, #12]
 8003b20:	2200      	movs	r2, #0
 8003b22:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003b26:	2300      	movs	r3, #0
 8003b28:	e000      	b.n	8003b2c <HAL_I2C_Mem_Read+0x224>
 8003b2a:	2302      	movs	r3, #2
 8003b2c:	4618      	mov	r0, r3
 8003b2e:	3718      	adds	r7, #24
 8003b30:	46bd      	mov	sp, r7
 8003b32:	bd80      	pop	{r7, pc}
 8003b34:	80002400 	.word	0x80002400
 8003b38:	fe00e800 	.word	0xfe00e800

08003b3c <HAL_I2C_IsDeviceReady>:
 8003b3c:	b580      	push	{r7, lr}
 8003b3e:	b08a      	sub	sp, #40	; 0x28
 8003b40:	af02      	add	r7, sp, #8
 8003b42:	60f8      	str	r0, [r7, #12]
 8003b44:	607a      	str	r2, [r7, #4]
 8003b46:	603b      	str	r3, [r7, #0]
 8003b48:	460b      	mov	r3, r1
 8003b4a:	817b      	strh	r3, [r7, #10]
 8003b4c:	2300      	movs	r3, #0
 8003b4e:	617b      	str	r3, [r7, #20]
 8003b50:	68fb      	ldr	r3, [r7, #12]
 8003b52:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003b56:	b2db      	uxtb	r3, r3
 8003b58:	2b20      	cmp	r3, #32
 8003b5a:	f040 80f3 	bne.w	8003d44 <HAL_I2C_IsDeviceReady+0x208>
 8003b5e:	68fb      	ldr	r3, [r7, #12]
 8003b60:	681b      	ldr	r3, [r3, #0]
 8003b62:	699b      	ldr	r3, [r3, #24]
 8003b64:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8003b68:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003b6c:	d101      	bne.n	8003b72 <HAL_I2C_IsDeviceReady+0x36>
 8003b6e:	2302      	movs	r3, #2
 8003b70:	e0e9      	b.n	8003d46 <HAL_I2C_IsDeviceReady+0x20a>
 8003b72:	68fb      	ldr	r3, [r7, #12]
 8003b74:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8003b78:	2b01      	cmp	r3, #1
 8003b7a:	d101      	bne.n	8003b80 <HAL_I2C_IsDeviceReady+0x44>
 8003b7c:	2302      	movs	r3, #2
 8003b7e:	e0e2      	b.n	8003d46 <HAL_I2C_IsDeviceReady+0x20a>
 8003b80:	68fb      	ldr	r3, [r7, #12]
 8003b82:	2201      	movs	r2, #1
 8003b84:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003b88:	68fb      	ldr	r3, [r7, #12]
 8003b8a:	2224      	movs	r2, #36	; 0x24
 8003b8c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003b90:	68fb      	ldr	r3, [r7, #12]
 8003b92:	2200      	movs	r2, #0
 8003b94:	645a      	str	r2, [r3, #68]	; 0x44
 8003b96:	68fb      	ldr	r3, [r7, #12]
 8003b98:	68db      	ldr	r3, [r3, #12]
 8003b9a:	2b01      	cmp	r3, #1
 8003b9c:	d107      	bne.n	8003bae <HAL_I2C_IsDeviceReady+0x72>
 8003b9e:	897b      	ldrh	r3, [r7, #10]
 8003ba0:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8003ba4:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8003ba8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8003bac:	e006      	b.n	8003bbc <HAL_I2C_IsDeviceReady+0x80>
 8003bae:	897b      	ldrh	r3, [r7, #10]
 8003bb0:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8003bb4:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8003bb8:	f443 5320 	orr.w	r3, r3, #10240	; 0x2800
 8003bbc:	68fa      	ldr	r2, [r7, #12]
 8003bbe:	6812      	ldr	r2, [r2, #0]
 8003bc0:	6053      	str	r3, [r2, #4]
 8003bc2:	f7ff f98d 	bl	8002ee0 <HAL_GetTick>
 8003bc6:	61b8      	str	r0, [r7, #24]
 8003bc8:	68fb      	ldr	r3, [r7, #12]
 8003bca:	681b      	ldr	r3, [r3, #0]
 8003bcc:	699b      	ldr	r3, [r3, #24]
 8003bce:	f003 0320 	and.w	r3, r3, #32
 8003bd2:	2b20      	cmp	r3, #32
 8003bd4:	bf0c      	ite	eq
 8003bd6:	2301      	moveq	r3, #1
 8003bd8:	2300      	movne	r3, #0
 8003bda:	b2db      	uxtb	r3, r3
 8003bdc:	77fb      	strb	r3, [r7, #31]
 8003bde:	68fb      	ldr	r3, [r7, #12]
 8003be0:	681b      	ldr	r3, [r3, #0]
 8003be2:	699b      	ldr	r3, [r3, #24]
 8003be4:	f003 0310 	and.w	r3, r3, #16
 8003be8:	2b10      	cmp	r3, #16
 8003bea:	bf0c      	ite	eq
 8003bec:	2301      	moveq	r3, #1
 8003bee:	2300      	movne	r3, #0
 8003bf0:	b2db      	uxtb	r3, r3
 8003bf2:	77bb      	strb	r3, [r7, #30]
 8003bf4:	e034      	b.n	8003c60 <HAL_I2C_IsDeviceReady+0x124>
 8003bf6:	683b      	ldr	r3, [r7, #0]
 8003bf8:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8003bfc:	d01a      	beq.n	8003c34 <HAL_I2C_IsDeviceReady+0xf8>
 8003bfe:	f7ff f96f 	bl	8002ee0 <HAL_GetTick>
 8003c02:	4602      	mov	r2, r0
 8003c04:	69bb      	ldr	r3, [r7, #24]
 8003c06:	1ad3      	subs	r3, r2, r3
 8003c08:	683a      	ldr	r2, [r7, #0]
 8003c0a:	429a      	cmp	r2, r3
 8003c0c:	d302      	bcc.n	8003c14 <HAL_I2C_IsDeviceReady+0xd8>
 8003c0e:	683b      	ldr	r3, [r7, #0]
 8003c10:	2b00      	cmp	r3, #0
 8003c12:	d10f      	bne.n	8003c34 <HAL_I2C_IsDeviceReady+0xf8>
 8003c14:	68fb      	ldr	r3, [r7, #12]
 8003c16:	2220      	movs	r2, #32
 8003c18:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003c1c:	68fb      	ldr	r3, [r7, #12]
 8003c1e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003c20:	f043 0220 	orr.w	r2, r3, #32
 8003c24:	68fb      	ldr	r3, [r7, #12]
 8003c26:	645a      	str	r2, [r3, #68]	; 0x44
 8003c28:	68fb      	ldr	r3, [r7, #12]
 8003c2a:	2200      	movs	r2, #0
 8003c2c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003c30:	2301      	movs	r3, #1
 8003c32:	e088      	b.n	8003d46 <HAL_I2C_IsDeviceReady+0x20a>
 8003c34:	68fb      	ldr	r3, [r7, #12]
 8003c36:	681b      	ldr	r3, [r3, #0]
 8003c38:	699b      	ldr	r3, [r3, #24]
 8003c3a:	f003 0320 	and.w	r3, r3, #32
 8003c3e:	2b20      	cmp	r3, #32
 8003c40:	bf0c      	ite	eq
 8003c42:	2301      	moveq	r3, #1
 8003c44:	2300      	movne	r3, #0
 8003c46:	b2db      	uxtb	r3, r3
 8003c48:	77fb      	strb	r3, [r7, #31]
 8003c4a:	68fb      	ldr	r3, [r7, #12]
 8003c4c:	681b      	ldr	r3, [r3, #0]
 8003c4e:	699b      	ldr	r3, [r3, #24]
 8003c50:	f003 0310 	and.w	r3, r3, #16
 8003c54:	2b10      	cmp	r3, #16
 8003c56:	bf0c      	ite	eq
 8003c58:	2301      	moveq	r3, #1
 8003c5a:	2300      	movne	r3, #0
 8003c5c:	b2db      	uxtb	r3, r3
 8003c5e:	77bb      	strb	r3, [r7, #30]
 8003c60:	7ffb      	ldrb	r3, [r7, #31]
 8003c62:	2b00      	cmp	r3, #0
 8003c64:	d102      	bne.n	8003c6c <HAL_I2C_IsDeviceReady+0x130>
 8003c66:	7fbb      	ldrb	r3, [r7, #30]
 8003c68:	2b00      	cmp	r3, #0
 8003c6a:	d0c4      	beq.n	8003bf6 <HAL_I2C_IsDeviceReady+0xba>
 8003c6c:	68fb      	ldr	r3, [r7, #12]
 8003c6e:	681b      	ldr	r3, [r3, #0]
 8003c70:	699b      	ldr	r3, [r3, #24]
 8003c72:	f003 0310 	and.w	r3, r3, #16
 8003c76:	2b10      	cmp	r3, #16
 8003c78:	d01a      	beq.n	8003cb0 <HAL_I2C_IsDeviceReady+0x174>
 8003c7a:	69bb      	ldr	r3, [r7, #24]
 8003c7c:	9300      	str	r3, [sp, #0]
 8003c7e:	683b      	ldr	r3, [r7, #0]
 8003c80:	2200      	movs	r2, #0
 8003c82:	2120      	movs	r1, #32
 8003c84:	68f8      	ldr	r0, [r7, #12]
 8003c86:	f000 f92f 	bl	8003ee8 <I2C_WaitOnFlagUntilTimeout>
 8003c8a:	4603      	mov	r3, r0
 8003c8c:	2b00      	cmp	r3, #0
 8003c8e:	d001      	beq.n	8003c94 <HAL_I2C_IsDeviceReady+0x158>
 8003c90:	2301      	movs	r3, #1
 8003c92:	e058      	b.n	8003d46 <HAL_I2C_IsDeviceReady+0x20a>
 8003c94:	68fb      	ldr	r3, [r7, #12]
 8003c96:	681b      	ldr	r3, [r3, #0]
 8003c98:	2220      	movs	r2, #32
 8003c9a:	61da      	str	r2, [r3, #28]
 8003c9c:	68fb      	ldr	r3, [r7, #12]
 8003c9e:	2220      	movs	r2, #32
 8003ca0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003ca4:	68fb      	ldr	r3, [r7, #12]
 8003ca6:	2200      	movs	r2, #0
 8003ca8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003cac:	2300      	movs	r3, #0
 8003cae:	e04a      	b.n	8003d46 <HAL_I2C_IsDeviceReady+0x20a>
 8003cb0:	69bb      	ldr	r3, [r7, #24]
 8003cb2:	9300      	str	r3, [sp, #0]
 8003cb4:	683b      	ldr	r3, [r7, #0]
 8003cb6:	2200      	movs	r2, #0
 8003cb8:	2120      	movs	r1, #32
 8003cba:	68f8      	ldr	r0, [r7, #12]
 8003cbc:	f000 f914 	bl	8003ee8 <I2C_WaitOnFlagUntilTimeout>
 8003cc0:	4603      	mov	r3, r0
 8003cc2:	2b00      	cmp	r3, #0
 8003cc4:	d001      	beq.n	8003cca <HAL_I2C_IsDeviceReady+0x18e>
 8003cc6:	2301      	movs	r3, #1
 8003cc8:	e03d      	b.n	8003d46 <HAL_I2C_IsDeviceReady+0x20a>
 8003cca:	68fb      	ldr	r3, [r7, #12]
 8003ccc:	681b      	ldr	r3, [r3, #0]
 8003cce:	2210      	movs	r2, #16
 8003cd0:	61da      	str	r2, [r3, #28]
 8003cd2:	68fb      	ldr	r3, [r7, #12]
 8003cd4:	681b      	ldr	r3, [r3, #0]
 8003cd6:	2220      	movs	r2, #32
 8003cd8:	61da      	str	r2, [r3, #28]
 8003cda:	697b      	ldr	r3, [r7, #20]
 8003cdc:	687a      	ldr	r2, [r7, #4]
 8003cde:	429a      	cmp	r2, r3
 8003ce0:	d118      	bne.n	8003d14 <HAL_I2C_IsDeviceReady+0x1d8>
 8003ce2:	68fb      	ldr	r3, [r7, #12]
 8003ce4:	681b      	ldr	r3, [r3, #0]
 8003ce6:	685a      	ldr	r2, [r3, #4]
 8003ce8:	68fb      	ldr	r3, [r7, #12]
 8003cea:	681b      	ldr	r3, [r3, #0]
 8003cec:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003cf0:	605a      	str	r2, [r3, #4]
 8003cf2:	69bb      	ldr	r3, [r7, #24]
 8003cf4:	9300      	str	r3, [sp, #0]
 8003cf6:	683b      	ldr	r3, [r7, #0]
 8003cf8:	2200      	movs	r2, #0
 8003cfa:	2120      	movs	r1, #32
 8003cfc:	68f8      	ldr	r0, [r7, #12]
 8003cfe:	f000 f8f3 	bl	8003ee8 <I2C_WaitOnFlagUntilTimeout>
 8003d02:	4603      	mov	r3, r0
 8003d04:	2b00      	cmp	r3, #0
 8003d06:	d001      	beq.n	8003d0c <HAL_I2C_IsDeviceReady+0x1d0>
 8003d08:	2301      	movs	r3, #1
 8003d0a:	e01c      	b.n	8003d46 <HAL_I2C_IsDeviceReady+0x20a>
 8003d0c:	68fb      	ldr	r3, [r7, #12]
 8003d0e:	681b      	ldr	r3, [r3, #0]
 8003d10:	2220      	movs	r2, #32
 8003d12:	61da      	str	r2, [r3, #28]
 8003d14:	697b      	ldr	r3, [r7, #20]
 8003d16:	3301      	adds	r3, #1
 8003d18:	617b      	str	r3, [r7, #20]
 8003d1a:	697b      	ldr	r3, [r7, #20]
 8003d1c:	687a      	ldr	r2, [r7, #4]
 8003d1e:	429a      	cmp	r2, r3
 8003d20:	f63f af39 	bhi.w	8003b96 <HAL_I2C_IsDeviceReady+0x5a>
 8003d24:	68fb      	ldr	r3, [r7, #12]
 8003d26:	2220      	movs	r2, #32
 8003d28:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003d2c:	68fb      	ldr	r3, [r7, #12]
 8003d2e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003d30:	f043 0220 	orr.w	r2, r3, #32
 8003d34:	68fb      	ldr	r3, [r7, #12]
 8003d36:	645a      	str	r2, [r3, #68]	; 0x44
 8003d38:	68fb      	ldr	r3, [r7, #12]
 8003d3a:	2200      	movs	r2, #0
 8003d3c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003d40:	2301      	movs	r3, #1
 8003d42:	e000      	b.n	8003d46 <HAL_I2C_IsDeviceReady+0x20a>
 8003d44:	2302      	movs	r3, #2
 8003d46:	4618      	mov	r0, r3
 8003d48:	3720      	adds	r7, #32
 8003d4a:	46bd      	mov	sp, r7
 8003d4c:	bd80      	pop	{r7, pc}
	...

08003d50 <I2C_RequestMemoryWrite>:
 8003d50:	b580      	push	{r7, lr}
 8003d52:	b086      	sub	sp, #24
 8003d54:	af02      	add	r7, sp, #8
 8003d56:	60f8      	str	r0, [r7, #12]
 8003d58:	4608      	mov	r0, r1
 8003d5a:	4611      	mov	r1, r2
 8003d5c:	461a      	mov	r2, r3
 8003d5e:	4603      	mov	r3, r0
 8003d60:	817b      	strh	r3, [r7, #10]
 8003d62:	460b      	mov	r3, r1
 8003d64:	813b      	strh	r3, [r7, #8]
 8003d66:	4613      	mov	r3, r2
 8003d68:	80fb      	strh	r3, [r7, #6]
 8003d6a:	88fb      	ldrh	r3, [r7, #6]
 8003d6c:	b2da      	uxtb	r2, r3
 8003d6e:	8979      	ldrh	r1, [r7, #10]
 8003d70:	4b20      	ldr	r3, [pc, #128]	; (8003df4 <I2C_RequestMemoryWrite+0xa4>)
 8003d72:	9300      	str	r3, [sp, #0]
 8003d74:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003d78:	68f8      	ldr	r0, [r7, #12]
 8003d7a:	f000 fa6f 	bl	800425c <I2C_TransferConfig>
 8003d7e:	69fa      	ldr	r2, [r7, #28]
 8003d80:	69b9      	ldr	r1, [r7, #24]
 8003d82:	68f8      	ldr	r0, [r7, #12]
 8003d84:	f000 f8ff 	bl	8003f86 <I2C_WaitOnTXISFlagUntilTimeout>
 8003d88:	4603      	mov	r3, r0
 8003d8a:	2b00      	cmp	r3, #0
 8003d8c:	d001      	beq.n	8003d92 <I2C_RequestMemoryWrite+0x42>
 8003d8e:	2301      	movs	r3, #1
 8003d90:	e02c      	b.n	8003dec <I2C_RequestMemoryWrite+0x9c>
 8003d92:	88fb      	ldrh	r3, [r7, #6]
 8003d94:	2b01      	cmp	r3, #1
 8003d96:	d105      	bne.n	8003da4 <I2C_RequestMemoryWrite+0x54>
 8003d98:	893b      	ldrh	r3, [r7, #8]
 8003d9a:	b2da      	uxtb	r2, r3
 8003d9c:	68fb      	ldr	r3, [r7, #12]
 8003d9e:	681b      	ldr	r3, [r3, #0]
 8003da0:	629a      	str	r2, [r3, #40]	; 0x28
 8003da2:	e015      	b.n	8003dd0 <I2C_RequestMemoryWrite+0x80>
 8003da4:	893b      	ldrh	r3, [r7, #8]
 8003da6:	0a1b      	lsrs	r3, r3, #8
 8003da8:	b29b      	uxth	r3, r3
 8003daa:	b2da      	uxtb	r2, r3
 8003dac:	68fb      	ldr	r3, [r7, #12]
 8003dae:	681b      	ldr	r3, [r3, #0]
 8003db0:	629a      	str	r2, [r3, #40]	; 0x28
 8003db2:	69fa      	ldr	r2, [r7, #28]
 8003db4:	69b9      	ldr	r1, [r7, #24]
 8003db6:	68f8      	ldr	r0, [r7, #12]
 8003db8:	f000 f8e5 	bl	8003f86 <I2C_WaitOnTXISFlagUntilTimeout>
 8003dbc:	4603      	mov	r3, r0
 8003dbe:	2b00      	cmp	r3, #0
 8003dc0:	d001      	beq.n	8003dc6 <I2C_RequestMemoryWrite+0x76>
 8003dc2:	2301      	movs	r3, #1
 8003dc4:	e012      	b.n	8003dec <I2C_RequestMemoryWrite+0x9c>
 8003dc6:	893b      	ldrh	r3, [r7, #8]
 8003dc8:	b2da      	uxtb	r2, r3
 8003dca:	68fb      	ldr	r3, [r7, #12]
 8003dcc:	681b      	ldr	r3, [r3, #0]
 8003dce:	629a      	str	r2, [r3, #40]	; 0x28
 8003dd0:	69fb      	ldr	r3, [r7, #28]
 8003dd2:	9300      	str	r3, [sp, #0]
 8003dd4:	69bb      	ldr	r3, [r7, #24]
 8003dd6:	2200      	movs	r2, #0
 8003dd8:	2180      	movs	r1, #128	; 0x80
 8003dda:	68f8      	ldr	r0, [r7, #12]
 8003ddc:	f000 f884 	bl	8003ee8 <I2C_WaitOnFlagUntilTimeout>
 8003de0:	4603      	mov	r3, r0
 8003de2:	2b00      	cmp	r3, #0
 8003de4:	d001      	beq.n	8003dea <I2C_RequestMemoryWrite+0x9a>
 8003de6:	2301      	movs	r3, #1
 8003de8:	e000      	b.n	8003dec <I2C_RequestMemoryWrite+0x9c>
 8003dea:	2300      	movs	r3, #0
 8003dec:	4618      	mov	r0, r3
 8003dee:	3710      	adds	r7, #16
 8003df0:	46bd      	mov	sp, r7
 8003df2:	bd80      	pop	{r7, pc}
 8003df4:	80002000 	.word	0x80002000

08003df8 <I2C_RequestMemoryRead>:
 8003df8:	b580      	push	{r7, lr}
 8003dfa:	b086      	sub	sp, #24
 8003dfc:	af02      	add	r7, sp, #8
 8003dfe:	60f8      	str	r0, [r7, #12]
 8003e00:	4608      	mov	r0, r1
 8003e02:	4611      	mov	r1, r2
 8003e04:	461a      	mov	r2, r3
 8003e06:	4603      	mov	r3, r0
 8003e08:	817b      	strh	r3, [r7, #10]
 8003e0a:	460b      	mov	r3, r1
 8003e0c:	813b      	strh	r3, [r7, #8]
 8003e0e:	4613      	mov	r3, r2
 8003e10:	80fb      	strh	r3, [r7, #6]
 8003e12:	88fb      	ldrh	r3, [r7, #6]
 8003e14:	b2da      	uxtb	r2, r3
 8003e16:	8979      	ldrh	r1, [r7, #10]
 8003e18:	4b20      	ldr	r3, [pc, #128]	; (8003e9c <I2C_RequestMemoryRead+0xa4>)
 8003e1a:	9300      	str	r3, [sp, #0]
 8003e1c:	2300      	movs	r3, #0
 8003e1e:	68f8      	ldr	r0, [r7, #12]
 8003e20:	f000 fa1c 	bl	800425c <I2C_TransferConfig>
 8003e24:	69fa      	ldr	r2, [r7, #28]
 8003e26:	69b9      	ldr	r1, [r7, #24]
 8003e28:	68f8      	ldr	r0, [r7, #12]
 8003e2a:	f000 f8ac 	bl	8003f86 <I2C_WaitOnTXISFlagUntilTimeout>
 8003e2e:	4603      	mov	r3, r0
 8003e30:	2b00      	cmp	r3, #0
 8003e32:	d001      	beq.n	8003e38 <I2C_RequestMemoryRead+0x40>
 8003e34:	2301      	movs	r3, #1
 8003e36:	e02c      	b.n	8003e92 <I2C_RequestMemoryRead+0x9a>
 8003e38:	88fb      	ldrh	r3, [r7, #6]
 8003e3a:	2b01      	cmp	r3, #1
 8003e3c:	d105      	bne.n	8003e4a <I2C_RequestMemoryRead+0x52>
 8003e3e:	893b      	ldrh	r3, [r7, #8]
 8003e40:	b2da      	uxtb	r2, r3
 8003e42:	68fb      	ldr	r3, [r7, #12]
 8003e44:	681b      	ldr	r3, [r3, #0]
 8003e46:	629a      	str	r2, [r3, #40]	; 0x28
 8003e48:	e015      	b.n	8003e76 <I2C_RequestMemoryRead+0x7e>
 8003e4a:	893b      	ldrh	r3, [r7, #8]
 8003e4c:	0a1b      	lsrs	r3, r3, #8
 8003e4e:	b29b      	uxth	r3, r3
 8003e50:	b2da      	uxtb	r2, r3
 8003e52:	68fb      	ldr	r3, [r7, #12]
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	629a      	str	r2, [r3, #40]	; 0x28
 8003e58:	69fa      	ldr	r2, [r7, #28]
 8003e5a:	69b9      	ldr	r1, [r7, #24]
 8003e5c:	68f8      	ldr	r0, [r7, #12]
 8003e5e:	f000 f892 	bl	8003f86 <I2C_WaitOnTXISFlagUntilTimeout>
 8003e62:	4603      	mov	r3, r0
 8003e64:	2b00      	cmp	r3, #0
 8003e66:	d001      	beq.n	8003e6c <I2C_RequestMemoryRead+0x74>
 8003e68:	2301      	movs	r3, #1
 8003e6a:	e012      	b.n	8003e92 <I2C_RequestMemoryRead+0x9a>
 8003e6c:	893b      	ldrh	r3, [r7, #8]
 8003e6e:	b2da      	uxtb	r2, r3
 8003e70:	68fb      	ldr	r3, [r7, #12]
 8003e72:	681b      	ldr	r3, [r3, #0]
 8003e74:	629a      	str	r2, [r3, #40]	; 0x28
 8003e76:	69fb      	ldr	r3, [r7, #28]
 8003e78:	9300      	str	r3, [sp, #0]
 8003e7a:	69bb      	ldr	r3, [r7, #24]
 8003e7c:	2200      	movs	r2, #0
 8003e7e:	2140      	movs	r1, #64	; 0x40
 8003e80:	68f8      	ldr	r0, [r7, #12]
 8003e82:	f000 f831 	bl	8003ee8 <I2C_WaitOnFlagUntilTimeout>
 8003e86:	4603      	mov	r3, r0
 8003e88:	2b00      	cmp	r3, #0
 8003e8a:	d001      	beq.n	8003e90 <I2C_RequestMemoryRead+0x98>
 8003e8c:	2301      	movs	r3, #1
 8003e8e:	e000      	b.n	8003e92 <I2C_RequestMemoryRead+0x9a>
 8003e90:	2300      	movs	r3, #0
 8003e92:	4618      	mov	r0, r3
 8003e94:	3710      	adds	r7, #16
 8003e96:	46bd      	mov	sp, r7
 8003e98:	bd80      	pop	{r7, pc}
 8003e9a:	bf00      	nop
 8003e9c:	80002000 	.word	0x80002000

08003ea0 <I2C_Flush_TXDR>:
 8003ea0:	b480      	push	{r7}
 8003ea2:	b083      	sub	sp, #12
 8003ea4:	af00      	add	r7, sp, #0
 8003ea6:	6078      	str	r0, [r7, #4]
 8003ea8:	687b      	ldr	r3, [r7, #4]
 8003eaa:	681b      	ldr	r3, [r3, #0]
 8003eac:	699b      	ldr	r3, [r3, #24]
 8003eae:	f003 0302 	and.w	r3, r3, #2
 8003eb2:	2b02      	cmp	r3, #2
 8003eb4:	d103      	bne.n	8003ebe <I2C_Flush_TXDR+0x1e>
 8003eb6:	687b      	ldr	r3, [r7, #4]
 8003eb8:	681b      	ldr	r3, [r3, #0]
 8003eba:	2200      	movs	r2, #0
 8003ebc:	629a      	str	r2, [r3, #40]	; 0x28
 8003ebe:	687b      	ldr	r3, [r7, #4]
 8003ec0:	681b      	ldr	r3, [r3, #0]
 8003ec2:	699b      	ldr	r3, [r3, #24]
 8003ec4:	f003 0301 	and.w	r3, r3, #1
 8003ec8:	2b01      	cmp	r3, #1
 8003eca:	d007      	beq.n	8003edc <I2C_Flush_TXDR+0x3c>
 8003ecc:	687b      	ldr	r3, [r7, #4]
 8003ece:	681b      	ldr	r3, [r3, #0]
 8003ed0:	699a      	ldr	r2, [r3, #24]
 8003ed2:	687b      	ldr	r3, [r7, #4]
 8003ed4:	681b      	ldr	r3, [r3, #0]
 8003ed6:	f042 0201 	orr.w	r2, r2, #1
 8003eda:	619a      	str	r2, [r3, #24]
 8003edc:	bf00      	nop
 8003ede:	370c      	adds	r7, #12
 8003ee0:	46bd      	mov	sp, r7
 8003ee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ee6:	4770      	bx	lr

08003ee8 <I2C_WaitOnFlagUntilTimeout>:
 8003ee8:	b580      	push	{r7, lr}
 8003eea:	b084      	sub	sp, #16
 8003eec:	af00      	add	r7, sp, #0
 8003eee:	60f8      	str	r0, [r7, #12]
 8003ef0:	60b9      	str	r1, [r7, #8]
 8003ef2:	603b      	str	r3, [r7, #0]
 8003ef4:	4613      	mov	r3, r2
 8003ef6:	71fb      	strb	r3, [r7, #7]
 8003ef8:	e031      	b.n	8003f5e <I2C_WaitOnFlagUntilTimeout+0x76>
 8003efa:	683b      	ldr	r3, [r7, #0]
 8003efc:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8003f00:	d02d      	beq.n	8003f5e <I2C_WaitOnFlagUntilTimeout+0x76>
 8003f02:	f7fe ffed 	bl	8002ee0 <HAL_GetTick>
 8003f06:	4602      	mov	r2, r0
 8003f08:	69bb      	ldr	r3, [r7, #24]
 8003f0a:	1ad3      	subs	r3, r2, r3
 8003f0c:	683a      	ldr	r2, [r7, #0]
 8003f0e:	429a      	cmp	r2, r3
 8003f10:	d302      	bcc.n	8003f18 <I2C_WaitOnFlagUntilTimeout+0x30>
 8003f12:	683b      	ldr	r3, [r7, #0]
 8003f14:	2b00      	cmp	r3, #0
 8003f16:	d122      	bne.n	8003f5e <I2C_WaitOnFlagUntilTimeout+0x76>
 8003f18:	68fb      	ldr	r3, [r7, #12]
 8003f1a:	681b      	ldr	r3, [r3, #0]
 8003f1c:	699a      	ldr	r2, [r3, #24]
 8003f1e:	68bb      	ldr	r3, [r7, #8]
 8003f20:	4013      	ands	r3, r2
 8003f22:	68ba      	ldr	r2, [r7, #8]
 8003f24:	429a      	cmp	r2, r3
 8003f26:	bf0c      	ite	eq
 8003f28:	2301      	moveq	r3, #1
 8003f2a:	2300      	movne	r3, #0
 8003f2c:	b2db      	uxtb	r3, r3
 8003f2e:	461a      	mov	r2, r3
 8003f30:	79fb      	ldrb	r3, [r7, #7]
 8003f32:	429a      	cmp	r2, r3
 8003f34:	d113      	bne.n	8003f5e <I2C_WaitOnFlagUntilTimeout+0x76>
 8003f36:	68fb      	ldr	r3, [r7, #12]
 8003f38:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003f3a:	f043 0220 	orr.w	r2, r3, #32
 8003f3e:	68fb      	ldr	r3, [r7, #12]
 8003f40:	645a      	str	r2, [r3, #68]	; 0x44
 8003f42:	68fb      	ldr	r3, [r7, #12]
 8003f44:	2220      	movs	r2, #32
 8003f46:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003f4a:	68fb      	ldr	r3, [r7, #12]
 8003f4c:	2200      	movs	r2, #0
 8003f4e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003f52:	68fb      	ldr	r3, [r7, #12]
 8003f54:	2200      	movs	r2, #0
 8003f56:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003f5a:	2301      	movs	r3, #1
 8003f5c:	e00f      	b.n	8003f7e <I2C_WaitOnFlagUntilTimeout+0x96>
 8003f5e:	68fb      	ldr	r3, [r7, #12]
 8003f60:	681b      	ldr	r3, [r3, #0]
 8003f62:	699a      	ldr	r2, [r3, #24]
 8003f64:	68bb      	ldr	r3, [r7, #8]
 8003f66:	4013      	ands	r3, r2
 8003f68:	68ba      	ldr	r2, [r7, #8]
 8003f6a:	429a      	cmp	r2, r3
 8003f6c:	bf0c      	ite	eq
 8003f6e:	2301      	moveq	r3, #1
 8003f70:	2300      	movne	r3, #0
 8003f72:	b2db      	uxtb	r3, r3
 8003f74:	461a      	mov	r2, r3
 8003f76:	79fb      	ldrb	r3, [r7, #7]
 8003f78:	429a      	cmp	r2, r3
 8003f7a:	d0be      	beq.n	8003efa <I2C_WaitOnFlagUntilTimeout+0x12>
 8003f7c:	2300      	movs	r3, #0
 8003f7e:	4618      	mov	r0, r3
 8003f80:	3710      	adds	r7, #16
 8003f82:	46bd      	mov	sp, r7
 8003f84:	bd80      	pop	{r7, pc}

08003f86 <I2C_WaitOnTXISFlagUntilTimeout>:
 8003f86:	b580      	push	{r7, lr}
 8003f88:	b084      	sub	sp, #16
 8003f8a:	af00      	add	r7, sp, #0
 8003f8c:	60f8      	str	r0, [r7, #12]
 8003f8e:	60b9      	str	r1, [r7, #8]
 8003f90:	607a      	str	r2, [r7, #4]
 8003f92:	e033      	b.n	8003ffc <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8003f94:	687a      	ldr	r2, [r7, #4]
 8003f96:	68b9      	ldr	r1, [r7, #8]
 8003f98:	68f8      	ldr	r0, [r7, #12]
 8003f9a:	f000 f87f 	bl	800409c <I2C_IsErrorOccurred>
 8003f9e:	4603      	mov	r3, r0
 8003fa0:	2b00      	cmp	r3, #0
 8003fa2:	d001      	beq.n	8003fa8 <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 8003fa4:	2301      	movs	r3, #1
 8003fa6:	e031      	b.n	800400c <I2C_WaitOnTXISFlagUntilTimeout+0x86>
 8003fa8:	68bb      	ldr	r3, [r7, #8]
 8003faa:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8003fae:	d025      	beq.n	8003ffc <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8003fb0:	f7fe ff96 	bl	8002ee0 <HAL_GetTick>
 8003fb4:	4602      	mov	r2, r0
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	1ad3      	subs	r3, r2, r3
 8003fba:	68ba      	ldr	r2, [r7, #8]
 8003fbc:	429a      	cmp	r2, r3
 8003fbe:	d302      	bcc.n	8003fc6 <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 8003fc0:	68bb      	ldr	r3, [r7, #8]
 8003fc2:	2b00      	cmp	r3, #0
 8003fc4:	d11a      	bne.n	8003ffc <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8003fc6:	68fb      	ldr	r3, [r7, #12]
 8003fc8:	681b      	ldr	r3, [r3, #0]
 8003fca:	699b      	ldr	r3, [r3, #24]
 8003fcc:	f003 0302 	and.w	r3, r3, #2
 8003fd0:	2b02      	cmp	r3, #2
 8003fd2:	d013      	beq.n	8003ffc <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8003fd4:	68fb      	ldr	r3, [r7, #12]
 8003fd6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003fd8:	f043 0220 	orr.w	r2, r3, #32
 8003fdc:	68fb      	ldr	r3, [r7, #12]
 8003fde:	645a      	str	r2, [r3, #68]	; 0x44
 8003fe0:	68fb      	ldr	r3, [r7, #12]
 8003fe2:	2220      	movs	r2, #32
 8003fe4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003fe8:	68fb      	ldr	r3, [r7, #12]
 8003fea:	2200      	movs	r2, #0
 8003fec:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003ff0:	68fb      	ldr	r3, [r7, #12]
 8003ff2:	2200      	movs	r2, #0
 8003ff4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003ff8:	2301      	movs	r3, #1
 8003ffa:	e007      	b.n	800400c <I2C_WaitOnTXISFlagUntilTimeout+0x86>
 8003ffc:	68fb      	ldr	r3, [r7, #12]
 8003ffe:	681b      	ldr	r3, [r3, #0]
 8004000:	699b      	ldr	r3, [r3, #24]
 8004002:	f003 0302 	and.w	r3, r3, #2
 8004006:	2b02      	cmp	r3, #2
 8004008:	d1c4      	bne.n	8003f94 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 800400a:	2300      	movs	r3, #0
 800400c:	4618      	mov	r0, r3
 800400e:	3710      	adds	r7, #16
 8004010:	46bd      	mov	sp, r7
 8004012:	bd80      	pop	{r7, pc}

08004014 <I2C_WaitOnSTOPFlagUntilTimeout>:
 8004014:	b580      	push	{r7, lr}
 8004016:	b084      	sub	sp, #16
 8004018:	af00      	add	r7, sp, #0
 800401a:	60f8      	str	r0, [r7, #12]
 800401c:	60b9      	str	r1, [r7, #8]
 800401e:	607a      	str	r2, [r7, #4]
 8004020:	e02f      	b.n	8004082 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 8004022:	687a      	ldr	r2, [r7, #4]
 8004024:	68b9      	ldr	r1, [r7, #8]
 8004026:	68f8      	ldr	r0, [r7, #12]
 8004028:	f000 f838 	bl	800409c <I2C_IsErrorOccurred>
 800402c:	4603      	mov	r3, r0
 800402e:	2b00      	cmp	r3, #0
 8004030:	d001      	beq.n	8004036 <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 8004032:	2301      	movs	r3, #1
 8004034:	e02d      	b.n	8004092 <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 8004036:	f7fe ff53 	bl	8002ee0 <HAL_GetTick>
 800403a:	4602      	mov	r2, r0
 800403c:	687b      	ldr	r3, [r7, #4]
 800403e:	1ad3      	subs	r3, r2, r3
 8004040:	68ba      	ldr	r2, [r7, #8]
 8004042:	429a      	cmp	r2, r3
 8004044:	d302      	bcc.n	800404c <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 8004046:	68bb      	ldr	r3, [r7, #8]
 8004048:	2b00      	cmp	r3, #0
 800404a:	d11a      	bne.n	8004082 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 800404c:	68fb      	ldr	r3, [r7, #12]
 800404e:	681b      	ldr	r3, [r3, #0]
 8004050:	699b      	ldr	r3, [r3, #24]
 8004052:	f003 0320 	and.w	r3, r3, #32
 8004056:	2b20      	cmp	r3, #32
 8004058:	d013      	beq.n	8004082 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 800405a:	68fb      	ldr	r3, [r7, #12]
 800405c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800405e:	f043 0220 	orr.w	r2, r3, #32
 8004062:	68fb      	ldr	r3, [r7, #12]
 8004064:	645a      	str	r2, [r3, #68]	; 0x44
 8004066:	68fb      	ldr	r3, [r7, #12]
 8004068:	2220      	movs	r2, #32
 800406a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800406e:	68fb      	ldr	r3, [r7, #12]
 8004070:	2200      	movs	r2, #0
 8004072:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004076:	68fb      	ldr	r3, [r7, #12]
 8004078:	2200      	movs	r2, #0
 800407a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800407e:	2301      	movs	r3, #1
 8004080:	e007      	b.n	8004092 <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 8004082:	68fb      	ldr	r3, [r7, #12]
 8004084:	681b      	ldr	r3, [r3, #0]
 8004086:	699b      	ldr	r3, [r3, #24]
 8004088:	f003 0320 	and.w	r3, r3, #32
 800408c:	2b20      	cmp	r3, #32
 800408e:	d1c8      	bne.n	8004022 <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 8004090:	2300      	movs	r3, #0
 8004092:	4618      	mov	r0, r3
 8004094:	3710      	adds	r7, #16
 8004096:	46bd      	mov	sp, r7
 8004098:	bd80      	pop	{r7, pc}
	...

0800409c <I2C_IsErrorOccurred>:
 800409c:	b580      	push	{r7, lr}
 800409e:	b08a      	sub	sp, #40	; 0x28
 80040a0:	af00      	add	r7, sp, #0
 80040a2:	60f8      	str	r0, [r7, #12]
 80040a4:	60b9      	str	r1, [r7, #8]
 80040a6:	607a      	str	r2, [r7, #4]
 80040a8:	2300      	movs	r3, #0
 80040aa:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80040ae:	68fb      	ldr	r3, [r7, #12]
 80040b0:	681b      	ldr	r3, [r3, #0]
 80040b2:	699b      	ldr	r3, [r3, #24]
 80040b4:	61bb      	str	r3, [r7, #24]
 80040b6:	2300      	movs	r3, #0
 80040b8:	623b      	str	r3, [r7, #32]
 80040ba:	687b      	ldr	r3, [r7, #4]
 80040bc:	61fb      	str	r3, [r7, #28]
 80040be:	69bb      	ldr	r3, [r7, #24]
 80040c0:	f003 0310 	and.w	r3, r3, #16
 80040c4:	2b00      	cmp	r3, #0
 80040c6:	d068      	beq.n	800419a <I2C_IsErrorOccurred+0xfe>
 80040c8:	68fb      	ldr	r3, [r7, #12]
 80040ca:	681b      	ldr	r3, [r3, #0]
 80040cc:	2210      	movs	r2, #16
 80040ce:	61da      	str	r2, [r3, #28]
 80040d0:	e049      	b.n	8004166 <I2C_IsErrorOccurred+0xca>
 80040d2:	68bb      	ldr	r3, [r7, #8]
 80040d4:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80040d8:	d045      	beq.n	8004166 <I2C_IsErrorOccurred+0xca>
 80040da:	f7fe ff01 	bl	8002ee0 <HAL_GetTick>
 80040de:	4602      	mov	r2, r0
 80040e0:	69fb      	ldr	r3, [r7, #28]
 80040e2:	1ad3      	subs	r3, r2, r3
 80040e4:	68ba      	ldr	r2, [r7, #8]
 80040e6:	429a      	cmp	r2, r3
 80040e8:	d302      	bcc.n	80040f0 <I2C_IsErrorOccurred+0x54>
 80040ea:	68bb      	ldr	r3, [r7, #8]
 80040ec:	2b00      	cmp	r3, #0
 80040ee:	d13a      	bne.n	8004166 <I2C_IsErrorOccurred+0xca>
 80040f0:	68fb      	ldr	r3, [r7, #12]
 80040f2:	681b      	ldr	r3, [r3, #0]
 80040f4:	685b      	ldr	r3, [r3, #4]
 80040f6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80040fa:	617b      	str	r3, [r7, #20]
 80040fc:	68fb      	ldr	r3, [r7, #12]
 80040fe:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8004102:	74fb      	strb	r3, [r7, #19]
 8004104:	68fb      	ldr	r3, [r7, #12]
 8004106:	681b      	ldr	r3, [r3, #0]
 8004108:	699b      	ldr	r3, [r3, #24]
 800410a:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800410e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004112:	d121      	bne.n	8004158 <I2C_IsErrorOccurred+0xbc>
 8004114:	697b      	ldr	r3, [r7, #20]
 8004116:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800411a:	d01d      	beq.n	8004158 <I2C_IsErrorOccurred+0xbc>
 800411c:	7cfb      	ldrb	r3, [r7, #19]
 800411e:	2b20      	cmp	r3, #32
 8004120:	d01a      	beq.n	8004158 <I2C_IsErrorOccurred+0xbc>
 8004122:	68fb      	ldr	r3, [r7, #12]
 8004124:	681b      	ldr	r3, [r3, #0]
 8004126:	685a      	ldr	r2, [r3, #4]
 8004128:	68fb      	ldr	r3, [r7, #12]
 800412a:	681b      	ldr	r3, [r3, #0]
 800412c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8004130:	605a      	str	r2, [r3, #4]
 8004132:	f7fe fed5 	bl	8002ee0 <HAL_GetTick>
 8004136:	61f8      	str	r0, [r7, #28]
 8004138:	e00e      	b.n	8004158 <I2C_IsErrorOccurred+0xbc>
 800413a:	f7fe fed1 	bl	8002ee0 <HAL_GetTick>
 800413e:	4602      	mov	r2, r0
 8004140:	69fb      	ldr	r3, [r7, #28]
 8004142:	1ad3      	subs	r3, r2, r3
 8004144:	2b19      	cmp	r3, #25
 8004146:	d907      	bls.n	8004158 <I2C_IsErrorOccurred+0xbc>
 8004148:	6a3b      	ldr	r3, [r7, #32]
 800414a:	f043 0320 	orr.w	r3, r3, #32
 800414e:	623b      	str	r3, [r7, #32]
 8004150:	2301      	movs	r3, #1
 8004152:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8004156:	e006      	b.n	8004166 <I2C_IsErrorOccurred+0xca>
 8004158:	68fb      	ldr	r3, [r7, #12]
 800415a:	681b      	ldr	r3, [r3, #0]
 800415c:	699b      	ldr	r3, [r3, #24]
 800415e:	f003 0320 	and.w	r3, r3, #32
 8004162:	2b20      	cmp	r3, #32
 8004164:	d1e9      	bne.n	800413a <I2C_IsErrorOccurred+0x9e>
 8004166:	68fb      	ldr	r3, [r7, #12]
 8004168:	681b      	ldr	r3, [r3, #0]
 800416a:	699b      	ldr	r3, [r3, #24]
 800416c:	f003 0320 	and.w	r3, r3, #32
 8004170:	2b20      	cmp	r3, #32
 8004172:	d003      	beq.n	800417c <I2C_IsErrorOccurred+0xe0>
 8004174:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8004178:	2b00      	cmp	r3, #0
 800417a:	d0aa      	beq.n	80040d2 <I2C_IsErrorOccurred+0x36>
 800417c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8004180:	2b00      	cmp	r3, #0
 8004182:	d103      	bne.n	800418c <I2C_IsErrorOccurred+0xf0>
 8004184:	68fb      	ldr	r3, [r7, #12]
 8004186:	681b      	ldr	r3, [r3, #0]
 8004188:	2220      	movs	r2, #32
 800418a:	61da      	str	r2, [r3, #28]
 800418c:	6a3b      	ldr	r3, [r7, #32]
 800418e:	f043 0304 	orr.w	r3, r3, #4
 8004192:	623b      	str	r3, [r7, #32]
 8004194:	2301      	movs	r3, #1
 8004196:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800419a:	68fb      	ldr	r3, [r7, #12]
 800419c:	681b      	ldr	r3, [r3, #0]
 800419e:	699b      	ldr	r3, [r3, #24]
 80041a0:	61bb      	str	r3, [r7, #24]
 80041a2:	69bb      	ldr	r3, [r7, #24]
 80041a4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80041a8:	2b00      	cmp	r3, #0
 80041aa:	d00b      	beq.n	80041c4 <I2C_IsErrorOccurred+0x128>
 80041ac:	6a3b      	ldr	r3, [r7, #32]
 80041ae:	f043 0301 	orr.w	r3, r3, #1
 80041b2:	623b      	str	r3, [r7, #32]
 80041b4:	68fb      	ldr	r3, [r7, #12]
 80041b6:	681b      	ldr	r3, [r3, #0]
 80041b8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80041bc:	61da      	str	r2, [r3, #28]
 80041be:	2301      	movs	r3, #1
 80041c0:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80041c4:	69bb      	ldr	r3, [r7, #24]
 80041c6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80041ca:	2b00      	cmp	r3, #0
 80041cc:	d00b      	beq.n	80041e6 <I2C_IsErrorOccurred+0x14a>
 80041ce:	6a3b      	ldr	r3, [r7, #32]
 80041d0:	f043 0308 	orr.w	r3, r3, #8
 80041d4:	623b      	str	r3, [r7, #32]
 80041d6:	68fb      	ldr	r3, [r7, #12]
 80041d8:	681b      	ldr	r3, [r3, #0]
 80041da:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80041de:	61da      	str	r2, [r3, #28]
 80041e0:	2301      	movs	r3, #1
 80041e2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80041e6:	69bb      	ldr	r3, [r7, #24]
 80041e8:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80041ec:	2b00      	cmp	r3, #0
 80041ee:	d00b      	beq.n	8004208 <I2C_IsErrorOccurred+0x16c>
 80041f0:	6a3b      	ldr	r3, [r7, #32]
 80041f2:	f043 0302 	orr.w	r3, r3, #2
 80041f6:	623b      	str	r3, [r7, #32]
 80041f8:	68fb      	ldr	r3, [r7, #12]
 80041fa:	681b      	ldr	r3, [r3, #0]
 80041fc:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004200:	61da      	str	r2, [r3, #28]
 8004202:	2301      	movs	r3, #1
 8004204:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8004208:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800420c:	2b00      	cmp	r3, #0
 800420e:	d01c      	beq.n	800424a <I2C_IsErrorOccurred+0x1ae>
 8004210:	68f8      	ldr	r0, [r7, #12]
 8004212:	f7ff fe45 	bl	8003ea0 <I2C_Flush_TXDR>
 8004216:	68fb      	ldr	r3, [r7, #12]
 8004218:	681b      	ldr	r3, [r3, #0]
 800421a:	6859      	ldr	r1, [r3, #4]
 800421c:	68fb      	ldr	r3, [r7, #12]
 800421e:	681a      	ldr	r2, [r3, #0]
 8004220:	4b0d      	ldr	r3, [pc, #52]	; (8004258 <I2C_IsErrorOccurred+0x1bc>)
 8004222:	400b      	ands	r3, r1
 8004224:	6053      	str	r3, [r2, #4]
 8004226:	68fb      	ldr	r3, [r7, #12]
 8004228:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800422a:	6a3b      	ldr	r3, [r7, #32]
 800422c:	431a      	orrs	r2, r3
 800422e:	68fb      	ldr	r3, [r7, #12]
 8004230:	645a      	str	r2, [r3, #68]	; 0x44
 8004232:	68fb      	ldr	r3, [r7, #12]
 8004234:	2220      	movs	r2, #32
 8004236:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800423a:	68fb      	ldr	r3, [r7, #12]
 800423c:	2200      	movs	r2, #0
 800423e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004242:	68fb      	ldr	r3, [r7, #12]
 8004244:	2200      	movs	r2, #0
 8004246:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800424a:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800424e:	4618      	mov	r0, r3
 8004250:	3728      	adds	r7, #40	; 0x28
 8004252:	46bd      	mov	sp, r7
 8004254:	bd80      	pop	{r7, pc}
 8004256:	bf00      	nop
 8004258:	fe00e800 	.word	0xfe00e800

0800425c <I2C_TransferConfig>:
 800425c:	b480      	push	{r7}
 800425e:	b087      	sub	sp, #28
 8004260:	af00      	add	r7, sp, #0
 8004262:	60f8      	str	r0, [r7, #12]
 8004264:	607b      	str	r3, [r7, #4]
 8004266:	460b      	mov	r3, r1
 8004268:	817b      	strh	r3, [r7, #10]
 800426a:	4613      	mov	r3, r2
 800426c:	727b      	strb	r3, [r7, #9]
 800426e:	897b      	ldrh	r3, [r7, #10]
 8004270:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8004274:	7a7b      	ldrb	r3, [r7, #9]
 8004276:	041b      	lsls	r3, r3, #16
 8004278:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 800427c:	431a      	orrs	r2, r3
 800427e:	687b      	ldr	r3, [r7, #4]
 8004280:	431a      	orrs	r2, r3
 8004282:	6a3b      	ldr	r3, [r7, #32]
 8004284:	4313      	orrs	r3, r2
 8004286:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800428a:	617b      	str	r3, [r7, #20]
 800428c:	68fb      	ldr	r3, [r7, #12]
 800428e:	681b      	ldr	r3, [r3, #0]
 8004290:	685a      	ldr	r2, [r3, #4]
 8004292:	6a3b      	ldr	r3, [r7, #32]
 8004294:	0d5b      	lsrs	r3, r3, #21
 8004296:	f403 6180 	and.w	r1, r3, #1024	; 0x400
 800429a:	4b08      	ldr	r3, [pc, #32]	; (80042bc <I2C_TransferConfig+0x60>)
 800429c:	430b      	orrs	r3, r1
 800429e:	43db      	mvns	r3, r3
 80042a0:	ea02 0103 	and.w	r1, r2, r3
 80042a4:	68fb      	ldr	r3, [r7, #12]
 80042a6:	681b      	ldr	r3, [r3, #0]
 80042a8:	697a      	ldr	r2, [r7, #20]
 80042aa:	430a      	orrs	r2, r1
 80042ac:	605a      	str	r2, [r3, #4]
 80042ae:	bf00      	nop
 80042b0:	371c      	adds	r7, #28
 80042b2:	46bd      	mov	sp, r7
 80042b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042b8:	4770      	bx	lr
 80042ba:	bf00      	nop
 80042bc:	03ff63ff 	.word	0x03ff63ff

080042c0 <HAL_I2CEx_ConfigAnalogFilter>:
 80042c0:	b480      	push	{r7}
 80042c2:	b083      	sub	sp, #12
 80042c4:	af00      	add	r7, sp, #0
 80042c6:	6078      	str	r0, [r7, #4]
 80042c8:	6039      	str	r1, [r7, #0]
 80042ca:	687b      	ldr	r3, [r7, #4]
 80042cc:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80042d0:	b2db      	uxtb	r3, r3
 80042d2:	2b20      	cmp	r3, #32
 80042d4:	d138      	bne.n	8004348 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 80042d6:	687b      	ldr	r3, [r7, #4]
 80042d8:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80042dc:	2b01      	cmp	r3, #1
 80042de:	d101      	bne.n	80042e4 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 80042e0:	2302      	movs	r3, #2
 80042e2:	e032      	b.n	800434a <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	2201      	movs	r2, #1
 80042e8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80042ec:	687b      	ldr	r3, [r7, #4]
 80042ee:	2224      	movs	r2, #36	; 0x24
 80042f0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80042f4:	687b      	ldr	r3, [r7, #4]
 80042f6:	681b      	ldr	r3, [r3, #0]
 80042f8:	681a      	ldr	r2, [r3, #0]
 80042fa:	687b      	ldr	r3, [r7, #4]
 80042fc:	681b      	ldr	r3, [r3, #0]
 80042fe:	f022 0201 	bic.w	r2, r2, #1
 8004302:	601a      	str	r2, [r3, #0]
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	681b      	ldr	r3, [r3, #0]
 8004308:	681a      	ldr	r2, [r3, #0]
 800430a:	687b      	ldr	r3, [r7, #4]
 800430c:	681b      	ldr	r3, [r3, #0]
 800430e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004312:	601a      	str	r2, [r3, #0]
 8004314:	687b      	ldr	r3, [r7, #4]
 8004316:	681b      	ldr	r3, [r3, #0]
 8004318:	6819      	ldr	r1, [r3, #0]
 800431a:	687b      	ldr	r3, [r7, #4]
 800431c:	681b      	ldr	r3, [r3, #0]
 800431e:	683a      	ldr	r2, [r7, #0]
 8004320:	430a      	orrs	r2, r1
 8004322:	601a      	str	r2, [r3, #0]
 8004324:	687b      	ldr	r3, [r7, #4]
 8004326:	681b      	ldr	r3, [r3, #0]
 8004328:	681a      	ldr	r2, [r3, #0]
 800432a:	687b      	ldr	r3, [r7, #4]
 800432c:	681b      	ldr	r3, [r3, #0]
 800432e:	f042 0201 	orr.w	r2, r2, #1
 8004332:	601a      	str	r2, [r3, #0]
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	2220      	movs	r2, #32
 8004338:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800433c:	687b      	ldr	r3, [r7, #4]
 800433e:	2200      	movs	r2, #0
 8004340:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004344:	2300      	movs	r3, #0
 8004346:	e000      	b.n	800434a <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8004348:	2302      	movs	r3, #2
 800434a:	4618      	mov	r0, r3
 800434c:	370c      	adds	r7, #12
 800434e:	46bd      	mov	sp, r7
 8004350:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004354:	4770      	bx	lr

08004356 <HAL_I2CEx_ConfigDigitalFilter>:
 8004356:	b480      	push	{r7}
 8004358:	b085      	sub	sp, #20
 800435a:	af00      	add	r7, sp, #0
 800435c:	6078      	str	r0, [r7, #4]
 800435e:	6039      	str	r1, [r7, #0]
 8004360:	687b      	ldr	r3, [r7, #4]
 8004362:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004366:	b2db      	uxtb	r3, r3
 8004368:	2b20      	cmp	r3, #32
 800436a:	d139      	bne.n	80043e0 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 800436c:	687b      	ldr	r3, [r7, #4]
 800436e:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8004372:	2b01      	cmp	r3, #1
 8004374:	d101      	bne.n	800437a <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8004376:	2302      	movs	r3, #2
 8004378:	e033      	b.n	80043e2 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 800437a:	687b      	ldr	r3, [r7, #4]
 800437c:	2201      	movs	r2, #1
 800437e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004382:	687b      	ldr	r3, [r7, #4]
 8004384:	2224      	movs	r2, #36	; 0x24
 8004386:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800438a:	687b      	ldr	r3, [r7, #4]
 800438c:	681b      	ldr	r3, [r3, #0]
 800438e:	681a      	ldr	r2, [r3, #0]
 8004390:	687b      	ldr	r3, [r7, #4]
 8004392:	681b      	ldr	r3, [r3, #0]
 8004394:	f022 0201 	bic.w	r2, r2, #1
 8004398:	601a      	str	r2, [r3, #0]
 800439a:	687b      	ldr	r3, [r7, #4]
 800439c:	681b      	ldr	r3, [r3, #0]
 800439e:	681b      	ldr	r3, [r3, #0]
 80043a0:	60fb      	str	r3, [r7, #12]
 80043a2:	68fb      	ldr	r3, [r7, #12]
 80043a4:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 80043a8:	60fb      	str	r3, [r7, #12]
 80043aa:	683b      	ldr	r3, [r7, #0]
 80043ac:	021b      	lsls	r3, r3, #8
 80043ae:	68fa      	ldr	r2, [r7, #12]
 80043b0:	4313      	orrs	r3, r2
 80043b2:	60fb      	str	r3, [r7, #12]
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	68fa      	ldr	r2, [r7, #12]
 80043ba:	601a      	str	r2, [r3, #0]
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	681b      	ldr	r3, [r3, #0]
 80043c0:	681a      	ldr	r2, [r3, #0]
 80043c2:	687b      	ldr	r3, [r7, #4]
 80043c4:	681b      	ldr	r3, [r3, #0]
 80043c6:	f042 0201 	orr.w	r2, r2, #1
 80043ca:	601a      	str	r2, [r3, #0]
 80043cc:	687b      	ldr	r3, [r7, #4]
 80043ce:	2220      	movs	r2, #32
 80043d0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80043d4:	687b      	ldr	r3, [r7, #4]
 80043d6:	2200      	movs	r2, #0
 80043d8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80043dc:	2300      	movs	r3, #0
 80043de:	e000      	b.n	80043e2 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 80043e0:	2302      	movs	r3, #2
 80043e2:	4618      	mov	r0, r3
 80043e4:	3714      	adds	r7, #20
 80043e6:	46bd      	mov	sp, r7
 80043e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043ec:	4770      	bx	lr
	...

080043f0 <HAL_PWREx_GetVoltageRange>:
 80043f0:	b480      	push	{r7}
 80043f2:	af00      	add	r7, sp, #0
 80043f4:	4b04      	ldr	r3, [pc, #16]	; (8004408 <HAL_PWREx_GetVoltageRange+0x18>)
 80043f6:	681b      	ldr	r3, [r3, #0]
 80043f8:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 80043fc:	4618      	mov	r0, r3
 80043fe:	46bd      	mov	sp, r7
 8004400:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004404:	4770      	bx	lr
 8004406:	bf00      	nop
 8004408:	40007000 	.word	0x40007000

0800440c <HAL_PWREx_ControlVoltageScaling>:
 800440c:	b480      	push	{r7}
 800440e:	b085      	sub	sp, #20
 8004410:	af00      	add	r7, sp, #0
 8004412:	6078      	str	r0, [r7, #4]
 8004414:	687b      	ldr	r3, [r7, #4]
 8004416:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800441a:	d130      	bne.n	800447e <HAL_PWREx_ControlVoltageScaling+0x72>
 800441c:	4b23      	ldr	r3, [pc, #140]	; (80044ac <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800441e:	681b      	ldr	r3, [r3, #0]
 8004420:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8004424:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004428:	d038      	beq.n	800449c <HAL_PWREx_ControlVoltageScaling+0x90>
 800442a:	4b20      	ldr	r3, [pc, #128]	; (80044ac <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800442c:	681b      	ldr	r3, [r3, #0]
 800442e:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8004432:	4a1e      	ldr	r2, [pc, #120]	; (80044ac <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8004434:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004438:	6013      	str	r3, [r2, #0]
 800443a:	4b1d      	ldr	r3, [pc, #116]	; (80044b0 <HAL_PWREx_ControlVoltageScaling+0xa4>)
 800443c:	681b      	ldr	r3, [r3, #0]
 800443e:	2232      	movs	r2, #50	; 0x32
 8004440:	fb02 f303 	mul.w	r3, r2, r3
 8004444:	4a1b      	ldr	r2, [pc, #108]	; (80044b4 <HAL_PWREx_ControlVoltageScaling+0xa8>)
 8004446:	fba2 2303 	umull	r2, r3, r2, r3
 800444a:	0c9b      	lsrs	r3, r3, #18
 800444c:	3301      	adds	r3, #1
 800444e:	60fb      	str	r3, [r7, #12]
 8004450:	e002      	b.n	8004458 <HAL_PWREx_ControlVoltageScaling+0x4c>
 8004452:	68fb      	ldr	r3, [r7, #12]
 8004454:	3b01      	subs	r3, #1
 8004456:	60fb      	str	r3, [r7, #12]
 8004458:	4b14      	ldr	r3, [pc, #80]	; (80044ac <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800445a:	695b      	ldr	r3, [r3, #20]
 800445c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004460:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004464:	d102      	bne.n	800446c <HAL_PWREx_ControlVoltageScaling+0x60>
 8004466:	68fb      	ldr	r3, [r7, #12]
 8004468:	2b00      	cmp	r3, #0
 800446a:	d1f2      	bne.n	8004452 <HAL_PWREx_ControlVoltageScaling+0x46>
 800446c:	4b0f      	ldr	r3, [pc, #60]	; (80044ac <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800446e:	695b      	ldr	r3, [r3, #20]
 8004470:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004474:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004478:	d110      	bne.n	800449c <HAL_PWREx_ControlVoltageScaling+0x90>
 800447a:	2303      	movs	r3, #3
 800447c:	e00f      	b.n	800449e <HAL_PWREx_ControlVoltageScaling+0x92>
 800447e:	4b0b      	ldr	r3, [pc, #44]	; (80044ac <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8004480:	681b      	ldr	r3, [r3, #0]
 8004482:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8004486:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800448a:	d007      	beq.n	800449c <HAL_PWREx_ControlVoltageScaling+0x90>
 800448c:	4b07      	ldr	r3, [pc, #28]	; (80044ac <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800448e:	681b      	ldr	r3, [r3, #0]
 8004490:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8004494:	4a05      	ldr	r2, [pc, #20]	; (80044ac <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8004496:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800449a:	6013      	str	r3, [r2, #0]
 800449c:	2300      	movs	r3, #0
 800449e:	4618      	mov	r0, r3
 80044a0:	3714      	adds	r7, #20
 80044a2:	46bd      	mov	sp, r7
 80044a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044a8:	4770      	bx	lr
 80044aa:	bf00      	nop
 80044ac:	40007000 	.word	0x40007000
 80044b0:	2000001c 	.word	0x2000001c
 80044b4:	431bde83 	.word	0x431bde83

080044b8 <HAL_RCC_OscConfig>:
 80044b8:	b580      	push	{r7, lr}
 80044ba:	b08a      	sub	sp, #40	; 0x28
 80044bc:	af00      	add	r7, sp, #0
 80044be:	6078      	str	r0, [r7, #4]
 80044c0:	687b      	ldr	r3, [r7, #4]
 80044c2:	2b00      	cmp	r3, #0
 80044c4:	d102      	bne.n	80044cc <HAL_RCC_OscConfig+0x14>
 80044c6:	2301      	movs	r3, #1
 80044c8:	f000 bc4f 	b.w	8004d6a <HAL_RCC_OscConfig+0x8b2>
 80044cc:	4b97      	ldr	r3, [pc, #604]	; (800472c <HAL_RCC_OscConfig+0x274>)
 80044ce:	689b      	ldr	r3, [r3, #8]
 80044d0:	f003 030c 	and.w	r3, r3, #12
 80044d4:	623b      	str	r3, [r7, #32]
 80044d6:	4b95      	ldr	r3, [pc, #596]	; (800472c <HAL_RCC_OscConfig+0x274>)
 80044d8:	68db      	ldr	r3, [r3, #12]
 80044da:	f003 0303 	and.w	r3, r3, #3
 80044de:	61fb      	str	r3, [r7, #28]
 80044e0:	687b      	ldr	r3, [r7, #4]
 80044e2:	681b      	ldr	r3, [r3, #0]
 80044e4:	f003 0310 	and.w	r3, r3, #16
 80044e8:	2b00      	cmp	r3, #0
 80044ea:	f000 80e6 	beq.w	80046ba <HAL_RCC_OscConfig+0x202>
 80044ee:	6a3b      	ldr	r3, [r7, #32]
 80044f0:	2b00      	cmp	r3, #0
 80044f2:	d007      	beq.n	8004504 <HAL_RCC_OscConfig+0x4c>
 80044f4:	6a3b      	ldr	r3, [r7, #32]
 80044f6:	2b0c      	cmp	r3, #12
 80044f8:	f040 808d 	bne.w	8004616 <HAL_RCC_OscConfig+0x15e>
 80044fc:	69fb      	ldr	r3, [r7, #28]
 80044fe:	2b01      	cmp	r3, #1
 8004500:	f040 8089 	bne.w	8004616 <HAL_RCC_OscConfig+0x15e>
 8004504:	4b89      	ldr	r3, [pc, #548]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004506:	681b      	ldr	r3, [r3, #0]
 8004508:	f003 0302 	and.w	r3, r3, #2
 800450c:	2b00      	cmp	r3, #0
 800450e:	d006      	beq.n	800451e <HAL_RCC_OscConfig+0x66>
 8004510:	687b      	ldr	r3, [r7, #4]
 8004512:	69db      	ldr	r3, [r3, #28]
 8004514:	2b00      	cmp	r3, #0
 8004516:	d102      	bne.n	800451e <HAL_RCC_OscConfig+0x66>
 8004518:	2301      	movs	r3, #1
 800451a:	f000 bc26 	b.w	8004d6a <HAL_RCC_OscConfig+0x8b2>
 800451e:	687b      	ldr	r3, [r7, #4]
 8004520:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004522:	4b82      	ldr	r3, [pc, #520]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004524:	681b      	ldr	r3, [r3, #0]
 8004526:	f003 0308 	and.w	r3, r3, #8
 800452a:	2b00      	cmp	r3, #0
 800452c:	d004      	beq.n	8004538 <HAL_RCC_OscConfig+0x80>
 800452e:	4b7f      	ldr	r3, [pc, #508]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004530:	681b      	ldr	r3, [r3, #0]
 8004532:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004536:	e005      	b.n	8004544 <HAL_RCC_OscConfig+0x8c>
 8004538:	4b7c      	ldr	r3, [pc, #496]	; (800472c <HAL_RCC_OscConfig+0x274>)
 800453a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800453e:	091b      	lsrs	r3, r3, #4
 8004540:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004544:	4293      	cmp	r3, r2
 8004546:	d224      	bcs.n	8004592 <HAL_RCC_OscConfig+0xda>
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800454c:	4618      	mov	r0, r3
 800454e:	f000 fdd9 	bl	8005104 <RCC_SetFlashLatencyFromMSIRange>
 8004552:	4603      	mov	r3, r0
 8004554:	2b00      	cmp	r3, #0
 8004556:	d002      	beq.n	800455e <HAL_RCC_OscConfig+0xa6>
 8004558:	2301      	movs	r3, #1
 800455a:	f000 bc06 	b.w	8004d6a <HAL_RCC_OscConfig+0x8b2>
 800455e:	4b73      	ldr	r3, [pc, #460]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004560:	681b      	ldr	r3, [r3, #0]
 8004562:	4a72      	ldr	r2, [pc, #456]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004564:	f043 0308 	orr.w	r3, r3, #8
 8004568:	6013      	str	r3, [r2, #0]
 800456a:	4b70      	ldr	r3, [pc, #448]	; (800472c <HAL_RCC_OscConfig+0x274>)
 800456c:	681b      	ldr	r3, [r3, #0]
 800456e:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004572:	687b      	ldr	r3, [r7, #4]
 8004574:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004576:	496d      	ldr	r1, [pc, #436]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004578:	4313      	orrs	r3, r2
 800457a:	600b      	str	r3, [r1, #0]
 800457c:	4b6b      	ldr	r3, [pc, #428]	; (800472c <HAL_RCC_OscConfig+0x274>)
 800457e:	685b      	ldr	r3, [r3, #4]
 8004580:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	6a1b      	ldr	r3, [r3, #32]
 8004588:	021b      	lsls	r3, r3, #8
 800458a:	4968      	ldr	r1, [pc, #416]	; (800472c <HAL_RCC_OscConfig+0x274>)
 800458c:	4313      	orrs	r3, r2
 800458e:	604b      	str	r3, [r1, #4]
 8004590:	e025      	b.n	80045de <HAL_RCC_OscConfig+0x126>
 8004592:	4b66      	ldr	r3, [pc, #408]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004594:	681b      	ldr	r3, [r3, #0]
 8004596:	4a65      	ldr	r2, [pc, #404]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004598:	f043 0308 	orr.w	r3, r3, #8
 800459c:	6013      	str	r3, [r2, #0]
 800459e:	4b63      	ldr	r3, [pc, #396]	; (800472c <HAL_RCC_OscConfig+0x274>)
 80045a0:	681b      	ldr	r3, [r3, #0]
 80045a2:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80045a6:	687b      	ldr	r3, [r7, #4]
 80045a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045aa:	4960      	ldr	r1, [pc, #384]	; (800472c <HAL_RCC_OscConfig+0x274>)
 80045ac:	4313      	orrs	r3, r2
 80045ae:	600b      	str	r3, [r1, #0]
 80045b0:	4b5e      	ldr	r3, [pc, #376]	; (800472c <HAL_RCC_OscConfig+0x274>)
 80045b2:	685b      	ldr	r3, [r3, #4]
 80045b4:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 80045b8:	687b      	ldr	r3, [r7, #4]
 80045ba:	6a1b      	ldr	r3, [r3, #32]
 80045bc:	021b      	lsls	r3, r3, #8
 80045be:	495b      	ldr	r1, [pc, #364]	; (800472c <HAL_RCC_OscConfig+0x274>)
 80045c0:	4313      	orrs	r3, r2
 80045c2:	604b      	str	r3, [r1, #4]
 80045c4:	6a3b      	ldr	r3, [r7, #32]
 80045c6:	2b00      	cmp	r3, #0
 80045c8:	d109      	bne.n	80045de <HAL_RCC_OscConfig+0x126>
 80045ca:	687b      	ldr	r3, [r7, #4]
 80045cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045ce:	4618      	mov	r0, r3
 80045d0:	f000 fd98 	bl	8005104 <RCC_SetFlashLatencyFromMSIRange>
 80045d4:	4603      	mov	r3, r0
 80045d6:	2b00      	cmp	r3, #0
 80045d8:	d001      	beq.n	80045de <HAL_RCC_OscConfig+0x126>
 80045da:	2301      	movs	r3, #1
 80045dc:	e3c5      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 80045de:	f000 fccd 	bl	8004f7c <HAL_RCC_GetSysClockFreq>
 80045e2:	4602      	mov	r2, r0
 80045e4:	4b51      	ldr	r3, [pc, #324]	; (800472c <HAL_RCC_OscConfig+0x274>)
 80045e6:	689b      	ldr	r3, [r3, #8]
 80045e8:	091b      	lsrs	r3, r3, #4
 80045ea:	f003 030f 	and.w	r3, r3, #15
 80045ee:	4950      	ldr	r1, [pc, #320]	; (8004730 <HAL_RCC_OscConfig+0x278>)
 80045f0:	5ccb      	ldrb	r3, [r1, r3]
 80045f2:	f003 031f 	and.w	r3, r3, #31
 80045f6:	fa22 f303 	lsr.w	r3, r2, r3
 80045fa:	4a4e      	ldr	r2, [pc, #312]	; (8004734 <HAL_RCC_OscConfig+0x27c>)
 80045fc:	6013      	str	r3, [r2, #0]
 80045fe:	4b4e      	ldr	r3, [pc, #312]	; (8004738 <HAL_RCC_OscConfig+0x280>)
 8004600:	681b      	ldr	r3, [r3, #0]
 8004602:	4618      	mov	r0, r3
 8004604:	f7fe fc1c 	bl	8002e40 <HAL_InitTick>
 8004608:	4603      	mov	r3, r0
 800460a:	75fb      	strb	r3, [r7, #23]
 800460c:	7dfb      	ldrb	r3, [r7, #23]
 800460e:	2b00      	cmp	r3, #0
 8004610:	d052      	beq.n	80046b8 <HAL_RCC_OscConfig+0x200>
 8004612:	7dfb      	ldrb	r3, [r7, #23]
 8004614:	e3a9      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	69db      	ldr	r3, [r3, #28]
 800461a:	2b00      	cmp	r3, #0
 800461c:	d032      	beq.n	8004684 <HAL_RCC_OscConfig+0x1cc>
 800461e:	4b43      	ldr	r3, [pc, #268]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004620:	681b      	ldr	r3, [r3, #0]
 8004622:	4a42      	ldr	r2, [pc, #264]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004624:	f043 0301 	orr.w	r3, r3, #1
 8004628:	6013      	str	r3, [r2, #0]
 800462a:	f7fe fc59 	bl	8002ee0 <HAL_GetTick>
 800462e:	61b8      	str	r0, [r7, #24]
 8004630:	e008      	b.n	8004644 <HAL_RCC_OscConfig+0x18c>
 8004632:	f7fe fc55 	bl	8002ee0 <HAL_GetTick>
 8004636:	4602      	mov	r2, r0
 8004638:	69bb      	ldr	r3, [r7, #24]
 800463a:	1ad3      	subs	r3, r2, r3
 800463c:	2b02      	cmp	r3, #2
 800463e:	d901      	bls.n	8004644 <HAL_RCC_OscConfig+0x18c>
 8004640:	2303      	movs	r3, #3
 8004642:	e392      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 8004644:	4b39      	ldr	r3, [pc, #228]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004646:	681b      	ldr	r3, [r3, #0]
 8004648:	f003 0302 	and.w	r3, r3, #2
 800464c:	2b00      	cmp	r3, #0
 800464e:	d0f0      	beq.n	8004632 <HAL_RCC_OscConfig+0x17a>
 8004650:	4b36      	ldr	r3, [pc, #216]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004652:	681b      	ldr	r3, [r3, #0]
 8004654:	4a35      	ldr	r2, [pc, #212]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004656:	f043 0308 	orr.w	r3, r3, #8
 800465a:	6013      	str	r3, [r2, #0]
 800465c:	4b33      	ldr	r3, [pc, #204]	; (800472c <HAL_RCC_OscConfig+0x274>)
 800465e:	681b      	ldr	r3, [r3, #0]
 8004660:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004664:	687b      	ldr	r3, [r7, #4]
 8004666:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004668:	4930      	ldr	r1, [pc, #192]	; (800472c <HAL_RCC_OscConfig+0x274>)
 800466a:	4313      	orrs	r3, r2
 800466c:	600b      	str	r3, [r1, #0]
 800466e:	4b2f      	ldr	r3, [pc, #188]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004670:	685b      	ldr	r3, [r3, #4]
 8004672:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8004676:	687b      	ldr	r3, [r7, #4]
 8004678:	6a1b      	ldr	r3, [r3, #32]
 800467a:	021b      	lsls	r3, r3, #8
 800467c:	492b      	ldr	r1, [pc, #172]	; (800472c <HAL_RCC_OscConfig+0x274>)
 800467e:	4313      	orrs	r3, r2
 8004680:	604b      	str	r3, [r1, #4]
 8004682:	e01a      	b.n	80046ba <HAL_RCC_OscConfig+0x202>
 8004684:	4b29      	ldr	r3, [pc, #164]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004686:	681b      	ldr	r3, [r3, #0]
 8004688:	4a28      	ldr	r2, [pc, #160]	; (800472c <HAL_RCC_OscConfig+0x274>)
 800468a:	f023 0301 	bic.w	r3, r3, #1
 800468e:	6013      	str	r3, [r2, #0]
 8004690:	f7fe fc26 	bl	8002ee0 <HAL_GetTick>
 8004694:	61b8      	str	r0, [r7, #24]
 8004696:	e008      	b.n	80046aa <HAL_RCC_OscConfig+0x1f2>
 8004698:	f7fe fc22 	bl	8002ee0 <HAL_GetTick>
 800469c:	4602      	mov	r2, r0
 800469e:	69bb      	ldr	r3, [r7, #24]
 80046a0:	1ad3      	subs	r3, r2, r3
 80046a2:	2b02      	cmp	r3, #2
 80046a4:	d901      	bls.n	80046aa <HAL_RCC_OscConfig+0x1f2>
 80046a6:	2303      	movs	r3, #3
 80046a8:	e35f      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 80046aa:	4b20      	ldr	r3, [pc, #128]	; (800472c <HAL_RCC_OscConfig+0x274>)
 80046ac:	681b      	ldr	r3, [r3, #0]
 80046ae:	f003 0302 	and.w	r3, r3, #2
 80046b2:	2b00      	cmp	r3, #0
 80046b4:	d1f0      	bne.n	8004698 <HAL_RCC_OscConfig+0x1e0>
 80046b6:	e000      	b.n	80046ba <HAL_RCC_OscConfig+0x202>
 80046b8:	bf00      	nop
 80046ba:	687b      	ldr	r3, [r7, #4]
 80046bc:	681b      	ldr	r3, [r3, #0]
 80046be:	f003 0301 	and.w	r3, r3, #1
 80046c2:	2b00      	cmp	r3, #0
 80046c4:	d073      	beq.n	80047ae <HAL_RCC_OscConfig+0x2f6>
 80046c6:	6a3b      	ldr	r3, [r7, #32]
 80046c8:	2b08      	cmp	r3, #8
 80046ca:	d005      	beq.n	80046d8 <HAL_RCC_OscConfig+0x220>
 80046cc:	6a3b      	ldr	r3, [r7, #32]
 80046ce:	2b0c      	cmp	r3, #12
 80046d0:	d10e      	bne.n	80046f0 <HAL_RCC_OscConfig+0x238>
 80046d2:	69fb      	ldr	r3, [r7, #28]
 80046d4:	2b03      	cmp	r3, #3
 80046d6:	d10b      	bne.n	80046f0 <HAL_RCC_OscConfig+0x238>
 80046d8:	4b14      	ldr	r3, [pc, #80]	; (800472c <HAL_RCC_OscConfig+0x274>)
 80046da:	681b      	ldr	r3, [r3, #0]
 80046dc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80046e0:	2b00      	cmp	r3, #0
 80046e2:	d063      	beq.n	80047ac <HAL_RCC_OscConfig+0x2f4>
 80046e4:	687b      	ldr	r3, [r7, #4]
 80046e6:	685b      	ldr	r3, [r3, #4]
 80046e8:	2b00      	cmp	r3, #0
 80046ea:	d15f      	bne.n	80047ac <HAL_RCC_OscConfig+0x2f4>
 80046ec:	2301      	movs	r3, #1
 80046ee:	e33c      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 80046f0:	687b      	ldr	r3, [r7, #4]
 80046f2:	685b      	ldr	r3, [r3, #4]
 80046f4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80046f8:	d106      	bne.n	8004708 <HAL_RCC_OscConfig+0x250>
 80046fa:	4b0c      	ldr	r3, [pc, #48]	; (800472c <HAL_RCC_OscConfig+0x274>)
 80046fc:	681b      	ldr	r3, [r3, #0]
 80046fe:	4a0b      	ldr	r2, [pc, #44]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004700:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004704:	6013      	str	r3, [r2, #0]
 8004706:	e025      	b.n	8004754 <HAL_RCC_OscConfig+0x29c>
 8004708:	687b      	ldr	r3, [r7, #4]
 800470a:	685b      	ldr	r3, [r3, #4]
 800470c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004710:	d114      	bne.n	800473c <HAL_RCC_OscConfig+0x284>
 8004712:	4b06      	ldr	r3, [pc, #24]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004714:	681b      	ldr	r3, [r3, #0]
 8004716:	4a05      	ldr	r2, [pc, #20]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004718:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800471c:	6013      	str	r3, [r2, #0]
 800471e:	4b03      	ldr	r3, [pc, #12]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004720:	681b      	ldr	r3, [r3, #0]
 8004722:	4a02      	ldr	r2, [pc, #8]	; (800472c <HAL_RCC_OscConfig+0x274>)
 8004724:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004728:	6013      	str	r3, [r2, #0]
 800472a:	e013      	b.n	8004754 <HAL_RCC_OscConfig+0x29c>
 800472c:	40021000 	.word	0x40021000
 8004730:	0800bcc8 	.word	0x0800bcc8
 8004734:	2000001c 	.word	0x2000001c
 8004738:	20000020 	.word	0x20000020
 800473c:	4b8f      	ldr	r3, [pc, #572]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 800473e:	681b      	ldr	r3, [r3, #0]
 8004740:	4a8e      	ldr	r2, [pc, #568]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 8004742:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004746:	6013      	str	r3, [r2, #0]
 8004748:	4b8c      	ldr	r3, [pc, #560]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 800474a:	681b      	ldr	r3, [r3, #0]
 800474c:	4a8b      	ldr	r2, [pc, #556]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 800474e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004752:	6013      	str	r3, [r2, #0]
 8004754:	687b      	ldr	r3, [r7, #4]
 8004756:	685b      	ldr	r3, [r3, #4]
 8004758:	2b00      	cmp	r3, #0
 800475a:	d013      	beq.n	8004784 <HAL_RCC_OscConfig+0x2cc>
 800475c:	f7fe fbc0 	bl	8002ee0 <HAL_GetTick>
 8004760:	61b8      	str	r0, [r7, #24]
 8004762:	e008      	b.n	8004776 <HAL_RCC_OscConfig+0x2be>
 8004764:	f7fe fbbc 	bl	8002ee0 <HAL_GetTick>
 8004768:	4602      	mov	r2, r0
 800476a:	69bb      	ldr	r3, [r7, #24]
 800476c:	1ad3      	subs	r3, r2, r3
 800476e:	2b64      	cmp	r3, #100	; 0x64
 8004770:	d901      	bls.n	8004776 <HAL_RCC_OscConfig+0x2be>
 8004772:	2303      	movs	r3, #3
 8004774:	e2f9      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 8004776:	4b81      	ldr	r3, [pc, #516]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 8004778:	681b      	ldr	r3, [r3, #0]
 800477a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800477e:	2b00      	cmp	r3, #0
 8004780:	d0f0      	beq.n	8004764 <HAL_RCC_OscConfig+0x2ac>
 8004782:	e014      	b.n	80047ae <HAL_RCC_OscConfig+0x2f6>
 8004784:	f7fe fbac 	bl	8002ee0 <HAL_GetTick>
 8004788:	61b8      	str	r0, [r7, #24]
 800478a:	e008      	b.n	800479e <HAL_RCC_OscConfig+0x2e6>
 800478c:	f7fe fba8 	bl	8002ee0 <HAL_GetTick>
 8004790:	4602      	mov	r2, r0
 8004792:	69bb      	ldr	r3, [r7, #24]
 8004794:	1ad3      	subs	r3, r2, r3
 8004796:	2b64      	cmp	r3, #100	; 0x64
 8004798:	d901      	bls.n	800479e <HAL_RCC_OscConfig+0x2e6>
 800479a:	2303      	movs	r3, #3
 800479c:	e2e5      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 800479e:	4b77      	ldr	r3, [pc, #476]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 80047a0:	681b      	ldr	r3, [r3, #0]
 80047a2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80047a6:	2b00      	cmp	r3, #0
 80047a8:	d1f0      	bne.n	800478c <HAL_RCC_OscConfig+0x2d4>
 80047aa:	e000      	b.n	80047ae <HAL_RCC_OscConfig+0x2f6>
 80047ac:	bf00      	nop
 80047ae:	687b      	ldr	r3, [r7, #4]
 80047b0:	681b      	ldr	r3, [r3, #0]
 80047b2:	f003 0302 	and.w	r3, r3, #2
 80047b6:	2b00      	cmp	r3, #0
 80047b8:	d060      	beq.n	800487c <HAL_RCC_OscConfig+0x3c4>
 80047ba:	6a3b      	ldr	r3, [r7, #32]
 80047bc:	2b04      	cmp	r3, #4
 80047be:	d005      	beq.n	80047cc <HAL_RCC_OscConfig+0x314>
 80047c0:	6a3b      	ldr	r3, [r7, #32]
 80047c2:	2b0c      	cmp	r3, #12
 80047c4:	d119      	bne.n	80047fa <HAL_RCC_OscConfig+0x342>
 80047c6:	69fb      	ldr	r3, [r7, #28]
 80047c8:	2b02      	cmp	r3, #2
 80047ca:	d116      	bne.n	80047fa <HAL_RCC_OscConfig+0x342>
 80047cc:	4b6b      	ldr	r3, [pc, #428]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 80047ce:	681b      	ldr	r3, [r3, #0]
 80047d0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80047d4:	2b00      	cmp	r3, #0
 80047d6:	d005      	beq.n	80047e4 <HAL_RCC_OscConfig+0x32c>
 80047d8:	687b      	ldr	r3, [r7, #4]
 80047da:	68db      	ldr	r3, [r3, #12]
 80047dc:	2b00      	cmp	r3, #0
 80047de:	d101      	bne.n	80047e4 <HAL_RCC_OscConfig+0x32c>
 80047e0:	2301      	movs	r3, #1
 80047e2:	e2c2      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 80047e4:	4b65      	ldr	r3, [pc, #404]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 80047e6:	685b      	ldr	r3, [r3, #4]
 80047e8:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 80047ec:	687b      	ldr	r3, [r7, #4]
 80047ee:	691b      	ldr	r3, [r3, #16]
 80047f0:	061b      	lsls	r3, r3, #24
 80047f2:	4962      	ldr	r1, [pc, #392]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 80047f4:	4313      	orrs	r3, r2
 80047f6:	604b      	str	r3, [r1, #4]
 80047f8:	e040      	b.n	800487c <HAL_RCC_OscConfig+0x3c4>
 80047fa:	687b      	ldr	r3, [r7, #4]
 80047fc:	68db      	ldr	r3, [r3, #12]
 80047fe:	2b00      	cmp	r3, #0
 8004800:	d023      	beq.n	800484a <HAL_RCC_OscConfig+0x392>
 8004802:	4b5e      	ldr	r3, [pc, #376]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 8004804:	681b      	ldr	r3, [r3, #0]
 8004806:	4a5d      	ldr	r2, [pc, #372]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 8004808:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800480c:	6013      	str	r3, [r2, #0]
 800480e:	f7fe fb67 	bl	8002ee0 <HAL_GetTick>
 8004812:	61b8      	str	r0, [r7, #24]
 8004814:	e008      	b.n	8004828 <HAL_RCC_OscConfig+0x370>
 8004816:	f7fe fb63 	bl	8002ee0 <HAL_GetTick>
 800481a:	4602      	mov	r2, r0
 800481c:	69bb      	ldr	r3, [r7, #24]
 800481e:	1ad3      	subs	r3, r2, r3
 8004820:	2b02      	cmp	r3, #2
 8004822:	d901      	bls.n	8004828 <HAL_RCC_OscConfig+0x370>
 8004824:	2303      	movs	r3, #3
 8004826:	e2a0      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 8004828:	4b54      	ldr	r3, [pc, #336]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 800482a:	681b      	ldr	r3, [r3, #0]
 800482c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004830:	2b00      	cmp	r3, #0
 8004832:	d0f0      	beq.n	8004816 <HAL_RCC_OscConfig+0x35e>
 8004834:	4b51      	ldr	r3, [pc, #324]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 8004836:	685b      	ldr	r3, [r3, #4]
 8004838:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 800483c:	687b      	ldr	r3, [r7, #4]
 800483e:	691b      	ldr	r3, [r3, #16]
 8004840:	061b      	lsls	r3, r3, #24
 8004842:	494e      	ldr	r1, [pc, #312]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 8004844:	4313      	orrs	r3, r2
 8004846:	604b      	str	r3, [r1, #4]
 8004848:	e018      	b.n	800487c <HAL_RCC_OscConfig+0x3c4>
 800484a:	4b4c      	ldr	r3, [pc, #304]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 800484c:	681b      	ldr	r3, [r3, #0]
 800484e:	4a4b      	ldr	r2, [pc, #300]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 8004850:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004854:	6013      	str	r3, [r2, #0]
 8004856:	f7fe fb43 	bl	8002ee0 <HAL_GetTick>
 800485a:	61b8      	str	r0, [r7, #24]
 800485c:	e008      	b.n	8004870 <HAL_RCC_OscConfig+0x3b8>
 800485e:	f7fe fb3f 	bl	8002ee0 <HAL_GetTick>
 8004862:	4602      	mov	r2, r0
 8004864:	69bb      	ldr	r3, [r7, #24]
 8004866:	1ad3      	subs	r3, r2, r3
 8004868:	2b02      	cmp	r3, #2
 800486a:	d901      	bls.n	8004870 <HAL_RCC_OscConfig+0x3b8>
 800486c:	2303      	movs	r3, #3
 800486e:	e27c      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 8004870:	4b42      	ldr	r3, [pc, #264]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 8004872:	681b      	ldr	r3, [r3, #0]
 8004874:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004878:	2b00      	cmp	r3, #0
 800487a:	d1f0      	bne.n	800485e <HAL_RCC_OscConfig+0x3a6>
 800487c:	687b      	ldr	r3, [r7, #4]
 800487e:	681b      	ldr	r3, [r3, #0]
 8004880:	f003 0308 	and.w	r3, r3, #8
 8004884:	2b00      	cmp	r3, #0
 8004886:	f000 8082 	beq.w	800498e <HAL_RCC_OscConfig+0x4d6>
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	695b      	ldr	r3, [r3, #20]
 800488e:	2b00      	cmp	r3, #0
 8004890:	d05f      	beq.n	8004952 <HAL_RCC_OscConfig+0x49a>
 8004892:	4b3a      	ldr	r3, [pc, #232]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 8004894:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004898:	613b      	str	r3, [r7, #16]
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	699a      	ldr	r2, [r3, #24]
 800489e:	693b      	ldr	r3, [r7, #16]
 80048a0:	f003 0310 	and.w	r3, r3, #16
 80048a4:	429a      	cmp	r2, r3
 80048a6:	d037      	beq.n	8004918 <HAL_RCC_OscConfig+0x460>
 80048a8:	693b      	ldr	r3, [r7, #16]
 80048aa:	f003 0302 	and.w	r3, r3, #2
 80048ae:	2b00      	cmp	r3, #0
 80048b0:	d006      	beq.n	80048c0 <HAL_RCC_OscConfig+0x408>
 80048b2:	693b      	ldr	r3, [r7, #16]
 80048b4:	f003 0301 	and.w	r3, r3, #1
 80048b8:	2b00      	cmp	r3, #0
 80048ba:	d101      	bne.n	80048c0 <HAL_RCC_OscConfig+0x408>
 80048bc:	2301      	movs	r3, #1
 80048be:	e254      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 80048c0:	693b      	ldr	r3, [r7, #16]
 80048c2:	f003 0301 	and.w	r3, r3, #1
 80048c6:	2b00      	cmp	r3, #0
 80048c8:	d01b      	beq.n	8004902 <HAL_RCC_OscConfig+0x44a>
 80048ca:	4b2c      	ldr	r3, [pc, #176]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 80048cc:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80048d0:	4a2a      	ldr	r2, [pc, #168]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 80048d2:	f023 0301 	bic.w	r3, r3, #1
 80048d6:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 80048da:	f7fe fb01 	bl	8002ee0 <HAL_GetTick>
 80048de:	61b8      	str	r0, [r7, #24]
 80048e0:	e008      	b.n	80048f4 <HAL_RCC_OscConfig+0x43c>
 80048e2:	f7fe fafd 	bl	8002ee0 <HAL_GetTick>
 80048e6:	4602      	mov	r2, r0
 80048e8:	69bb      	ldr	r3, [r7, #24]
 80048ea:	1ad3      	subs	r3, r2, r3
 80048ec:	2b11      	cmp	r3, #17
 80048ee:	d901      	bls.n	80048f4 <HAL_RCC_OscConfig+0x43c>
 80048f0:	2303      	movs	r3, #3
 80048f2:	e23a      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 80048f4:	4b21      	ldr	r3, [pc, #132]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 80048f6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80048fa:	f003 0302 	and.w	r3, r3, #2
 80048fe:	2b00      	cmp	r3, #0
 8004900:	d1ef      	bne.n	80048e2 <HAL_RCC_OscConfig+0x42a>
 8004902:	4b1e      	ldr	r3, [pc, #120]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 8004904:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004908:	f023 0210 	bic.w	r2, r3, #16
 800490c:	687b      	ldr	r3, [r7, #4]
 800490e:	699b      	ldr	r3, [r3, #24]
 8004910:	491a      	ldr	r1, [pc, #104]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 8004912:	4313      	orrs	r3, r2
 8004914:	f8c1 3094 	str.w	r3, [r1, #148]	; 0x94
 8004918:	4b18      	ldr	r3, [pc, #96]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 800491a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800491e:	4a17      	ldr	r2, [pc, #92]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 8004920:	f043 0301 	orr.w	r3, r3, #1
 8004924:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 8004928:	f7fe fada 	bl	8002ee0 <HAL_GetTick>
 800492c:	61b8      	str	r0, [r7, #24]
 800492e:	e008      	b.n	8004942 <HAL_RCC_OscConfig+0x48a>
 8004930:	f7fe fad6 	bl	8002ee0 <HAL_GetTick>
 8004934:	4602      	mov	r2, r0
 8004936:	69bb      	ldr	r3, [r7, #24]
 8004938:	1ad3      	subs	r3, r2, r3
 800493a:	2b11      	cmp	r3, #17
 800493c:	d901      	bls.n	8004942 <HAL_RCC_OscConfig+0x48a>
 800493e:	2303      	movs	r3, #3
 8004940:	e213      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 8004942:	4b0e      	ldr	r3, [pc, #56]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 8004944:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004948:	f003 0302 	and.w	r3, r3, #2
 800494c:	2b00      	cmp	r3, #0
 800494e:	d0ef      	beq.n	8004930 <HAL_RCC_OscConfig+0x478>
 8004950:	e01d      	b.n	800498e <HAL_RCC_OscConfig+0x4d6>
 8004952:	4b0a      	ldr	r3, [pc, #40]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 8004954:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004958:	4a08      	ldr	r2, [pc, #32]	; (800497c <HAL_RCC_OscConfig+0x4c4>)
 800495a:	f023 0301 	bic.w	r3, r3, #1
 800495e:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 8004962:	f7fe fabd 	bl	8002ee0 <HAL_GetTick>
 8004966:	61b8      	str	r0, [r7, #24]
 8004968:	e00a      	b.n	8004980 <HAL_RCC_OscConfig+0x4c8>
 800496a:	f7fe fab9 	bl	8002ee0 <HAL_GetTick>
 800496e:	4602      	mov	r2, r0
 8004970:	69bb      	ldr	r3, [r7, #24]
 8004972:	1ad3      	subs	r3, r2, r3
 8004974:	2b11      	cmp	r3, #17
 8004976:	d903      	bls.n	8004980 <HAL_RCC_OscConfig+0x4c8>
 8004978:	2303      	movs	r3, #3
 800497a:	e1f6      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 800497c:	40021000 	.word	0x40021000
 8004980:	4ba9      	ldr	r3, [pc, #676]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004982:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004986:	f003 0302 	and.w	r3, r3, #2
 800498a:	2b00      	cmp	r3, #0
 800498c:	d1ed      	bne.n	800496a <HAL_RCC_OscConfig+0x4b2>
 800498e:	687b      	ldr	r3, [r7, #4]
 8004990:	681b      	ldr	r3, [r3, #0]
 8004992:	f003 0304 	and.w	r3, r3, #4
 8004996:	2b00      	cmp	r3, #0
 8004998:	f000 80bd 	beq.w	8004b16 <HAL_RCC_OscConfig+0x65e>
 800499c:	2300      	movs	r3, #0
 800499e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80049a2:	4ba1      	ldr	r3, [pc, #644]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 80049a4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80049a6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80049aa:	2b00      	cmp	r3, #0
 80049ac:	d10e      	bne.n	80049cc <HAL_RCC_OscConfig+0x514>
 80049ae:	4b9e      	ldr	r3, [pc, #632]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 80049b0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80049b2:	4a9d      	ldr	r2, [pc, #628]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 80049b4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80049b8:	6593      	str	r3, [r2, #88]	; 0x58
 80049ba:	4b9b      	ldr	r3, [pc, #620]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 80049bc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80049be:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80049c2:	60fb      	str	r3, [r7, #12]
 80049c4:	68fb      	ldr	r3, [r7, #12]
 80049c6:	2301      	movs	r3, #1
 80049c8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80049cc:	4b97      	ldr	r3, [pc, #604]	; (8004c2c <HAL_RCC_OscConfig+0x774>)
 80049ce:	681b      	ldr	r3, [r3, #0]
 80049d0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80049d4:	2b00      	cmp	r3, #0
 80049d6:	d118      	bne.n	8004a0a <HAL_RCC_OscConfig+0x552>
 80049d8:	4b94      	ldr	r3, [pc, #592]	; (8004c2c <HAL_RCC_OscConfig+0x774>)
 80049da:	681b      	ldr	r3, [r3, #0]
 80049dc:	4a93      	ldr	r2, [pc, #588]	; (8004c2c <HAL_RCC_OscConfig+0x774>)
 80049de:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80049e2:	6013      	str	r3, [r2, #0]
 80049e4:	f7fe fa7c 	bl	8002ee0 <HAL_GetTick>
 80049e8:	61b8      	str	r0, [r7, #24]
 80049ea:	e008      	b.n	80049fe <HAL_RCC_OscConfig+0x546>
 80049ec:	f7fe fa78 	bl	8002ee0 <HAL_GetTick>
 80049f0:	4602      	mov	r2, r0
 80049f2:	69bb      	ldr	r3, [r7, #24]
 80049f4:	1ad3      	subs	r3, r2, r3
 80049f6:	2b02      	cmp	r3, #2
 80049f8:	d901      	bls.n	80049fe <HAL_RCC_OscConfig+0x546>
 80049fa:	2303      	movs	r3, #3
 80049fc:	e1b5      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 80049fe:	4b8b      	ldr	r3, [pc, #556]	; (8004c2c <HAL_RCC_OscConfig+0x774>)
 8004a00:	681b      	ldr	r3, [r3, #0]
 8004a02:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004a06:	2b00      	cmp	r3, #0
 8004a08:	d0f0      	beq.n	80049ec <HAL_RCC_OscConfig+0x534>
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	689b      	ldr	r3, [r3, #8]
 8004a0e:	f003 0301 	and.w	r3, r3, #1
 8004a12:	2b00      	cmp	r3, #0
 8004a14:	d02c      	beq.n	8004a70 <HAL_RCC_OscConfig+0x5b8>
 8004a16:	4b84      	ldr	r3, [pc, #528]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004a18:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004a1c:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8004a20:	687b      	ldr	r3, [r7, #4]
 8004a22:	689b      	ldr	r3, [r3, #8]
 8004a24:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004a28:	497f      	ldr	r1, [pc, #508]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004a2a:	4313      	orrs	r3, r2
 8004a2c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004a30:	687b      	ldr	r3, [r7, #4]
 8004a32:	689b      	ldr	r3, [r3, #8]
 8004a34:	f003 0304 	and.w	r3, r3, #4
 8004a38:	2b00      	cmp	r3, #0
 8004a3a:	d010      	beq.n	8004a5e <HAL_RCC_OscConfig+0x5a6>
 8004a3c:	4b7a      	ldr	r3, [pc, #488]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004a3e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004a42:	4a79      	ldr	r2, [pc, #484]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004a44:	f043 0304 	orr.w	r3, r3, #4
 8004a48:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004a4c:	4b76      	ldr	r3, [pc, #472]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004a4e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004a52:	4a75      	ldr	r2, [pc, #468]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004a54:	f043 0301 	orr.w	r3, r3, #1
 8004a58:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004a5c:	e018      	b.n	8004a90 <HAL_RCC_OscConfig+0x5d8>
 8004a5e:	4b72      	ldr	r3, [pc, #456]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004a60:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004a64:	4a70      	ldr	r2, [pc, #448]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004a66:	f043 0301 	orr.w	r3, r3, #1
 8004a6a:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004a6e:	e00f      	b.n	8004a90 <HAL_RCC_OscConfig+0x5d8>
 8004a70:	4b6d      	ldr	r3, [pc, #436]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004a72:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004a76:	4a6c      	ldr	r2, [pc, #432]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004a78:	f023 0301 	bic.w	r3, r3, #1
 8004a7c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004a80:	4b69      	ldr	r3, [pc, #420]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004a82:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004a86:	4a68      	ldr	r2, [pc, #416]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004a88:	f023 0304 	bic.w	r3, r3, #4
 8004a8c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004a90:	687b      	ldr	r3, [r7, #4]
 8004a92:	689b      	ldr	r3, [r3, #8]
 8004a94:	2b00      	cmp	r3, #0
 8004a96:	d016      	beq.n	8004ac6 <HAL_RCC_OscConfig+0x60e>
 8004a98:	f7fe fa22 	bl	8002ee0 <HAL_GetTick>
 8004a9c:	61b8      	str	r0, [r7, #24]
 8004a9e:	e00a      	b.n	8004ab6 <HAL_RCC_OscConfig+0x5fe>
 8004aa0:	f7fe fa1e 	bl	8002ee0 <HAL_GetTick>
 8004aa4:	4602      	mov	r2, r0
 8004aa6:	69bb      	ldr	r3, [r7, #24]
 8004aa8:	1ad3      	subs	r3, r2, r3
 8004aaa:	f241 3288 	movw	r2, #5000	; 0x1388
 8004aae:	4293      	cmp	r3, r2
 8004ab0:	d901      	bls.n	8004ab6 <HAL_RCC_OscConfig+0x5fe>
 8004ab2:	2303      	movs	r3, #3
 8004ab4:	e159      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 8004ab6:	4b5c      	ldr	r3, [pc, #368]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004ab8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004abc:	f003 0302 	and.w	r3, r3, #2
 8004ac0:	2b00      	cmp	r3, #0
 8004ac2:	d0ed      	beq.n	8004aa0 <HAL_RCC_OscConfig+0x5e8>
 8004ac4:	e01d      	b.n	8004b02 <HAL_RCC_OscConfig+0x64a>
 8004ac6:	f7fe fa0b 	bl	8002ee0 <HAL_GetTick>
 8004aca:	61b8      	str	r0, [r7, #24]
 8004acc:	e00a      	b.n	8004ae4 <HAL_RCC_OscConfig+0x62c>
 8004ace:	f7fe fa07 	bl	8002ee0 <HAL_GetTick>
 8004ad2:	4602      	mov	r2, r0
 8004ad4:	69bb      	ldr	r3, [r7, #24]
 8004ad6:	1ad3      	subs	r3, r2, r3
 8004ad8:	f241 3288 	movw	r2, #5000	; 0x1388
 8004adc:	4293      	cmp	r3, r2
 8004ade:	d901      	bls.n	8004ae4 <HAL_RCC_OscConfig+0x62c>
 8004ae0:	2303      	movs	r3, #3
 8004ae2:	e142      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 8004ae4:	4b50      	ldr	r3, [pc, #320]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004ae6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004aea:	f003 0302 	and.w	r3, r3, #2
 8004aee:	2b00      	cmp	r3, #0
 8004af0:	d1ed      	bne.n	8004ace <HAL_RCC_OscConfig+0x616>
 8004af2:	4b4d      	ldr	r3, [pc, #308]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004af4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004af8:	4a4b      	ldr	r2, [pc, #300]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004afa:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004afe:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004b02:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8004b06:	2b01      	cmp	r3, #1
 8004b08:	d105      	bne.n	8004b16 <HAL_RCC_OscConfig+0x65e>
 8004b0a:	4b47      	ldr	r3, [pc, #284]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004b0c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004b0e:	4a46      	ldr	r2, [pc, #280]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004b10:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004b14:	6593      	str	r3, [r2, #88]	; 0x58
 8004b16:	687b      	ldr	r3, [r7, #4]
 8004b18:	681b      	ldr	r3, [r3, #0]
 8004b1a:	f003 0320 	and.w	r3, r3, #32
 8004b1e:	2b00      	cmp	r3, #0
 8004b20:	d03c      	beq.n	8004b9c <HAL_RCC_OscConfig+0x6e4>
 8004b22:	687b      	ldr	r3, [r7, #4]
 8004b24:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004b26:	2b00      	cmp	r3, #0
 8004b28:	d01c      	beq.n	8004b64 <HAL_RCC_OscConfig+0x6ac>
 8004b2a:	4b3f      	ldr	r3, [pc, #252]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004b2c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8004b30:	4a3d      	ldr	r2, [pc, #244]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004b32:	f043 0301 	orr.w	r3, r3, #1
 8004b36:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
 8004b3a:	f7fe f9d1 	bl	8002ee0 <HAL_GetTick>
 8004b3e:	61b8      	str	r0, [r7, #24]
 8004b40:	e008      	b.n	8004b54 <HAL_RCC_OscConfig+0x69c>
 8004b42:	f7fe f9cd 	bl	8002ee0 <HAL_GetTick>
 8004b46:	4602      	mov	r2, r0
 8004b48:	69bb      	ldr	r3, [r7, #24]
 8004b4a:	1ad3      	subs	r3, r2, r3
 8004b4c:	2b02      	cmp	r3, #2
 8004b4e:	d901      	bls.n	8004b54 <HAL_RCC_OscConfig+0x69c>
 8004b50:	2303      	movs	r3, #3
 8004b52:	e10a      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 8004b54:	4b34      	ldr	r3, [pc, #208]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004b56:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8004b5a:	f003 0302 	and.w	r3, r3, #2
 8004b5e:	2b00      	cmp	r3, #0
 8004b60:	d0ef      	beq.n	8004b42 <HAL_RCC_OscConfig+0x68a>
 8004b62:	e01b      	b.n	8004b9c <HAL_RCC_OscConfig+0x6e4>
 8004b64:	4b30      	ldr	r3, [pc, #192]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004b66:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8004b6a:	4a2f      	ldr	r2, [pc, #188]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004b6c:	f023 0301 	bic.w	r3, r3, #1
 8004b70:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
 8004b74:	f7fe f9b4 	bl	8002ee0 <HAL_GetTick>
 8004b78:	61b8      	str	r0, [r7, #24]
 8004b7a:	e008      	b.n	8004b8e <HAL_RCC_OscConfig+0x6d6>
 8004b7c:	f7fe f9b0 	bl	8002ee0 <HAL_GetTick>
 8004b80:	4602      	mov	r2, r0
 8004b82:	69bb      	ldr	r3, [r7, #24]
 8004b84:	1ad3      	subs	r3, r2, r3
 8004b86:	2b02      	cmp	r3, #2
 8004b88:	d901      	bls.n	8004b8e <HAL_RCC_OscConfig+0x6d6>
 8004b8a:	2303      	movs	r3, #3
 8004b8c:	e0ed      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 8004b8e:	4b26      	ldr	r3, [pc, #152]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004b90:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8004b94:	f003 0302 	and.w	r3, r3, #2
 8004b98:	2b00      	cmp	r3, #0
 8004b9a:	d1ef      	bne.n	8004b7c <HAL_RCC_OscConfig+0x6c4>
 8004b9c:	687b      	ldr	r3, [r7, #4]
 8004b9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004ba0:	2b00      	cmp	r3, #0
 8004ba2:	f000 80e1 	beq.w	8004d68 <HAL_RCC_OscConfig+0x8b0>
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004baa:	2b02      	cmp	r3, #2
 8004bac:	f040 80b5 	bne.w	8004d1a <HAL_RCC_OscConfig+0x862>
 8004bb0:	4b1d      	ldr	r3, [pc, #116]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004bb2:	68db      	ldr	r3, [r3, #12]
 8004bb4:	61fb      	str	r3, [r7, #28]
 8004bb6:	69fb      	ldr	r3, [r7, #28]
 8004bb8:	f003 0203 	and.w	r2, r3, #3
 8004bbc:	687b      	ldr	r3, [r7, #4]
 8004bbe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004bc0:	429a      	cmp	r2, r3
 8004bc2:	d124      	bne.n	8004c0e <HAL_RCC_OscConfig+0x756>
 8004bc4:	69fb      	ldr	r3, [r7, #28]
 8004bc6:	f003 0270 	and.w	r2, r3, #112	; 0x70
 8004bca:	687b      	ldr	r3, [r7, #4]
 8004bcc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004bce:	3b01      	subs	r3, #1
 8004bd0:	011b      	lsls	r3, r3, #4
 8004bd2:	429a      	cmp	r2, r3
 8004bd4:	d11b      	bne.n	8004c0e <HAL_RCC_OscConfig+0x756>
 8004bd6:	69fb      	ldr	r3, [r7, #28]
 8004bd8:	f403 42fe 	and.w	r2, r3, #32512	; 0x7f00
 8004bdc:	687b      	ldr	r3, [r7, #4]
 8004bde:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004be0:	021b      	lsls	r3, r3, #8
 8004be2:	429a      	cmp	r2, r3
 8004be4:	d113      	bne.n	8004c0e <HAL_RCC_OscConfig+0x756>
 8004be6:	69fb      	ldr	r3, [r7, #28]
 8004be8:	f403 02c0 	and.w	r2, r3, #6291456	; 0x600000
 8004bec:	687b      	ldr	r3, [r7, #4]
 8004bee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004bf0:	085b      	lsrs	r3, r3, #1
 8004bf2:	3b01      	subs	r3, #1
 8004bf4:	055b      	lsls	r3, r3, #21
 8004bf6:	429a      	cmp	r2, r3
 8004bf8:	d109      	bne.n	8004c0e <HAL_RCC_OscConfig+0x756>
 8004bfa:	69fb      	ldr	r3, [r7, #28]
 8004bfc:	f003 62c0 	and.w	r2, r3, #100663296	; 0x6000000
 8004c00:	687b      	ldr	r3, [r7, #4]
 8004c02:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c04:	085b      	lsrs	r3, r3, #1
 8004c06:	3b01      	subs	r3, #1
 8004c08:	065b      	lsls	r3, r3, #25
 8004c0a:	429a      	cmp	r2, r3
 8004c0c:	d05f      	beq.n	8004cce <HAL_RCC_OscConfig+0x816>
 8004c0e:	6a3b      	ldr	r3, [r7, #32]
 8004c10:	2b0c      	cmp	r3, #12
 8004c12:	d05a      	beq.n	8004cca <HAL_RCC_OscConfig+0x812>
 8004c14:	4b04      	ldr	r3, [pc, #16]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	4a03      	ldr	r2, [pc, #12]	; (8004c28 <HAL_RCC_OscConfig+0x770>)
 8004c1a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004c1e:	6013      	str	r3, [r2, #0]
 8004c20:	f7fe f95e 	bl	8002ee0 <HAL_GetTick>
 8004c24:	61b8      	str	r0, [r7, #24]
 8004c26:	e00c      	b.n	8004c42 <HAL_RCC_OscConfig+0x78a>
 8004c28:	40021000 	.word	0x40021000
 8004c2c:	40007000 	.word	0x40007000
 8004c30:	f7fe f956 	bl	8002ee0 <HAL_GetTick>
 8004c34:	4602      	mov	r2, r0
 8004c36:	69bb      	ldr	r3, [r7, #24]
 8004c38:	1ad3      	subs	r3, r2, r3
 8004c3a:	2b02      	cmp	r3, #2
 8004c3c:	d901      	bls.n	8004c42 <HAL_RCC_OscConfig+0x78a>
 8004c3e:	2303      	movs	r3, #3
 8004c40:	e093      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 8004c42:	4b4c      	ldr	r3, [pc, #304]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004c44:	681b      	ldr	r3, [r3, #0]
 8004c46:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004c4a:	2b00      	cmp	r3, #0
 8004c4c:	d1f0      	bne.n	8004c30 <HAL_RCC_OscConfig+0x778>
 8004c4e:	4b49      	ldr	r3, [pc, #292]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004c50:	68da      	ldr	r2, [r3, #12]
 8004c52:	4b49      	ldr	r3, [pc, #292]	; (8004d78 <HAL_RCC_OscConfig+0x8c0>)
 8004c54:	4013      	ands	r3, r2
 8004c56:	687a      	ldr	r2, [r7, #4]
 8004c58:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8004c5a:	687a      	ldr	r2, [r7, #4]
 8004c5c:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8004c5e:	3a01      	subs	r2, #1
 8004c60:	0112      	lsls	r2, r2, #4
 8004c62:	4311      	orrs	r1, r2
 8004c64:	687a      	ldr	r2, [r7, #4]
 8004c66:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8004c68:	0212      	lsls	r2, r2, #8
 8004c6a:	4311      	orrs	r1, r2
 8004c6c:	687a      	ldr	r2, [r7, #4]
 8004c6e:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8004c70:	0852      	lsrs	r2, r2, #1
 8004c72:	3a01      	subs	r2, #1
 8004c74:	0552      	lsls	r2, r2, #21
 8004c76:	4311      	orrs	r1, r2
 8004c78:	687a      	ldr	r2, [r7, #4]
 8004c7a:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8004c7c:	0852      	lsrs	r2, r2, #1
 8004c7e:	3a01      	subs	r2, #1
 8004c80:	0652      	lsls	r2, r2, #25
 8004c82:	430a      	orrs	r2, r1
 8004c84:	493b      	ldr	r1, [pc, #236]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004c86:	4313      	orrs	r3, r2
 8004c88:	60cb      	str	r3, [r1, #12]
 8004c8a:	4b3a      	ldr	r3, [pc, #232]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004c8c:	681b      	ldr	r3, [r3, #0]
 8004c8e:	4a39      	ldr	r2, [pc, #228]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004c90:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004c94:	6013      	str	r3, [r2, #0]
 8004c96:	4b37      	ldr	r3, [pc, #220]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004c98:	68db      	ldr	r3, [r3, #12]
 8004c9a:	4a36      	ldr	r2, [pc, #216]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004c9c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004ca0:	60d3      	str	r3, [r2, #12]
 8004ca2:	f7fe f91d 	bl	8002ee0 <HAL_GetTick>
 8004ca6:	61b8      	str	r0, [r7, #24]
 8004ca8:	e008      	b.n	8004cbc <HAL_RCC_OscConfig+0x804>
 8004caa:	f7fe f919 	bl	8002ee0 <HAL_GetTick>
 8004cae:	4602      	mov	r2, r0
 8004cb0:	69bb      	ldr	r3, [r7, #24]
 8004cb2:	1ad3      	subs	r3, r2, r3
 8004cb4:	2b02      	cmp	r3, #2
 8004cb6:	d901      	bls.n	8004cbc <HAL_RCC_OscConfig+0x804>
 8004cb8:	2303      	movs	r3, #3
 8004cba:	e056      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 8004cbc:	4b2d      	ldr	r3, [pc, #180]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004cbe:	681b      	ldr	r3, [r3, #0]
 8004cc0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004cc4:	2b00      	cmp	r3, #0
 8004cc6:	d0f0      	beq.n	8004caa <HAL_RCC_OscConfig+0x7f2>
 8004cc8:	e04e      	b.n	8004d68 <HAL_RCC_OscConfig+0x8b0>
 8004cca:	2301      	movs	r3, #1
 8004ccc:	e04d      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 8004cce:	4b29      	ldr	r3, [pc, #164]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004cd0:	681b      	ldr	r3, [r3, #0]
 8004cd2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004cd6:	2b00      	cmp	r3, #0
 8004cd8:	d146      	bne.n	8004d68 <HAL_RCC_OscConfig+0x8b0>
 8004cda:	4b26      	ldr	r3, [pc, #152]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004cdc:	681b      	ldr	r3, [r3, #0]
 8004cde:	4a25      	ldr	r2, [pc, #148]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004ce0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004ce4:	6013      	str	r3, [r2, #0]
 8004ce6:	4b23      	ldr	r3, [pc, #140]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004ce8:	68db      	ldr	r3, [r3, #12]
 8004cea:	4a22      	ldr	r2, [pc, #136]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004cec:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004cf0:	60d3      	str	r3, [r2, #12]
 8004cf2:	f7fe f8f5 	bl	8002ee0 <HAL_GetTick>
 8004cf6:	61b8      	str	r0, [r7, #24]
 8004cf8:	e008      	b.n	8004d0c <HAL_RCC_OscConfig+0x854>
 8004cfa:	f7fe f8f1 	bl	8002ee0 <HAL_GetTick>
 8004cfe:	4602      	mov	r2, r0
 8004d00:	69bb      	ldr	r3, [r7, #24]
 8004d02:	1ad3      	subs	r3, r2, r3
 8004d04:	2b02      	cmp	r3, #2
 8004d06:	d901      	bls.n	8004d0c <HAL_RCC_OscConfig+0x854>
 8004d08:	2303      	movs	r3, #3
 8004d0a:	e02e      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 8004d0c:	4b19      	ldr	r3, [pc, #100]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004d0e:	681b      	ldr	r3, [r3, #0]
 8004d10:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004d14:	2b00      	cmp	r3, #0
 8004d16:	d0f0      	beq.n	8004cfa <HAL_RCC_OscConfig+0x842>
 8004d18:	e026      	b.n	8004d68 <HAL_RCC_OscConfig+0x8b0>
 8004d1a:	6a3b      	ldr	r3, [r7, #32]
 8004d1c:	2b0c      	cmp	r3, #12
 8004d1e:	d021      	beq.n	8004d64 <HAL_RCC_OscConfig+0x8ac>
 8004d20:	4b14      	ldr	r3, [pc, #80]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004d22:	681b      	ldr	r3, [r3, #0]
 8004d24:	4a13      	ldr	r2, [pc, #76]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004d26:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004d2a:	6013      	str	r3, [r2, #0]
 8004d2c:	f7fe f8d8 	bl	8002ee0 <HAL_GetTick>
 8004d30:	61b8      	str	r0, [r7, #24]
 8004d32:	e008      	b.n	8004d46 <HAL_RCC_OscConfig+0x88e>
 8004d34:	f7fe f8d4 	bl	8002ee0 <HAL_GetTick>
 8004d38:	4602      	mov	r2, r0
 8004d3a:	69bb      	ldr	r3, [r7, #24]
 8004d3c:	1ad3      	subs	r3, r2, r3
 8004d3e:	2b02      	cmp	r3, #2
 8004d40:	d901      	bls.n	8004d46 <HAL_RCC_OscConfig+0x88e>
 8004d42:	2303      	movs	r3, #3
 8004d44:	e011      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 8004d46:	4b0b      	ldr	r3, [pc, #44]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004d48:	681b      	ldr	r3, [r3, #0]
 8004d4a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004d4e:	2b00      	cmp	r3, #0
 8004d50:	d1f0      	bne.n	8004d34 <HAL_RCC_OscConfig+0x87c>
 8004d52:	4b08      	ldr	r3, [pc, #32]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004d54:	68db      	ldr	r3, [r3, #12]
 8004d56:	4a07      	ldr	r2, [pc, #28]	; (8004d74 <HAL_RCC_OscConfig+0x8bc>)
 8004d58:	f023 7388 	bic.w	r3, r3, #17825792	; 0x1100000
 8004d5c:	f023 0303 	bic.w	r3, r3, #3
 8004d60:	60d3      	str	r3, [r2, #12]
 8004d62:	e001      	b.n	8004d68 <HAL_RCC_OscConfig+0x8b0>
 8004d64:	2301      	movs	r3, #1
 8004d66:	e000      	b.n	8004d6a <HAL_RCC_OscConfig+0x8b2>
 8004d68:	2300      	movs	r3, #0
 8004d6a:	4618      	mov	r0, r3
 8004d6c:	3728      	adds	r7, #40	; 0x28
 8004d6e:	46bd      	mov	sp, r7
 8004d70:	bd80      	pop	{r7, pc}
 8004d72:	bf00      	nop
 8004d74:	40021000 	.word	0x40021000
 8004d78:	f99f808c 	.word	0xf99f808c

08004d7c <HAL_RCC_ClockConfig>:
 8004d7c:	b580      	push	{r7, lr}
 8004d7e:	b084      	sub	sp, #16
 8004d80:	af00      	add	r7, sp, #0
 8004d82:	6078      	str	r0, [r7, #4]
 8004d84:	6039      	str	r1, [r7, #0]
 8004d86:	687b      	ldr	r3, [r7, #4]
 8004d88:	2b00      	cmp	r3, #0
 8004d8a:	d101      	bne.n	8004d90 <HAL_RCC_ClockConfig+0x14>
 8004d8c:	2301      	movs	r3, #1
 8004d8e:	e0e7      	b.n	8004f60 <HAL_RCC_ClockConfig+0x1e4>
 8004d90:	4b75      	ldr	r3, [pc, #468]	; (8004f68 <HAL_RCC_ClockConfig+0x1ec>)
 8004d92:	681b      	ldr	r3, [r3, #0]
 8004d94:	f003 0307 	and.w	r3, r3, #7
 8004d98:	683a      	ldr	r2, [r7, #0]
 8004d9a:	429a      	cmp	r2, r3
 8004d9c:	d910      	bls.n	8004dc0 <HAL_RCC_ClockConfig+0x44>
 8004d9e:	4b72      	ldr	r3, [pc, #456]	; (8004f68 <HAL_RCC_ClockConfig+0x1ec>)
 8004da0:	681b      	ldr	r3, [r3, #0]
 8004da2:	f023 0207 	bic.w	r2, r3, #7
 8004da6:	4970      	ldr	r1, [pc, #448]	; (8004f68 <HAL_RCC_ClockConfig+0x1ec>)
 8004da8:	683b      	ldr	r3, [r7, #0]
 8004daa:	4313      	orrs	r3, r2
 8004dac:	600b      	str	r3, [r1, #0]
 8004dae:	4b6e      	ldr	r3, [pc, #440]	; (8004f68 <HAL_RCC_ClockConfig+0x1ec>)
 8004db0:	681b      	ldr	r3, [r3, #0]
 8004db2:	f003 0307 	and.w	r3, r3, #7
 8004db6:	683a      	ldr	r2, [r7, #0]
 8004db8:	429a      	cmp	r2, r3
 8004dba:	d001      	beq.n	8004dc0 <HAL_RCC_ClockConfig+0x44>
 8004dbc:	2301      	movs	r3, #1
 8004dbe:	e0cf      	b.n	8004f60 <HAL_RCC_ClockConfig+0x1e4>
 8004dc0:	687b      	ldr	r3, [r7, #4]
 8004dc2:	681b      	ldr	r3, [r3, #0]
 8004dc4:	f003 0302 	and.w	r3, r3, #2
 8004dc8:	2b00      	cmp	r3, #0
 8004dca:	d010      	beq.n	8004dee <HAL_RCC_ClockConfig+0x72>
 8004dcc:	687b      	ldr	r3, [r7, #4]
 8004dce:	689a      	ldr	r2, [r3, #8]
 8004dd0:	4b66      	ldr	r3, [pc, #408]	; (8004f6c <HAL_RCC_ClockConfig+0x1f0>)
 8004dd2:	689b      	ldr	r3, [r3, #8]
 8004dd4:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004dd8:	429a      	cmp	r2, r3
 8004dda:	d908      	bls.n	8004dee <HAL_RCC_ClockConfig+0x72>
 8004ddc:	4b63      	ldr	r3, [pc, #396]	; (8004f6c <HAL_RCC_ClockConfig+0x1f0>)
 8004dde:	689b      	ldr	r3, [r3, #8]
 8004de0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004de4:	687b      	ldr	r3, [r7, #4]
 8004de6:	689b      	ldr	r3, [r3, #8]
 8004de8:	4960      	ldr	r1, [pc, #384]	; (8004f6c <HAL_RCC_ClockConfig+0x1f0>)
 8004dea:	4313      	orrs	r3, r2
 8004dec:	608b      	str	r3, [r1, #8]
 8004dee:	687b      	ldr	r3, [r7, #4]
 8004df0:	681b      	ldr	r3, [r3, #0]
 8004df2:	f003 0301 	and.w	r3, r3, #1
 8004df6:	2b00      	cmp	r3, #0
 8004df8:	d04c      	beq.n	8004e94 <HAL_RCC_ClockConfig+0x118>
 8004dfa:	687b      	ldr	r3, [r7, #4]
 8004dfc:	685b      	ldr	r3, [r3, #4]
 8004dfe:	2b03      	cmp	r3, #3
 8004e00:	d107      	bne.n	8004e12 <HAL_RCC_ClockConfig+0x96>
 8004e02:	4b5a      	ldr	r3, [pc, #360]	; (8004f6c <HAL_RCC_ClockConfig+0x1f0>)
 8004e04:	681b      	ldr	r3, [r3, #0]
 8004e06:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004e0a:	2b00      	cmp	r3, #0
 8004e0c:	d121      	bne.n	8004e52 <HAL_RCC_ClockConfig+0xd6>
 8004e0e:	2301      	movs	r3, #1
 8004e10:	e0a6      	b.n	8004f60 <HAL_RCC_ClockConfig+0x1e4>
 8004e12:	687b      	ldr	r3, [r7, #4]
 8004e14:	685b      	ldr	r3, [r3, #4]
 8004e16:	2b02      	cmp	r3, #2
 8004e18:	d107      	bne.n	8004e2a <HAL_RCC_ClockConfig+0xae>
 8004e1a:	4b54      	ldr	r3, [pc, #336]	; (8004f6c <HAL_RCC_ClockConfig+0x1f0>)
 8004e1c:	681b      	ldr	r3, [r3, #0]
 8004e1e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004e22:	2b00      	cmp	r3, #0
 8004e24:	d115      	bne.n	8004e52 <HAL_RCC_ClockConfig+0xd6>
 8004e26:	2301      	movs	r3, #1
 8004e28:	e09a      	b.n	8004f60 <HAL_RCC_ClockConfig+0x1e4>
 8004e2a:	687b      	ldr	r3, [r7, #4]
 8004e2c:	685b      	ldr	r3, [r3, #4]
 8004e2e:	2b00      	cmp	r3, #0
 8004e30:	d107      	bne.n	8004e42 <HAL_RCC_ClockConfig+0xc6>
 8004e32:	4b4e      	ldr	r3, [pc, #312]	; (8004f6c <HAL_RCC_ClockConfig+0x1f0>)
 8004e34:	681b      	ldr	r3, [r3, #0]
 8004e36:	f003 0302 	and.w	r3, r3, #2
 8004e3a:	2b00      	cmp	r3, #0
 8004e3c:	d109      	bne.n	8004e52 <HAL_RCC_ClockConfig+0xd6>
 8004e3e:	2301      	movs	r3, #1
 8004e40:	e08e      	b.n	8004f60 <HAL_RCC_ClockConfig+0x1e4>
 8004e42:	4b4a      	ldr	r3, [pc, #296]	; (8004f6c <HAL_RCC_ClockConfig+0x1f0>)
 8004e44:	681b      	ldr	r3, [r3, #0]
 8004e46:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004e4a:	2b00      	cmp	r3, #0
 8004e4c:	d101      	bne.n	8004e52 <HAL_RCC_ClockConfig+0xd6>
 8004e4e:	2301      	movs	r3, #1
 8004e50:	e086      	b.n	8004f60 <HAL_RCC_ClockConfig+0x1e4>
 8004e52:	4b46      	ldr	r3, [pc, #280]	; (8004f6c <HAL_RCC_ClockConfig+0x1f0>)
 8004e54:	689b      	ldr	r3, [r3, #8]
 8004e56:	f023 0203 	bic.w	r2, r3, #3
 8004e5a:	687b      	ldr	r3, [r7, #4]
 8004e5c:	685b      	ldr	r3, [r3, #4]
 8004e5e:	4943      	ldr	r1, [pc, #268]	; (8004f6c <HAL_RCC_ClockConfig+0x1f0>)
 8004e60:	4313      	orrs	r3, r2
 8004e62:	608b      	str	r3, [r1, #8]
 8004e64:	f7fe f83c 	bl	8002ee0 <HAL_GetTick>
 8004e68:	60f8      	str	r0, [r7, #12]
 8004e6a:	e00a      	b.n	8004e82 <HAL_RCC_ClockConfig+0x106>
 8004e6c:	f7fe f838 	bl	8002ee0 <HAL_GetTick>
 8004e70:	4602      	mov	r2, r0
 8004e72:	68fb      	ldr	r3, [r7, #12]
 8004e74:	1ad3      	subs	r3, r2, r3
 8004e76:	f241 3288 	movw	r2, #5000	; 0x1388
 8004e7a:	4293      	cmp	r3, r2
 8004e7c:	d901      	bls.n	8004e82 <HAL_RCC_ClockConfig+0x106>
 8004e7e:	2303      	movs	r3, #3
 8004e80:	e06e      	b.n	8004f60 <HAL_RCC_ClockConfig+0x1e4>
 8004e82:	4b3a      	ldr	r3, [pc, #232]	; (8004f6c <HAL_RCC_ClockConfig+0x1f0>)
 8004e84:	689b      	ldr	r3, [r3, #8]
 8004e86:	f003 020c 	and.w	r2, r3, #12
 8004e8a:	687b      	ldr	r3, [r7, #4]
 8004e8c:	685b      	ldr	r3, [r3, #4]
 8004e8e:	009b      	lsls	r3, r3, #2
 8004e90:	429a      	cmp	r2, r3
 8004e92:	d1eb      	bne.n	8004e6c <HAL_RCC_ClockConfig+0xf0>
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	681b      	ldr	r3, [r3, #0]
 8004e98:	f003 0302 	and.w	r3, r3, #2
 8004e9c:	2b00      	cmp	r3, #0
 8004e9e:	d010      	beq.n	8004ec2 <HAL_RCC_ClockConfig+0x146>
 8004ea0:	687b      	ldr	r3, [r7, #4]
 8004ea2:	689a      	ldr	r2, [r3, #8]
 8004ea4:	4b31      	ldr	r3, [pc, #196]	; (8004f6c <HAL_RCC_ClockConfig+0x1f0>)
 8004ea6:	689b      	ldr	r3, [r3, #8]
 8004ea8:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004eac:	429a      	cmp	r2, r3
 8004eae:	d208      	bcs.n	8004ec2 <HAL_RCC_ClockConfig+0x146>
 8004eb0:	4b2e      	ldr	r3, [pc, #184]	; (8004f6c <HAL_RCC_ClockConfig+0x1f0>)
 8004eb2:	689b      	ldr	r3, [r3, #8]
 8004eb4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004eb8:	687b      	ldr	r3, [r7, #4]
 8004eba:	689b      	ldr	r3, [r3, #8]
 8004ebc:	492b      	ldr	r1, [pc, #172]	; (8004f6c <HAL_RCC_ClockConfig+0x1f0>)
 8004ebe:	4313      	orrs	r3, r2
 8004ec0:	608b      	str	r3, [r1, #8]
 8004ec2:	4b29      	ldr	r3, [pc, #164]	; (8004f68 <HAL_RCC_ClockConfig+0x1ec>)
 8004ec4:	681b      	ldr	r3, [r3, #0]
 8004ec6:	f003 0307 	and.w	r3, r3, #7
 8004eca:	683a      	ldr	r2, [r7, #0]
 8004ecc:	429a      	cmp	r2, r3
 8004ece:	d210      	bcs.n	8004ef2 <HAL_RCC_ClockConfig+0x176>
 8004ed0:	4b25      	ldr	r3, [pc, #148]	; (8004f68 <HAL_RCC_ClockConfig+0x1ec>)
 8004ed2:	681b      	ldr	r3, [r3, #0]
 8004ed4:	f023 0207 	bic.w	r2, r3, #7
 8004ed8:	4923      	ldr	r1, [pc, #140]	; (8004f68 <HAL_RCC_ClockConfig+0x1ec>)
 8004eda:	683b      	ldr	r3, [r7, #0]
 8004edc:	4313      	orrs	r3, r2
 8004ede:	600b      	str	r3, [r1, #0]
 8004ee0:	4b21      	ldr	r3, [pc, #132]	; (8004f68 <HAL_RCC_ClockConfig+0x1ec>)
 8004ee2:	681b      	ldr	r3, [r3, #0]
 8004ee4:	f003 0307 	and.w	r3, r3, #7
 8004ee8:	683a      	ldr	r2, [r7, #0]
 8004eea:	429a      	cmp	r2, r3
 8004eec:	d001      	beq.n	8004ef2 <HAL_RCC_ClockConfig+0x176>
 8004eee:	2301      	movs	r3, #1
 8004ef0:	e036      	b.n	8004f60 <HAL_RCC_ClockConfig+0x1e4>
 8004ef2:	687b      	ldr	r3, [r7, #4]
 8004ef4:	681b      	ldr	r3, [r3, #0]
 8004ef6:	f003 0304 	and.w	r3, r3, #4
 8004efa:	2b00      	cmp	r3, #0
 8004efc:	d008      	beq.n	8004f10 <HAL_RCC_ClockConfig+0x194>
 8004efe:	4b1b      	ldr	r3, [pc, #108]	; (8004f6c <HAL_RCC_ClockConfig+0x1f0>)
 8004f00:	689b      	ldr	r3, [r3, #8]
 8004f02:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8004f06:	687b      	ldr	r3, [r7, #4]
 8004f08:	68db      	ldr	r3, [r3, #12]
 8004f0a:	4918      	ldr	r1, [pc, #96]	; (8004f6c <HAL_RCC_ClockConfig+0x1f0>)
 8004f0c:	4313      	orrs	r3, r2
 8004f0e:	608b      	str	r3, [r1, #8]
 8004f10:	687b      	ldr	r3, [r7, #4]
 8004f12:	681b      	ldr	r3, [r3, #0]
 8004f14:	f003 0308 	and.w	r3, r3, #8
 8004f18:	2b00      	cmp	r3, #0
 8004f1a:	d009      	beq.n	8004f30 <HAL_RCC_ClockConfig+0x1b4>
 8004f1c:	4b13      	ldr	r3, [pc, #76]	; (8004f6c <HAL_RCC_ClockConfig+0x1f0>)
 8004f1e:	689b      	ldr	r3, [r3, #8]
 8004f20:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8004f24:	687b      	ldr	r3, [r7, #4]
 8004f26:	691b      	ldr	r3, [r3, #16]
 8004f28:	00db      	lsls	r3, r3, #3
 8004f2a:	4910      	ldr	r1, [pc, #64]	; (8004f6c <HAL_RCC_ClockConfig+0x1f0>)
 8004f2c:	4313      	orrs	r3, r2
 8004f2e:	608b      	str	r3, [r1, #8]
 8004f30:	f000 f824 	bl	8004f7c <HAL_RCC_GetSysClockFreq>
 8004f34:	4602      	mov	r2, r0
 8004f36:	4b0d      	ldr	r3, [pc, #52]	; (8004f6c <HAL_RCC_ClockConfig+0x1f0>)
 8004f38:	689b      	ldr	r3, [r3, #8]
 8004f3a:	091b      	lsrs	r3, r3, #4
 8004f3c:	f003 030f 	and.w	r3, r3, #15
 8004f40:	490b      	ldr	r1, [pc, #44]	; (8004f70 <HAL_RCC_ClockConfig+0x1f4>)
 8004f42:	5ccb      	ldrb	r3, [r1, r3]
 8004f44:	f003 031f 	and.w	r3, r3, #31
 8004f48:	fa22 f303 	lsr.w	r3, r2, r3
 8004f4c:	4a09      	ldr	r2, [pc, #36]	; (8004f74 <HAL_RCC_ClockConfig+0x1f8>)
 8004f4e:	6013      	str	r3, [r2, #0]
 8004f50:	4b09      	ldr	r3, [pc, #36]	; (8004f78 <HAL_RCC_ClockConfig+0x1fc>)
 8004f52:	681b      	ldr	r3, [r3, #0]
 8004f54:	4618      	mov	r0, r3
 8004f56:	f7fd ff73 	bl	8002e40 <HAL_InitTick>
 8004f5a:	4603      	mov	r3, r0
 8004f5c:	72fb      	strb	r3, [r7, #11]
 8004f5e:	7afb      	ldrb	r3, [r7, #11]
 8004f60:	4618      	mov	r0, r3
 8004f62:	3710      	adds	r7, #16
 8004f64:	46bd      	mov	sp, r7
 8004f66:	bd80      	pop	{r7, pc}
 8004f68:	40022000 	.word	0x40022000
 8004f6c:	40021000 	.word	0x40021000
 8004f70:	0800bcc8 	.word	0x0800bcc8
 8004f74:	2000001c 	.word	0x2000001c
 8004f78:	20000020 	.word	0x20000020

08004f7c <HAL_RCC_GetSysClockFreq>:
 8004f7c:	b480      	push	{r7}
 8004f7e:	b089      	sub	sp, #36	; 0x24
 8004f80:	af00      	add	r7, sp, #0
 8004f82:	2300      	movs	r3, #0
 8004f84:	61fb      	str	r3, [r7, #28]
 8004f86:	2300      	movs	r3, #0
 8004f88:	61bb      	str	r3, [r7, #24]
 8004f8a:	4b3e      	ldr	r3, [pc, #248]	; (8005084 <HAL_RCC_GetSysClockFreq+0x108>)
 8004f8c:	689b      	ldr	r3, [r3, #8]
 8004f8e:	f003 030c 	and.w	r3, r3, #12
 8004f92:	613b      	str	r3, [r7, #16]
 8004f94:	4b3b      	ldr	r3, [pc, #236]	; (8005084 <HAL_RCC_GetSysClockFreq+0x108>)
 8004f96:	68db      	ldr	r3, [r3, #12]
 8004f98:	f003 0303 	and.w	r3, r3, #3
 8004f9c:	60fb      	str	r3, [r7, #12]
 8004f9e:	693b      	ldr	r3, [r7, #16]
 8004fa0:	2b00      	cmp	r3, #0
 8004fa2:	d005      	beq.n	8004fb0 <HAL_RCC_GetSysClockFreq+0x34>
 8004fa4:	693b      	ldr	r3, [r7, #16]
 8004fa6:	2b0c      	cmp	r3, #12
 8004fa8:	d121      	bne.n	8004fee <HAL_RCC_GetSysClockFreq+0x72>
 8004faa:	68fb      	ldr	r3, [r7, #12]
 8004fac:	2b01      	cmp	r3, #1
 8004fae:	d11e      	bne.n	8004fee <HAL_RCC_GetSysClockFreq+0x72>
 8004fb0:	4b34      	ldr	r3, [pc, #208]	; (8005084 <HAL_RCC_GetSysClockFreq+0x108>)
 8004fb2:	681b      	ldr	r3, [r3, #0]
 8004fb4:	f003 0308 	and.w	r3, r3, #8
 8004fb8:	2b00      	cmp	r3, #0
 8004fba:	d107      	bne.n	8004fcc <HAL_RCC_GetSysClockFreq+0x50>
 8004fbc:	4b31      	ldr	r3, [pc, #196]	; (8005084 <HAL_RCC_GetSysClockFreq+0x108>)
 8004fbe:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004fc2:	0a1b      	lsrs	r3, r3, #8
 8004fc4:	f003 030f 	and.w	r3, r3, #15
 8004fc8:	61fb      	str	r3, [r7, #28]
 8004fca:	e005      	b.n	8004fd8 <HAL_RCC_GetSysClockFreq+0x5c>
 8004fcc:	4b2d      	ldr	r3, [pc, #180]	; (8005084 <HAL_RCC_GetSysClockFreq+0x108>)
 8004fce:	681b      	ldr	r3, [r3, #0]
 8004fd0:	091b      	lsrs	r3, r3, #4
 8004fd2:	f003 030f 	and.w	r3, r3, #15
 8004fd6:	61fb      	str	r3, [r7, #28]
 8004fd8:	4a2b      	ldr	r2, [pc, #172]	; (8005088 <HAL_RCC_GetSysClockFreq+0x10c>)
 8004fda:	69fb      	ldr	r3, [r7, #28]
 8004fdc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004fe0:	61fb      	str	r3, [r7, #28]
 8004fe2:	693b      	ldr	r3, [r7, #16]
 8004fe4:	2b00      	cmp	r3, #0
 8004fe6:	d10d      	bne.n	8005004 <HAL_RCC_GetSysClockFreq+0x88>
 8004fe8:	69fb      	ldr	r3, [r7, #28]
 8004fea:	61bb      	str	r3, [r7, #24]
 8004fec:	e00a      	b.n	8005004 <HAL_RCC_GetSysClockFreq+0x88>
 8004fee:	693b      	ldr	r3, [r7, #16]
 8004ff0:	2b04      	cmp	r3, #4
 8004ff2:	d102      	bne.n	8004ffa <HAL_RCC_GetSysClockFreq+0x7e>
 8004ff4:	4b25      	ldr	r3, [pc, #148]	; (800508c <HAL_RCC_GetSysClockFreq+0x110>)
 8004ff6:	61bb      	str	r3, [r7, #24]
 8004ff8:	e004      	b.n	8005004 <HAL_RCC_GetSysClockFreq+0x88>
 8004ffa:	693b      	ldr	r3, [r7, #16]
 8004ffc:	2b08      	cmp	r3, #8
 8004ffe:	d101      	bne.n	8005004 <HAL_RCC_GetSysClockFreq+0x88>
 8005000:	4b23      	ldr	r3, [pc, #140]	; (8005090 <HAL_RCC_GetSysClockFreq+0x114>)
 8005002:	61bb      	str	r3, [r7, #24]
 8005004:	693b      	ldr	r3, [r7, #16]
 8005006:	2b0c      	cmp	r3, #12
 8005008:	d134      	bne.n	8005074 <HAL_RCC_GetSysClockFreq+0xf8>
 800500a:	4b1e      	ldr	r3, [pc, #120]	; (8005084 <HAL_RCC_GetSysClockFreq+0x108>)
 800500c:	68db      	ldr	r3, [r3, #12]
 800500e:	f003 0303 	and.w	r3, r3, #3
 8005012:	60bb      	str	r3, [r7, #8]
 8005014:	68bb      	ldr	r3, [r7, #8]
 8005016:	2b02      	cmp	r3, #2
 8005018:	d003      	beq.n	8005022 <HAL_RCC_GetSysClockFreq+0xa6>
 800501a:	68bb      	ldr	r3, [r7, #8]
 800501c:	2b03      	cmp	r3, #3
 800501e:	d003      	beq.n	8005028 <HAL_RCC_GetSysClockFreq+0xac>
 8005020:	e005      	b.n	800502e <HAL_RCC_GetSysClockFreq+0xb2>
 8005022:	4b1a      	ldr	r3, [pc, #104]	; (800508c <HAL_RCC_GetSysClockFreq+0x110>)
 8005024:	617b      	str	r3, [r7, #20]
 8005026:	e005      	b.n	8005034 <HAL_RCC_GetSysClockFreq+0xb8>
 8005028:	4b19      	ldr	r3, [pc, #100]	; (8005090 <HAL_RCC_GetSysClockFreq+0x114>)
 800502a:	617b      	str	r3, [r7, #20]
 800502c:	e002      	b.n	8005034 <HAL_RCC_GetSysClockFreq+0xb8>
 800502e:	69fb      	ldr	r3, [r7, #28]
 8005030:	617b      	str	r3, [r7, #20]
 8005032:	bf00      	nop
 8005034:	4b13      	ldr	r3, [pc, #76]	; (8005084 <HAL_RCC_GetSysClockFreq+0x108>)
 8005036:	68db      	ldr	r3, [r3, #12]
 8005038:	091b      	lsrs	r3, r3, #4
 800503a:	f003 0307 	and.w	r3, r3, #7
 800503e:	3301      	adds	r3, #1
 8005040:	607b      	str	r3, [r7, #4]
 8005042:	4b10      	ldr	r3, [pc, #64]	; (8005084 <HAL_RCC_GetSysClockFreq+0x108>)
 8005044:	68db      	ldr	r3, [r3, #12]
 8005046:	0a1b      	lsrs	r3, r3, #8
 8005048:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800504c:	697a      	ldr	r2, [r7, #20]
 800504e:	fb03 f202 	mul.w	r2, r3, r2
 8005052:	687b      	ldr	r3, [r7, #4]
 8005054:	fbb2 f3f3 	udiv	r3, r2, r3
 8005058:	617b      	str	r3, [r7, #20]
 800505a:	4b0a      	ldr	r3, [pc, #40]	; (8005084 <HAL_RCC_GetSysClockFreq+0x108>)
 800505c:	68db      	ldr	r3, [r3, #12]
 800505e:	0e5b      	lsrs	r3, r3, #25
 8005060:	f003 0303 	and.w	r3, r3, #3
 8005064:	3301      	adds	r3, #1
 8005066:	005b      	lsls	r3, r3, #1
 8005068:	603b      	str	r3, [r7, #0]
 800506a:	697a      	ldr	r2, [r7, #20]
 800506c:	683b      	ldr	r3, [r7, #0]
 800506e:	fbb2 f3f3 	udiv	r3, r2, r3
 8005072:	61bb      	str	r3, [r7, #24]
 8005074:	69bb      	ldr	r3, [r7, #24]
 8005076:	4618      	mov	r0, r3
 8005078:	3724      	adds	r7, #36	; 0x24
 800507a:	46bd      	mov	sp, r7
 800507c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005080:	4770      	bx	lr
 8005082:	bf00      	nop
 8005084:	40021000 	.word	0x40021000
 8005088:	0800bce0 	.word	0x0800bce0
 800508c:	00f42400 	.word	0x00f42400
 8005090:	007a1200 	.word	0x007a1200

08005094 <HAL_RCC_GetHCLKFreq>:
 8005094:	b480      	push	{r7}
 8005096:	af00      	add	r7, sp, #0
 8005098:	4b03      	ldr	r3, [pc, #12]	; (80050a8 <HAL_RCC_GetHCLKFreq+0x14>)
 800509a:	681b      	ldr	r3, [r3, #0]
 800509c:	4618      	mov	r0, r3
 800509e:	46bd      	mov	sp, r7
 80050a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050a4:	4770      	bx	lr
 80050a6:	bf00      	nop
 80050a8:	2000001c 	.word	0x2000001c

080050ac <HAL_RCC_GetPCLK1Freq>:
 80050ac:	b580      	push	{r7, lr}
 80050ae:	af00      	add	r7, sp, #0
 80050b0:	f7ff fff0 	bl	8005094 <HAL_RCC_GetHCLKFreq>
 80050b4:	4602      	mov	r2, r0
 80050b6:	4b06      	ldr	r3, [pc, #24]	; (80050d0 <HAL_RCC_GetPCLK1Freq+0x24>)
 80050b8:	689b      	ldr	r3, [r3, #8]
 80050ba:	0a1b      	lsrs	r3, r3, #8
 80050bc:	f003 0307 	and.w	r3, r3, #7
 80050c0:	4904      	ldr	r1, [pc, #16]	; (80050d4 <HAL_RCC_GetPCLK1Freq+0x28>)
 80050c2:	5ccb      	ldrb	r3, [r1, r3]
 80050c4:	f003 031f 	and.w	r3, r3, #31
 80050c8:	fa22 f303 	lsr.w	r3, r2, r3
 80050cc:	4618      	mov	r0, r3
 80050ce:	bd80      	pop	{r7, pc}
 80050d0:	40021000 	.word	0x40021000
 80050d4:	0800bcd8 	.word	0x0800bcd8

080050d8 <HAL_RCC_GetPCLK2Freq>:
 80050d8:	b580      	push	{r7, lr}
 80050da:	af00      	add	r7, sp, #0
 80050dc:	f7ff ffda 	bl	8005094 <HAL_RCC_GetHCLKFreq>
 80050e0:	4602      	mov	r2, r0
 80050e2:	4b06      	ldr	r3, [pc, #24]	; (80050fc <HAL_RCC_GetPCLK2Freq+0x24>)
 80050e4:	689b      	ldr	r3, [r3, #8]
 80050e6:	0adb      	lsrs	r3, r3, #11
 80050e8:	f003 0307 	and.w	r3, r3, #7
 80050ec:	4904      	ldr	r1, [pc, #16]	; (8005100 <HAL_RCC_GetPCLK2Freq+0x28>)
 80050ee:	5ccb      	ldrb	r3, [r1, r3]
 80050f0:	f003 031f 	and.w	r3, r3, #31
 80050f4:	fa22 f303 	lsr.w	r3, r2, r3
 80050f8:	4618      	mov	r0, r3
 80050fa:	bd80      	pop	{r7, pc}
 80050fc:	40021000 	.word	0x40021000
 8005100:	0800bcd8 	.word	0x0800bcd8

08005104 <RCC_SetFlashLatencyFromMSIRange>:
 8005104:	b580      	push	{r7, lr}
 8005106:	b086      	sub	sp, #24
 8005108:	af00      	add	r7, sp, #0
 800510a:	6078      	str	r0, [r7, #4]
 800510c:	2300      	movs	r3, #0
 800510e:	613b      	str	r3, [r7, #16]
 8005110:	4b2a      	ldr	r3, [pc, #168]	; (80051bc <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8005112:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005114:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005118:	2b00      	cmp	r3, #0
 800511a:	d003      	beq.n	8005124 <RCC_SetFlashLatencyFromMSIRange+0x20>
 800511c:	f7ff f968 	bl	80043f0 <HAL_PWREx_GetVoltageRange>
 8005120:	6178      	str	r0, [r7, #20]
 8005122:	e014      	b.n	800514e <RCC_SetFlashLatencyFromMSIRange+0x4a>
 8005124:	4b25      	ldr	r3, [pc, #148]	; (80051bc <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8005126:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005128:	4a24      	ldr	r2, [pc, #144]	; (80051bc <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800512a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800512e:	6593      	str	r3, [r2, #88]	; 0x58
 8005130:	4b22      	ldr	r3, [pc, #136]	; (80051bc <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8005132:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005134:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005138:	60fb      	str	r3, [r7, #12]
 800513a:	68fb      	ldr	r3, [r7, #12]
 800513c:	f7ff f958 	bl	80043f0 <HAL_PWREx_GetVoltageRange>
 8005140:	6178      	str	r0, [r7, #20]
 8005142:	4b1e      	ldr	r3, [pc, #120]	; (80051bc <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8005144:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005146:	4a1d      	ldr	r2, [pc, #116]	; (80051bc <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8005148:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800514c:	6593      	str	r3, [r2, #88]	; 0x58
 800514e:	697b      	ldr	r3, [r7, #20]
 8005150:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8005154:	d10b      	bne.n	800516e <RCC_SetFlashLatencyFromMSIRange+0x6a>
 8005156:	687b      	ldr	r3, [r7, #4]
 8005158:	2b80      	cmp	r3, #128	; 0x80
 800515a:	d919      	bls.n	8005190 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800515c:	687b      	ldr	r3, [r7, #4]
 800515e:	2ba0      	cmp	r3, #160	; 0xa0
 8005160:	d902      	bls.n	8005168 <RCC_SetFlashLatencyFromMSIRange+0x64>
 8005162:	2302      	movs	r3, #2
 8005164:	613b      	str	r3, [r7, #16]
 8005166:	e013      	b.n	8005190 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8005168:	2301      	movs	r3, #1
 800516a:	613b      	str	r3, [r7, #16]
 800516c:	e010      	b.n	8005190 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800516e:	687b      	ldr	r3, [r7, #4]
 8005170:	2b80      	cmp	r3, #128	; 0x80
 8005172:	d902      	bls.n	800517a <RCC_SetFlashLatencyFromMSIRange+0x76>
 8005174:	2303      	movs	r3, #3
 8005176:	613b      	str	r3, [r7, #16]
 8005178:	e00a      	b.n	8005190 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800517a:	687b      	ldr	r3, [r7, #4]
 800517c:	2b80      	cmp	r3, #128	; 0x80
 800517e:	d102      	bne.n	8005186 <RCC_SetFlashLatencyFromMSIRange+0x82>
 8005180:	2302      	movs	r3, #2
 8005182:	613b      	str	r3, [r7, #16]
 8005184:	e004      	b.n	8005190 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8005186:	687b      	ldr	r3, [r7, #4]
 8005188:	2b70      	cmp	r3, #112	; 0x70
 800518a:	d101      	bne.n	8005190 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800518c:	2301      	movs	r3, #1
 800518e:	613b      	str	r3, [r7, #16]
 8005190:	4b0b      	ldr	r3, [pc, #44]	; (80051c0 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8005192:	681b      	ldr	r3, [r3, #0]
 8005194:	f023 0207 	bic.w	r2, r3, #7
 8005198:	4909      	ldr	r1, [pc, #36]	; (80051c0 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 800519a:	693b      	ldr	r3, [r7, #16]
 800519c:	4313      	orrs	r3, r2
 800519e:	600b      	str	r3, [r1, #0]
 80051a0:	4b07      	ldr	r3, [pc, #28]	; (80051c0 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80051a2:	681b      	ldr	r3, [r3, #0]
 80051a4:	f003 0307 	and.w	r3, r3, #7
 80051a8:	693a      	ldr	r2, [r7, #16]
 80051aa:	429a      	cmp	r2, r3
 80051ac:	d001      	beq.n	80051b2 <RCC_SetFlashLatencyFromMSIRange+0xae>
 80051ae:	2301      	movs	r3, #1
 80051b0:	e000      	b.n	80051b4 <RCC_SetFlashLatencyFromMSIRange+0xb0>
 80051b2:	2300      	movs	r3, #0
 80051b4:	4618      	mov	r0, r3
 80051b6:	3718      	adds	r7, #24
 80051b8:	46bd      	mov	sp, r7
 80051ba:	bd80      	pop	{r7, pc}
 80051bc:	40021000 	.word	0x40021000
 80051c0:	40022000 	.word	0x40022000

080051c4 <HAL_RCCEx_PeriphCLKConfig>:
 80051c4:	b580      	push	{r7, lr}
 80051c6:	b086      	sub	sp, #24
 80051c8:	af00      	add	r7, sp, #0
 80051ca:	6078      	str	r0, [r7, #4]
 80051cc:	2300      	movs	r3, #0
 80051ce:	74fb      	strb	r3, [r7, #19]
 80051d0:	2300      	movs	r3, #0
 80051d2:	74bb      	strb	r3, [r7, #18]
 80051d4:	687b      	ldr	r3, [r7, #4]
 80051d6:	681b      	ldr	r3, [r3, #0]
 80051d8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80051dc:	2b00      	cmp	r3, #0
 80051de:	f000 809e 	beq.w	800531e <HAL_RCCEx_PeriphCLKConfig+0x15a>
 80051e2:	2300      	movs	r3, #0
 80051e4:	747b      	strb	r3, [r7, #17]
 80051e6:	4b46      	ldr	r3, [pc, #280]	; (8005300 <HAL_RCCEx_PeriphCLKConfig+0x13c>)
 80051e8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80051ea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80051ee:	2b00      	cmp	r3, #0
 80051f0:	d101      	bne.n	80051f6 <HAL_RCCEx_PeriphCLKConfig+0x32>
 80051f2:	2301      	movs	r3, #1
 80051f4:	e000      	b.n	80051f8 <HAL_RCCEx_PeriphCLKConfig+0x34>
 80051f6:	2300      	movs	r3, #0
 80051f8:	2b00      	cmp	r3, #0
 80051fa:	d00d      	beq.n	8005218 <HAL_RCCEx_PeriphCLKConfig+0x54>
 80051fc:	4b40      	ldr	r3, [pc, #256]	; (8005300 <HAL_RCCEx_PeriphCLKConfig+0x13c>)
 80051fe:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005200:	4a3f      	ldr	r2, [pc, #252]	; (8005300 <HAL_RCCEx_PeriphCLKConfig+0x13c>)
 8005202:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005206:	6593      	str	r3, [r2, #88]	; 0x58
 8005208:	4b3d      	ldr	r3, [pc, #244]	; (8005300 <HAL_RCCEx_PeriphCLKConfig+0x13c>)
 800520a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800520c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005210:	60bb      	str	r3, [r7, #8]
 8005212:	68bb      	ldr	r3, [r7, #8]
 8005214:	2301      	movs	r3, #1
 8005216:	747b      	strb	r3, [r7, #17]
 8005218:	4b3a      	ldr	r3, [pc, #232]	; (8005304 <HAL_RCCEx_PeriphCLKConfig+0x140>)
 800521a:	681b      	ldr	r3, [r3, #0]
 800521c:	4a39      	ldr	r2, [pc, #228]	; (8005304 <HAL_RCCEx_PeriphCLKConfig+0x140>)
 800521e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005222:	6013      	str	r3, [r2, #0]
 8005224:	f7fd fe5c 	bl	8002ee0 <HAL_GetTick>
 8005228:	60f8      	str	r0, [r7, #12]
 800522a:	e009      	b.n	8005240 <HAL_RCCEx_PeriphCLKConfig+0x7c>
 800522c:	f7fd fe58 	bl	8002ee0 <HAL_GetTick>
 8005230:	4602      	mov	r2, r0
 8005232:	68fb      	ldr	r3, [r7, #12]
 8005234:	1ad3      	subs	r3, r2, r3
 8005236:	2b02      	cmp	r3, #2
 8005238:	d902      	bls.n	8005240 <HAL_RCCEx_PeriphCLKConfig+0x7c>
 800523a:	2303      	movs	r3, #3
 800523c:	74fb      	strb	r3, [r7, #19]
 800523e:	e005      	b.n	800524c <HAL_RCCEx_PeriphCLKConfig+0x88>
 8005240:	4b30      	ldr	r3, [pc, #192]	; (8005304 <HAL_RCCEx_PeriphCLKConfig+0x140>)
 8005242:	681b      	ldr	r3, [r3, #0]
 8005244:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005248:	2b00      	cmp	r3, #0
 800524a:	d0ef      	beq.n	800522c <HAL_RCCEx_PeriphCLKConfig+0x68>
 800524c:	7cfb      	ldrb	r3, [r7, #19]
 800524e:	2b00      	cmp	r3, #0
 8005250:	d15a      	bne.n	8005308 <HAL_RCCEx_PeriphCLKConfig+0x144>
 8005252:	4b2b      	ldr	r3, [pc, #172]	; (8005300 <HAL_RCCEx_PeriphCLKConfig+0x13c>)
 8005254:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005258:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800525c:	617b      	str	r3, [r7, #20]
 800525e:	697b      	ldr	r3, [r7, #20]
 8005260:	2b00      	cmp	r3, #0
 8005262:	d01e      	beq.n	80052a2 <HAL_RCCEx_PeriphCLKConfig+0xde>
 8005264:	687b      	ldr	r3, [r7, #4]
 8005266:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005268:	697a      	ldr	r2, [r7, #20]
 800526a:	429a      	cmp	r2, r3
 800526c:	d019      	beq.n	80052a2 <HAL_RCCEx_PeriphCLKConfig+0xde>
 800526e:	4b24      	ldr	r3, [pc, #144]	; (8005300 <HAL_RCCEx_PeriphCLKConfig+0x13c>)
 8005270:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005274:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005278:	617b      	str	r3, [r7, #20]
 800527a:	4b21      	ldr	r3, [pc, #132]	; (8005300 <HAL_RCCEx_PeriphCLKConfig+0x13c>)
 800527c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005280:	4a1f      	ldr	r2, [pc, #124]	; (8005300 <HAL_RCCEx_PeriphCLKConfig+0x13c>)
 8005282:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005286:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800528a:	4b1d      	ldr	r3, [pc, #116]	; (8005300 <HAL_RCCEx_PeriphCLKConfig+0x13c>)
 800528c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005290:	4a1b      	ldr	r2, [pc, #108]	; (8005300 <HAL_RCCEx_PeriphCLKConfig+0x13c>)
 8005292:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005296:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800529a:	4a19      	ldr	r2, [pc, #100]	; (8005300 <HAL_RCCEx_PeriphCLKConfig+0x13c>)
 800529c:	697b      	ldr	r3, [r7, #20]
 800529e:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 80052a2:	697b      	ldr	r3, [r7, #20]
 80052a4:	f003 0301 	and.w	r3, r3, #1
 80052a8:	2b00      	cmp	r3, #0
 80052aa:	d016      	beq.n	80052da <HAL_RCCEx_PeriphCLKConfig+0x116>
 80052ac:	f7fd fe18 	bl	8002ee0 <HAL_GetTick>
 80052b0:	60f8      	str	r0, [r7, #12]
 80052b2:	e00b      	b.n	80052cc <HAL_RCCEx_PeriphCLKConfig+0x108>
 80052b4:	f7fd fe14 	bl	8002ee0 <HAL_GetTick>
 80052b8:	4602      	mov	r2, r0
 80052ba:	68fb      	ldr	r3, [r7, #12]
 80052bc:	1ad3      	subs	r3, r2, r3
 80052be:	f241 3288 	movw	r2, #5000	; 0x1388
 80052c2:	4293      	cmp	r3, r2
 80052c4:	d902      	bls.n	80052cc <HAL_RCCEx_PeriphCLKConfig+0x108>
 80052c6:	2303      	movs	r3, #3
 80052c8:	74fb      	strb	r3, [r7, #19]
 80052ca:	e006      	b.n	80052da <HAL_RCCEx_PeriphCLKConfig+0x116>
 80052cc:	4b0c      	ldr	r3, [pc, #48]	; (8005300 <HAL_RCCEx_PeriphCLKConfig+0x13c>)
 80052ce:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80052d2:	f003 0302 	and.w	r3, r3, #2
 80052d6:	2b00      	cmp	r3, #0
 80052d8:	d0ec      	beq.n	80052b4 <HAL_RCCEx_PeriphCLKConfig+0xf0>
 80052da:	7cfb      	ldrb	r3, [r7, #19]
 80052dc:	2b00      	cmp	r3, #0
 80052de:	d10b      	bne.n	80052f8 <HAL_RCCEx_PeriphCLKConfig+0x134>
 80052e0:	4b07      	ldr	r3, [pc, #28]	; (8005300 <HAL_RCCEx_PeriphCLKConfig+0x13c>)
 80052e2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80052e6:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 80052ea:	687b      	ldr	r3, [r7, #4]
 80052ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80052ee:	4904      	ldr	r1, [pc, #16]	; (8005300 <HAL_RCCEx_PeriphCLKConfig+0x13c>)
 80052f0:	4313      	orrs	r3, r2
 80052f2:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80052f6:	e009      	b.n	800530c <HAL_RCCEx_PeriphCLKConfig+0x148>
 80052f8:	7cfb      	ldrb	r3, [r7, #19]
 80052fa:	74bb      	strb	r3, [r7, #18]
 80052fc:	e006      	b.n	800530c <HAL_RCCEx_PeriphCLKConfig+0x148>
 80052fe:	bf00      	nop
 8005300:	40021000 	.word	0x40021000
 8005304:	40007000 	.word	0x40007000
 8005308:	7cfb      	ldrb	r3, [r7, #19]
 800530a:	74bb      	strb	r3, [r7, #18]
 800530c:	7c7b      	ldrb	r3, [r7, #17]
 800530e:	2b01      	cmp	r3, #1
 8005310:	d105      	bne.n	800531e <HAL_RCCEx_PeriphCLKConfig+0x15a>
 8005312:	4b6e      	ldr	r3, [pc, #440]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 8005314:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005316:	4a6d      	ldr	r2, [pc, #436]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 8005318:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800531c:	6593      	str	r3, [r2, #88]	; 0x58
 800531e:	687b      	ldr	r3, [r7, #4]
 8005320:	681b      	ldr	r3, [r3, #0]
 8005322:	f003 0301 	and.w	r3, r3, #1
 8005326:	2b00      	cmp	r3, #0
 8005328:	d00a      	beq.n	8005340 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 800532a:	4b68      	ldr	r3, [pc, #416]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 800532c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005330:	f023 0203 	bic.w	r2, r3, #3
 8005334:	687b      	ldr	r3, [r7, #4]
 8005336:	685b      	ldr	r3, [r3, #4]
 8005338:	4964      	ldr	r1, [pc, #400]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 800533a:	4313      	orrs	r3, r2
 800533c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005340:	687b      	ldr	r3, [r7, #4]
 8005342:	681b      	ldr	r3, [r3, #0]
 8005344:	f003 0302 	and.w	r3, r3, #2
 8005348:	2b00      	cmp	r3, #0
 800534a:	d00a      	beq.n	8005362 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 800534c:	4b5f      	ldr	r3, [pc, #380]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 800534e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005352:	f023 020c 	bic.w	r2, r3, #12
 8005356:	687b      	ldr	r3, [r7, #4]
 8005358:	689b      	ldr	r3, [r3, #8]
 800535a:	495c      	ldr	r1, [pc, #368]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 800535c:	4313      	orrs	r3, r2
 800535e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005362:	687b      	ldr	r3, [r7, #4]
 8005364:	681b      	ldr	r3, [r3, #0]
 8005366:	f003 0304 	and.w	r3, r3, #4
 800536a:	2b00      	cmp	r3, #0
 800536c:	d00a      	beq.n	8005384 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
 800536e:	4b57      	ldr	r3, [pc, #348]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 8005370:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005374:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8005378:	687b      	ldr	r3, [r7, #4]
 800537a:	68db      	ldr	r3, [r3, #12]
 800537c:	4953      	ldr	r1, [pc, #332]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 800537e:	4313      	orrs	r3, r2
 8005380:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005384:	687b      	ldr	r3, [r7, #4]
 8005386:	681b      	ldr	r3, [r3, #0]
 8005388:	f003 0320 	and.w	r3, r3, #32
 800538c:	2b00      	cmp	r3, #0
 800538e:	d00a      	beq.n	80053a6 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 8005390:	4b4e      	ldr	r3, [pc, #312]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 8005392:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005396:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 800539a:	687b      	ldr	r3, [r7, #4]
 800539c:	691b      	ldr	r3, [r3, #16]
 800539e:	494b      	ldr	r1, [pc, #300]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 80053a0:	4313      	orrs	r3, r2
 80053a2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80053a6:	687b      	ldr	r3, [r7, #4]
 80053a8:	681b      	ldr	r3, [r3, #0]
 80053aa:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80053ae:	2b00      	cmp	r3, #0
 80053b0:	d00a      	beq.n	80053c8 <HAL_RCCEx_PeriphCLKConfig+0x204>
 80053b2:	4b46      	ldr	r3, [pc, #280]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 80053b4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80053b8:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 80053bc:	687b      	ldr	r3, [r7, #4]
 80053be:	6a1b      	ldr	r3, [r3, #32]
 80053c0:	4942      	ldr	r1, [pc, #264]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 80053c2:	4313      	orrs	r3, r2
 80053c4:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80053c8:	687b      	ldr	r3, [r7, #4]
 80053ca:	681b      	ldr	r3, [r3, #0]
 80053cc:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80053d0:	2b00      	cmp	r3, #0
 80053d2:	d00a      	beq.n	80053ea <HAL_RCCEx_PeriphCLKConfig+0x226>
 80053d4:	4b3d      	ldr	r3, [pc, #244]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 80053d6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80053da:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 80053de:	687b      	ldr	r3, [r7, #4]
 80053e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053e2:	493a      	ldr	r1, [pc, #232]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 80053e4:	4313      	orrs	r3, r2
 80053e6:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80053ea:	687b      	ldr	r3, [r7, #4]
 80053ec:	681b      	ldr	r3, [r3, #0]
 80053ee:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80053f2:	2b00      	cmp	r3, #0
 80053f4:	d00a      	beq.n	800540c <HAL_RCCEx_PeriphCLKConfig+0x248>
 80053f6:	4b35      	ldr	r3, [pc, #212]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 80053f8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80053fc:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8005400:	687b      	ldr	r3, [r7, #4]
 8005402:	695b      	ldr	r3, [r3, #20]
 8005404:	4931      	ldr	r1, [pc, #196]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 8005406:	4313      	orrs	r3, r2
 8005408:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800540c:	687b      	ldr	r3, [r7, #4]
 800540e:	681b      	ldr	r3, [r3, #0]
 8005410:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005414:	2b00      	cmp	r3, #0
 8005416:	d00a      	beq.n	800542e <HAL_RCCEx_PeriphCLKConfig+0x26a>
 8005418:	4b2c      	ldr	r3, [pc, #176]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 800541a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800541e:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8005422:	687b      	ldr	r3, [r7, #4]
 8005424:	699b      	ldr	r3, [r3, #24]
 8005426:	4929      	ldr	r1, [pc, #164]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 8005428:	4313      	orrs	r3, r2
 800542a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800542e:	687b      	ldr	r3, [r7, #4]
 8005430:	681b      	ldr	r3, [r3, #0]
 8005432:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005436:	2b00      	cmp	r3, #0
 8005438:	d00a      	beq.n	8005450 <HAL_RCCEx_PeriphCLKConfig+0x28c>
 800543a:	4b24      	ldr	r3, [pc, #144]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 800543c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005440:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8005444:	687b      	ldr	r3, [r7, #4]
 8005446:	69db      	ldr	r3, [r3, #28]
 8005448:	4920      	ldr	r1, [pc, #128]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 800544a:	4313      	orrs	r3, r2
 800544c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005450:	687b      	ldr	r3, [r7, #4]
 8005452:	681b      	ldr	r3, [r3, #0]
 8005454:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8005458:	2b00      	cmp	r3, #0
 800545a:	d015      	beq.n	8005488 <HAL_RCCEx_PeriphCLKConfig+0x2c4>
 800545c:	4b1b      	ldr	r3, [pc, #108]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 800545e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005462:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8005466:	687b      	ldr	r3, [r7, #4]
 8005468:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800546a:	4918      	ldr	r1, [pc, #96]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 800546c:	4313      	orrs	r3, r2
 800546e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005472:	687b      	ldr	r3, [r7, #4]
 8005474:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005476:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800547a:	d105      	bne.n	8005488 <HAL_RCCEx_PeriphCLKConfig+0x2c4>
 800547c:	4b13      	ldr	r3, [pc, #76]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 800547e:	68db      	ldr	r3, [r3, #12]
 8005480:	4a12      	ldr	r2, [pc, #72]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 8005482:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8005486:	60d3      	str	r3, [r2, #12]
 8005488:	687b      	ldr	r3, [r7, #4]
 800548a:	681b      	ldr	r3, [r3, #0]
 800548c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8005490:	2b00      	cmp	r3, #0
 8005492:	d015      	beq.n	80054c0 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 8005494:	4b0d      	ldr	r3, [pc, #52]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 8005496:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800549a:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 800549e:	687b      	ldr	r3, [r7, #4]
 80054a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80054a2:	490a      	ldr	r1, [pc, #40]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 80054a4:	4313      	orrs	r3, r2
 80054a6:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80054aa:	687b      	ldr	r3, [r7, #4]
 80054ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80054ae:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80054b2:	d105      	bne.n	80054c0 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 80054b4:	4b05      	ldr	r3, [pc, #20]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 80054b6:	68db      	ldr	r3, [r3, #12]
 80054b8:	4a04      	ldr	r2, [pc, #16]	; (80054cc <HAL_RCCEx_PeriphCLKConfig+0x308>)
 80054ba:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80054be:	60d3      	str	r3, [r2, #12]
 80054c0:	7cbb      	ldrb	r3, [r7, #18]
 80054c2:	4618      	mov	r0, r3
 80054c4:	3718      	adds	r7, #24
 80054c6:	46bd      	mov	sp, r7
 80054c8:	bd80      	pop	{r7, pc}
 80054ca:	bf00      	nop
 80054cc:	40021000 	.word	0x40021000

080054d0 <HAL_UART_Init>:
 80054d0:	b580      	push	{r7, lr}
 80054d2:	b082      	sub	sp, #8
 80054d4:	af00      	add	r7, sp, #0
 80054d6:	6078      	str	r0, [r7, #4]
 80054d8:	687b      	ldr	r3, [r7, #4]
 80054da:	2b00      	cmp	r3, #0
 80054dc:	d101      	bne.n	80054e2 <HAL_UART_Init+0x12>
 80054de:	2301      	movs	r3, #1
 80054e0:	e040      	b.n	8005564 <HAL_UART_Init+0x94>
 80054e2:	687b      	ldr	r3, [r7, #4]
 80054e4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80054e6:	2b00      	cmp	r3, #0
 80054e8:	d106      	bne.n	80054f8 <HAL_UART_Init+0x28>
 80054ea:	687b      	ldr	r3, [r7, #4]
 80054ec:	2200      	movs	r2, #0
 80054ee:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 80054f2:	6878      	ldr	r0, [r7, #4]
 80054f4:	f7fd faee 	bl	8002ad4 <HAL_UART_MspInit>
 80054f8:	687b      	ldr	r3, [r7, #4]
 80054fa:	2224      	movs	r2, #36	; 0x24
 80054fc:	67da      	str	r2, [r3, #124]	; 0x7c
 80054fe:	687b      	ldr	r3, [r7, #4]
 8005500:	681b      	ldr	r3, [r3, #0]
 8005502:	681a      	ldr	r2, [r3, #0]
 8005504:	687b      	ldr	r3, [r7, #4]
 8005506:	681b      	ldr	r3, [r3, #0]
 8005508:	f022 0201 	bic.w	r2, r2, #1
 800550c:	601a      	str	r2, [r3, #0]
 800550e:	687b      	ldr	r3, [r7, #4]
 8005510:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005512:	2b00      	cmp	r3, #0
 8005514:	d002      	beq.n	800551c <HAL_UART_Init+0x4c>
 8005516:	6878      	ldr	r0, [r7, #4]
 8005518:	f000 fdd8 	bl	80060cc <UART_AdvFeatureConfig>
 800551c:	6878      	ldr	r0, [r7, #4]
 800551e:	f000 fb7b 	bl	8005c18 <UART_SetConfig>
 8005522:	4603      	mov	r3, r0
 8005524:	2b01      	cmp	r3, #1
 8005526:	d101      	bne.n	800552c <HAL_UART_Init+0x5c>
 8005528:	2301      	movs	r3, #1
 800552a:	e01b      	b.n	8005564 <HAL_UART_Init+0x94>
 800552c:	687b      	ldr	r3, [r7, #4]
 800552e:	681b      	ldr	r3, [r3, #0]
 8005530:	685a      	ldr	r2, [r3, #4]
 8005532:	687b      	ldr	r3, [r7, #4]
 8005534:	681b      	ldr	r3, [r3, #0]
 8005536:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800553a:	605a      	str	r2, [r3, #4]
 800553c:	687b      	ldr	r3, [r7, #4]
 800553e:	681b      	ldr	r3, [r3, #0]
 8005540:	689a      	ldr	r2, [r3, #8]
 8005542:	687b      	ldr	r3, [r7, #4]
 8005544:	681b      	ldr	r3, [r3, #0]
 8005546:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800554a:	609a      	str	r2, [r3, #8]
 800554c:	687b      	ldr	r3, [r7, #4]
 800554e:	681b      	ldr	r3, [r3, #0]
 8005550:	681a      	ldr	r2, [r3, #0]
 8005552:	687b      	ldr	r3, [r7, #4]
 8005554:	681b      	ldr	r3, [r3, #0]
 8005556:	f042 0201 	orr.w	r2, r2, #1
 800555a:	601a      	str	r2, [r3, #0]
 800555c:	6878      	ldr	r0, [r7, #4]
 800555e:	f000 fe57 	bl	8006210 <UART_CheckIdleState>
 8005562:	4603      	mov	r3, r0
 8005564:	4618      	mov	r0, r3
 8005566:	3708      	adds	r7, #8
 8005568:	46bd      	mov	sp, r7
 800556a:	bd80      	pop	{r7, pc}

0800556c <HAL_UART_Receive_IT>:
 800556c:	b580      	push	{r7, lr}
 800556e:	b08a      	sub	sp, #40	; 0x28
 8005570:	af00      	add	r7, sp, #0
 8005572:	60f8      	str	r0, [r7, #12]
 8005574:	60b9      	str	r1, [r7, #8]
 8005576:	4613      	mov	r3, r2
 8005578:	80fb      	strh	r3, [r7, #6]
 800557a:	68fb      	ldr	r3, [r7, #12]
 800557c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8005580:	2b20      	cmp	r3, #32
 8005582:	d137      	bne.n	80055f4 <HAL_UART_Receive_IT+0x88>
 8005584:	68bb      	ldr	r3, [r7, #8]
 8005586:	2b00      	cmp	r3, #0
 8005588:	d002      	beq.n	8005590 <HAL_UART_Receive_IT+0x24>
 800558a:	88fb      	ldrh	r3, [r7, #6]
 800558c:	2b00      	cmp	r3, #0
 800558e:	d101      	bne.n	8005594 <HAL_UART_Receive_IT+0x28>
 8005590:	2301      	movs	r3, #1
 8005592:	e030      	b.n	80055f6 <HAL_UART_Receive_IT+0x8a>
 8005594:	68fb      	ldr	r3, [r7, #12]
 8005596:	2200      	movs	r2, #0
 8005598:	661a      	str	r2, [r3, #96]	; 0x60
 800559a:	68fb      	ldr	r3, [r7, #12]
 800559c:	681b      	ldr	r3, [r3, #0]
 800559e:	4a18      	ldr	r2, [pc, #96]	; (8005600 <HAL_UART_Receive_IT+0x94>)
 80055a0:	4293      	cmp	r3, r2
 80055a2:	d01f      	beq.n	80055e4 <HAL_UART_Receive_IT+0x78>
 80055a4:	68fb      	ldr	r3, [r7, #12]
 80055a6:	681b      	ldr	r3, [r3, #0]
 80055a8:	685b      	ldr	r3, [r3, #4]
 80055aa:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80055ae:	2b00      	cmp	r3, #0
 80055b0:	d018      	beq.n	80055e4 <HAL_UART_Receive_IT+0x78>
 80055b2:	68fb      	ldr	r3, [r7, #12]
 80055b4:	681b      	ldr	r3, [r3, #0]
 80055b6:	617b      	str	r3, [r7, #20]
 80055b8:	697b      	ldr	r3, [r7, #20]
 80055ba:	e853 3f00 	ldrex	r3, [r3]
 80055be:	613b      	str	r3, [r7, #16]
 80055c0:	693b      	ldr	r3, [r7, #16]
 80055c2:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80055c6:	627b      	str	r3, [r7, #36]	; 0x24
 80055c8:	68fb      	ldr	r3, [r7, #12]
 80055ca:	681b      	ldr	r3, [r3, #0]
 80055cc:	461a      	mov	r2, r3
 80055ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80055d0:	623b      	str	r3, [r7, #32]
 80055d2:	61fa      	str	r2, [r7, #28]
 80055d4:	69f9      	ldr	r1, [r7, #28]
 80055d6:	6a3a      	ldr	r2, [r7, #32]
 80055d8:	e841 2300 	strex	r3, r2, [r1]
 80055dc:	61bb      	str	r3, [r7, #24]
 80055de:	69bb      	ldr	r3, [r7, #24]
 80055e0:	2b00      	cmp	r3, #0
 80055e2:	d1e6      	bne.n	80055b2 <HAL_UART_Receive_IT+0x46>
 80055e4:	88fb      	ldrh	r3, [r7, #6]
 80055e6:	461a      	mov	r2, r3
 80055e8:	68b9      	ldr	r1, [r7, #8]
 80055ea:	68f8      	ldr	r0, [r7, #12]
 80055ec:	f000 ff20 	bl	8006430 <UART_Start_Receive_IT>
 80055f0:	4603      	mov	r3, r0
 80055f2:	e000      	b.n	80055f6 <HAL_UART_Receive_IT+0x8a>
 80055f4:	2302      	movs	r3, #2
 80055f6:	4618      	mov	r0, r3
 80055f8:	3728      	adds	r7, #40	; 0x28
 80055fa:	46bd      	mov	sp, r7
 80055fc:	bd80      	pop	{r7, pc}
 80055fe:	bf00      	nop
 8005600:	40008000 	.word	0x40008000

08005604 <HAL_UART_IRQHandler>:
 8005604:	b580      	push	{r7, lr}
 8005606:	b0ba      	sub	sp, #232	; 0xe8
 8005608:	af00      	add	r7, sp, #0
 800560a:	6078      	str	r0, [r7, #4]
 800560c:	687b      	ldr	r3, [r7, #4]
 800560e:	681b      	ldr	r3, [r3, #0]
 8005610:	69db      	ldr	r3, [r3, #28]
 8005612:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8005616:	687b      	ldr	r3, [r7, #4]
 8005618:	681b      	ldr	r3, [r3, #0]
 800561a:	681b      	ldr	r3, [r3, #0]
 800561c:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8005620:	687b      	ldr	r3, [r7, #4]
 8005622:	681b      	ldr	r3, [r3, #0]
 8005624:	689b      	ldr	r3, [r3, #8]
 8005626:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800562a:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 800562e:	f640 030f 	movw	r3, #2063	; 0x80f
 8005632:	4013      	ands	r3, r2
 8005634:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8005638:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800563c:	2b00      	cmp	r3, #0
 800563e:	d115      	bne.n	800566c <HAL_UART_IRQHandler+0x68>
 8005640:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005644:	f003 0320 	and.w	r3, r3, #32
 8005648:	2b00      	cmp	r3, #0
 800564a:	d00f      	beq.n	800566c <HAL_UART_IRQHandler+0x68>
 800564c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8005650:	f003 0320 	and.w	r3, r3, #32
 8005654:	2b00      	cmp	r3, #0
 8005656:	d009      	beq.n	800566c <HAL_UART_IRQHandler+0x68>
 8005658:	687b      	ldr	r3, [r7, #4]
 800565a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800565c:	2b00      	cmp	r3, #0
 800565e:	f000 82ae 	beq.w	8005bbe <HAL_UART_IRQHandler+0x5ba>
 8005662:	687b      	ldr	r3, [r7, #4]
 8005664:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8005666:	6878      	ldr	r0, [r7, #4]
 8005668:	4798      	blx	r3
 800566a:	e2a8      	b.n	8005bbe <HAL_UART_IRQHandler+0x5ba>
 800566c:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8005670:	2b00      	cmp	r3, #0
 8005672:	f000 8117 	beq.w	80058a4 <HAL_UART_IRQHandler+0x2a0>
 8005676:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800567a:	f003 0301 	and.w	r3, r3, #1
 800567e:	2b00      	cmp	r3, #0
 8005680:	d106      	bne.n	8005690 <HAL_UART_IRQHandler+0x8c>
 8005682:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 8005686:	4b85      	ldr	r3, [pc, #532]	; (800589c <HAL_UART_IRQHandler+0x298>)
 8005688:	4013      	ands	r3, r2
 800568a:	2b00      	cmp	r3, #0
 800568c:	f000 810a 	beq.w	80058a4 <HAL_UART_IRQHandler+0x2a0>
 8005690:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005694:	f003 0301 	and.w	r3, r3, #1
 8005698:	2b00      	cmp	r3, #0
 800569a:	d011      	beq.n	80056c0 <HAL_UART_IRQHandler+0xbc>
 800569c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80056a0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80056a4:	2b00      	cmp	r3, #0
 80056a6:	d00b      	beq.n	80056c0 <HAL_UART_IRQHandler+0xbc>
 80056a8:	687b      	ldr	r3, [r7, #4]
 80056aa:	681b      	ldr	r3, [r3, #0]
 80056ac:	2201      	movs	r2, #1
 80056ae:	621a      	str	r2, [r3, #32]
 80056b0:	687b      	ldr	r3, [r7, #4]
 80056b2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80056b6:	f043 0201 	orr.w	r2, r3, #1
 80056ba:	687b      	ldr	r3, [r7, #4]
 80056bc:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 80056c0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80056c4:	f003 0302 	and.w	r3, r3, #2
 80056c8:	2b00      	cmp	r3, #0
 80056ca:	d011      	beq.n	80056f0 <HAL_UART_IRQHandler+0xec>
 80056cc:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80056d0:	f003 0301 	and.w	r3, r3, #1
 80056d4:	2b00      	cmp	r3, #0
 80056d6:	d00b      	beq.n	80056f0 <HAL_UART_IRQHandler+0xec>
 80056d8:	687b      	ldr	r3, [r7, #4]
 80056da:	681b      	ldr	r3, [r3, #0]
 80056dc:	2202      	movs	r2, #2
 80056de:	621a      	str	r2, [r3, #32]
 80056e0:	687b      	ldr	r3, [r7, #4]
 80056e2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80056e6:	f043 0204 	orr.w	r2, r3, #4
 80056ea:	687b      	ldr	r3, [r7, #4]
 80056ec:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 80056f0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80056f4:	f003 0304 	and.w	r3, r3, #4
 80056f8:	2b00      	cmp	r3, #0
 80056fa:	d011      	beq.n	8005720 <HAL_UART_IRQHandler+0x11c>
 80056fc:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8005700:	f003 0301 	and.w	r3, r3, #1
 8005704:	2b00      	cmp	r3, #0
 8005706:	d00b      	beq.n	8005720 <HAL_UART_IRQHandler+0x11c>
 8005708:	687b      	ldr	r3, [r7, #4]
 800570a:	681b      	ldr	r3, [r3, #0]
 800570c:	2204      	movs	r2, #4
 800570e:	621a      	str	r2, [r3, #32]
 8005710:	687b      	ldr	r3, [r7, #4]
 8005712:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005716:	f043 0202 	orr.w	r2, r3, #2
 800571a:	687b      	ldr	r3, [r7, #4]
 800571c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8005720:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005724:	f003 0308 	and.w	r3, r3, #8
 8005728:	2b00      	cmp	r3, #0
 800572a:	d017      	beq.n	800575c <HAL_UART_IRQHandler+0x158>
 800572c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8005730:	f003 0320 	and.w	r3, r3, #32
 8005734:	2b00      	cmp	r3, #0
 8005736:	d105      	bne.n	8005744 <HAL_UART_IRQHandler+0x140>
 8005738:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800573c:	f003 0301 	and.w	r3, r3, #1
 8005740:	2b00      	cmp	r3, #0
 8005742:	d00b      	beq.n	800575c <HAL_UART_IRQHandler+0x158>
 8005744:	687b      	ldr	r3, [r7, #4]
 8005746:	681b      	ldr	r3, [r3, #0]
 8005748:	2208      	movs	r2, #8
 800574a:	621a      	str	r2, [r3, #32]
 800574c:	687b      	ldr	r3, [r7, #4]
 800574e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005752:	f043 0208 	orr.w	r2, r3, #8
 8005756:	687b      	ldr	r3, [r7, #4]
 8005758:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800575c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005760:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8005764:	2b00      	cmp	r3, #0
 8005766:	d012      	beq.n	800578e <HAL_UART_IRQHandler+0x18a>
 8005768:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800576c:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8005770:	2b00      	cmp	r3, #0
 8005772:	d00c      	beq.n	800578e <HAL_UART_IRQHandler+0x18a>
 8005774:	687b      	ldr	r3, [r7, #4]
 8005776:	681b      	ldr	r3, [r3, #0]
 8005778:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800577c:	621a      	str	r2, [r3, #32]
 800577e:	687b      	ldr	r3, [r7, #4]
 8005780:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005784:	f043 0220 	orr.w	r2, r3, #32
 8005788:	687b      	ldr	r3, [r7, #4]
 800578a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800578e:	687b      	ldr	r3, [r7, #4]
 8005790:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005794:	2b00      	cmp	r3, #0
 8005796:	f000 8214 	beq.w	8005bc2 <HAL_UART_IRQHandler+0x5be>
 800579a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800579e:	f003 0320 	and.w	r3, r3, #32
 80057a2:	2b00      	cmp	r3, #0
 80057a4:	d00d      	beq.n	80057c2 <HAL_UART_IRQHandler+0x1be>
 80057a6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80057aa:	f003 0320 	and.w	r3, r3, #32
 80057ae:	2b00      	cmp	r3, #0
 80057b0:	d007      	beq.n	80057c2 <HAL_UART_IRQHandler+0x1be>
 80057b2:	687b      	ldr	r3, [r7, #4]
 80057b4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80057b6:	2b00      	cmp	r3, #0
 80057b8:	d003      	beq.n	80057c2 <HAL_UART_IRQHandler+0x1be>
 80057ba:	687b      	ldr	r3, [r7, #4]
 80057bc:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80057be:	6878      	ldr	r0, [r7, #4]
 80057c0:	4798      	blx	r3
 80057c2:	687b      	ldr	r3, [r7, #4]
 80057c4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80057c8:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 80057cc:	687b      	ldr	r3, [r7, #4]
 80057ce:	681b      	ldr	r3, [r3, #0]
 80057d0:	689b      	ldr	r3, [r3, #8]
 80057d2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80057d6:	2b40      	cmp	r3, #64	; 0x40
 80057d8:	d005      	beq.n	80057e6 <HAL_UART_IRQHandler+0x1e2>
 80057da:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 80057de:	f003 0328 	and.w	r3, r3, #40	; 0x28
 80057e2:	2b00      	cmp	r3, #0
 80057e4:	d04f      	beq.n	8005886 <HAL_UART_IRQHandler+0x282>
 80057e6:	6878      	ldr	r0, [r7, #4]
 80057e8:	f000 fee8 	bl	80065bc <UART_EndRxTransfer>
 80057ec:	687b      	ldr	r3, [r7, #4]
 80057ee:	681b      	ldr	r3, [r3, #0]
 80057f0:	689b      	ldr	r3, [r3, #8]
 80057f2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80057f6:	2b40      	cmp	r3, #64	; 0x40
 80057f8:	d141      	bne.n	800587e <HAL_UART_IRQHandler+0x27a>
 80057fa:	687b      	ldr	r3, [r7, #4]
 80057fc:	681b      	ldr	r3, [r3, #0]
 80057fe:	3308      	adds	r3, #8
 8005800:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8005804:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8005808:	e853 3f00 	ldrex	r3, [r3]
 800580c:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8005810:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8005814:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005818:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800581c:	687b      	ldr	r3, [r7, #4]
 800581e:	681b      	ldr	r3, [r3, #0]
 8005820:	3308      	adds	r3, #8
 8005822:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 8005826:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800582a:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800582e:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 8005832:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 8005836:	e841 2300 	strex	r3, r2, [r1]
 800583a:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800583e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8005842:	2b00      	cmp	r3, #0
 8005844:	d1d9      	bne.n	80057fa <HAL_UART_IRQHandler+0x1f6>
 8005846:	687b      	ldr	r3, [r7, #4]
 8005848:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800584a:	2b00      	cmp	r3, #0
 800584c:	d013      	beq.n	8005876 <HAL_UART_IRQHandler+0x272>
 800584e:	687b      	ldr	r3, [r7, #4]
 8005850:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005852:	4a13      	ldr	r2, [pc, #76]	; (80058a0 <HAL_UART_IRQHandler+0x29c>)
 8005854:	639a      	str	r2, [r3, #56]	; 0x38
 8005856:	687b      	ldr	r3, [r7, #4]
 8005858:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800585a:	4618      	mov	r0, r3
 800585c:	f7fd fcbf 	bl	80031de <HAL_DMA_Abort_IT>
 8005860:	4603      	mov	r3, r0
 8005862:	2b00      	cmp	r3, #0
 8005864:	d017      	beq.n	8005896 <HAL_UART_IRQHandler+0x292>
 8005866:	687b      	ldr	r3, [r7, #4]
 8005868:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800586a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800586c:	687a      	ldr	r2, [r7, #4]
 800586e:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8005870:	4610      	mov	r0, r2
 8005872:	4798      	blx	r3
 8005874:	e00f      	b.n	8005896 <HAL_UART_IRQHandler+0x292>
 8005876:	6878      	ldr	r0, [r7, #4]
 8005878:	f000 f9b8 	bl	8005bec <HAL_UART_ErrorCallback>
 800587c:	e00b      	b.n	8005896 <HAL_UART_IRQHandler+0x292>
 800587e:	6878      	ldr	r0, [r7, #4]
 8005880:	f000 f9b4 	bl	8005bec <HAL_UART_ErrorCallback>
 8005884:	e007      	b.n	8005896 <HAL_UART_IRQHandler+0x292>
 8005886:	6878      	ldr	r0, [r7, #4]
 8005888:	f000 f9b0 	bl	8005bec <HAL_UART_ErrorCallback>
 800588c:	687b      	ldr	r3, [r7, #4]
 800588e:	2200      	movs	r2, #0
 8005890:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8005894:	e195      	b.n	8005bc2 <HAL_UART_IRQHandler+0x5be>
 8005896:	bf00      	nop
 8005898:	e193      	b.n	8005bc2 <HAL_UART_IRQHandler+0x5be>
 800589a:	bf00      	nop
 800589c:	04000120 	.word	0x04000120
 80058a0:	08006685 	.word	0x08006685
 80058a4:	687b      	ldr	r3, [r7, #4]
 80058a6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80058a8:	2b01      	cmp	r3, #1
 80058aa:	f040 814e 	bne.w	8005b4a <HAL_UART_IRQHandler+0x546>
 80058ae:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80058b2:	f003 0310 	and.w	r3, r3, #16
 80058b6:	2b00      	cmp	r3, #0
 80058b8:	f000 8147 	beq.w	8005b4a <HAL_UART_IRQHandler+0x546>
 80058bc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80058c0:	f003 0310 	and.w	r3, r3, #16
 80058c4:	2b00      	cmp	r3, #0
 80058c6:	f000 8140 	beq.w	8005b4a <HAL_UART_IRQHandler+0x546>
 80058ca:	687b      	ldr	r3, [r7, #4]
 80058cc:	681b      	ldr	r3, [r3, #0]
 80058ce:	2210      	movs	r2, #16
 80058d0:	621a      	str	r2, [r3, #32]
 80058d2:	687b      	ldr	r3, [r7, #4]
 80058d4:	681b      	ldr	r3, [r3, #0]
 80058d6:	689b      	ldr	r3, [r3, #8]
 80058d8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80058dc:	2b40      	cmp	r3, #64	; 0x40
 80058de:	f040 80b8 	bne.w	8005a52 <HAL_UART_IRQHandler+0x44e>
 80058e2:	687b      	ldr	r3, [r7, #4]
 80058e4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80058e6:	681b      	ldr	r3, [r3, #0]
 80058e8:	685b      	ldr	r3, [r3, #4]
 80058ea:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 80058ee:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 80058f2:	2b00      	cmp	r3, #0
 80058f4:	f000 8167 	beq.w	8005bc6 <HAL_UART_IRQHandler+0x5c2>
 80058f8:	687b      	ldr	r3, [r7, #4]
 80058fa:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 80058fe:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8005902:	429a      	cmp	r2, r3
 8005904:	f080 815f 	bcs.w	8005bc6 <HAL_UART_IRQHandler+0x5c2>
 8005908:	687b      	ldr	r3, [r7, #4]
 800590a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800590e:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8005912:	687b      	ldr	r3, [r7, #4]
 8005914:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005916:	681b      	ldr	r3, [r3, #0]
 8005918:	681b      	ldr	r3, [r3, #0]
 800591a:	f003 0320 	and.w	r3, r3, #32
 800591e:	2b00      	cmp	r3, #0
 8005920:	f040 8086 	bne.w	8005a30 <HAL_UART_IRQHandler+0x42c>
 8005924:	687b      	ldr	r3, [r7, #4]
 8005926:	681b      	ldr	r3, [r3, #0]
 8005928:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800592c:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8005930:	e853 3f00 	ldrex	r3, [r3]
 8005934:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8005938:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800593c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005940:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8005944:	687b      	ldr	r3, [r7, #4]
 8005946:	681b      	ldr	r3, [r3, #0]
 8005948:	461a      	mov	r2, r3
 800594a:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 800594e:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8005952:	f8c7 2090 	str.w	r2, [r7, #144]	; 0x90
 8005956:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800595a:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800595e:	e841 2300 	strex	r3, r2, [r1]
 8005962:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8005966:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800596a:	2b00      	cmp	r3, #0
 800596c:	d1da      	bne.n	8005924 <HAL_UART_IRQHandler+0x320>
 800596e:	687b      	ldr	r3, [r7, #4]
 8005970:	681b      	ldr	r3, [r3, #0]
 8005972:	3308      	adds	r3, #8
 8005974:	677b      	str	r3, [r7, #116]	; 0x74
 8005976:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8005978:	e853 3f00 	ldrex	r3, [r3]
 800597c:	673b      	str	r3, [r7, #112]	; 0x70
 800597e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8005980:	f023 0301 	bic.w	r3, r3, #1
 8005984:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8005988:	687b      	ldr	r3, [r7, #4]
 800598a:	681b      	ldr	r3, [r3, #0]
 800598c:	3308      	adds	r3, #8
 800598e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8005992:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 8005996:	67fb      	str	r3, [r7, #124]	; 0x7c
 8005998:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800599a:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800599e:	e841 2300 	strex	r3, r2, [r1]
 80059a2:	67bb      	str	r3, [r7, #120]	; 0x78
 80059a4:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80059a6:	2b00      	cmp	r3, #0
 80059a8:	d1e1      	bne.n	800596e <HAL_UART_IRQHandler+0x36a>
 80059aa:	687b      	ldr	r3, [r7, #4]
 80059ac:	681b      	ldr	r3, [r3, #0]
 80059ae:	3308      	adds	r3, #8
 80059b0:	663b      	str	r3, [r7, #96]	; 0x60
 80059b2:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80059b4:	e853 3f00 	ldrex	r3, [r3]
 80059b8:	65fb      	str	r3, [r7, #92]	; 0x5c
 80059ba:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80059bc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80059c0:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80059c4:	687b      	ldr	r3, [r7, #4]
 80059c6:	681b      	ldr	r3, [r3, #0]
 80059c8:	3308      	adds	r3, #8
 80059ca:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 80059ce:	66fa      	str	r2, [r7, #108]	; 0x6c
 80059d0:	66bb      	str	r3, [r7, #104]	; 0x68
 80059d2:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 80059d4:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80059d6:	e841 2300 	strex	r3, r2, [r1]
 80059da:	667b      	str	r3, [r7, #100]	; 0x64
 80059dc:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80059de:	2b00      	cmp	r3, #0
 80059e0:	d1e3      	bne.n	80059aa <HAL_UART_IRQHandler+0x3a6>
 80059e2:	687b      	ldr	r3, [r7, #4]
 80059e4:	2220      	movs	r2, #32
 80059e6:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80059ea:	687b      	ldr	r3, [r7, #4]
 80059ec:	2200      	movs	r2, #0
 80059ee:	661a      	str	r2, [r3, #96]	; 0x60
 80059f0:	687b      	ldr	r3, [r7, #4]
 80059f2:	681b      	ldr	r3, [r3, #0]
 80059f4:	64fb      	str	r3, [r7, #76]	; 0x4c
 80059f6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80059f8:	e853 3f00 	ldrex	r3, [r3]
 80059fc:	64bb      	str	r3, [r7, #72]	; 0x48
 80059fe:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005a00:	f023 0310 	bic.w	r3, r3, #16
 8005a04:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8005a08:	687b      	ldr	r3, [r7, #4]
 8005a0a:	681b      	ldr	r3, [r3, #0]
 8005a0c:	461a      	mov	r2, r3
 8005a0e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8005a12:	65bb      	str	r3, [r7, #88]	; 0x58
 8005a14:	657a      	str	r2, [r7, #84]	; 0x54
 8005a16:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8005a18:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8005a1a:	e841 2300 	strex	r3, r2, [r1]
 8005a1e:	653b      	str	r3, [r7, #80]	; 0x50
 8005a20:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8005a22:	2b00      	cmp	r3, #0
 8005a24:	d1e4      	bne.n	80059f0 <HAL_UART_IRQHandler+0x3ec>
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005a2a:	4618      	mov	r0, r3
 8005a2c:	f7fd fb99 	bl	8003162 <HAL_DMA_Abort>
 8005a30:	687b      	ldr	r3, [r7, #4]
 8005a32:	2202      	movs	r2, #2
 8005a34:	665a      	str	r2, [r3, #100]	; 0x64
 8005a36:	687b      	ldr	r3, [r7, #4]
 8005a38:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 8005a3c:	687b      	ldr	r3, [r7, #4]
 8005a3e:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8005a42:	b29b      	uxth	r3, r3
 8005a44:	1ad3      	subs	r3, r2, r3
 8005a46:	b29b      	uxth	r3, r3
 8005a48:	4619      	mov	r1, r3
 8005a4a:	6878      	ldr	r0, [r7, #4]
 8005a4c:	f000 f8d8 	bl	8005c00 <HAL_UARTEx_RxEventCallback>
 8005a50:	e0b9      	b.n	8005bc6 <HAL_UART_IRQHandler+0x5c2>
 8005a52:	687b      	ldr	r3, [r7, #4]
 8005a54:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 8005a58:	687b      	ldr	r3, [r7, #4]
 8005a5a:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8005a5e:	b29b      	uxth	r3, r3
 8005a60:	1ad3      	subs	r3, r2, r3
 8005a62:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 8005a66:	687b      	ldr	r3, [r7, #4]
 8005a68:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8005a6c:	b29b      	uxth	r3, r3
 8005a6e:	2b00      	cmp	r3, #0
 8005a70:	f000 80ab 	beq.w	8005bca <HAL_UART_IRQHandler+0x5c6>
 8005a74:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8005a78:	2b00      	cmp	r3, #0
 8005a7a:	f000 80a6 	beq.w	8005bca <HAL_UART_IRQHandler+0x5c6>
 8005a7e:	687b      	ldr	r3, [r7, #4]
 8005a80:	681b      	ldr	r3, [r3, #0]
 8005a82:	63bb      	str	r3, [r7, #56]	; 0x38
 8005a84:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005a86:	e853 3f00 	ldrex	r3, [r3]
 8005a8a:	637b      	str	r3, [r7, #52]	; 0x34
 8005a8c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005a8e:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8005a92:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8005a96:	687b      	ldr	r3, [r7, #4]
 8005a98:	681b      	ldr	r3, [r3, #0]
 8005a9a:	461a      	mov	r2, r3
 8005a9c:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8005aa0:	647b      	str	r3, [r7, #68]	; 0x44
 8005aa2:	643a      	str	r2, [r7, #64]	; 0x40
 8005aa4:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8005aa6:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8005aa8:	e841 2300 	strex	r3, r2, [r1]
 8005aac:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005aae:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8005ab0:	2b00      	cmp	r3, #0
 8005ab2:	d1e4      	bne.n	8005a7e <HAL_UART_IRQHandler+0x47a>
 8005ab4:	687b      	ldr	r3, [r7, #4]
 8005ab6:	681b      	ldr	r3, [r3, #0]
 8005ab8:	3308      	adds	r3, #8
 8005aba:	627b      	str	r3, [r7, #36]	; 0x24
 8005abc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005abe:	e853 3f00 	ldrex	r3, [r3]
 8005ac2:	623b      	str	r3, [r7, #32]
 8005ac4:	6a3b      	ldr	r3, [r7, #32]
 8005ac6:	f023 0301 	bic.w	r3, r3, #1
 8005aca:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8005ace:	687b      	ldr	r3, [r7, #4]
 8005ad0:	681b      	ldr	r3, [r3, #0]
 8005ad2:	3308      	adds	r3, #8
 8005ad4:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8005ad8:	633a      	str	r2, [r7, #48]	; 0x30
 8005ada:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005adc:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8005ade:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005ae0:	e841 2300 	strex	r3, r2, [r1]
 8005ae4:	62bb      	str	r3, [r7, #40]	; 0x28
 8005ae6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005ae8:	2b00      	cmp	r3, #0
 8005aea:	d1e3      	bne.n	8005ab4 <HAL_UART_IRQHandler+0x4b0>
 8005aec:	687b      	ldr	r3, [r7, #4]
 8005aee:	2220      	movs	r2, #32
 8005af0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8005af4:	687b      	ldr	r3, [r7, #4]
 8005af6:	2200      	movs	r2, #0
 8005af8:	661a      	str	r2, [r3, #96]	; 0x60
 8005afa:	687b      	ldr	r3, [r7, #4]
 8005afc:	2200      	movs	r2, #0
 8005afe:	669a      	str	r2, [r3, #104]	; 0x68
 8005b00:	687b      	ldr	r3, [r7, #4]
 8005b02:	681b      	ldr	r3, [r3, #0]
 8005b04:	613b      	str	r3, [r7, #16]
 8005b06:	693b      	ldr	r3, [r7, #16]
 8005b08:	e853 3f00 	ldrex	r3, [r3]
 8005b0c:	60fb      	str	r3, [r7, #12]
 8005b0e:	68fb      	ldr	r3, [r7, #12]
 8005b10:	f023 0310 	bic.w	r3, r3, #16
 8005b14:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8005b18:	687b      	ldr	r3, [r7, #4]
 8005b1a:	681b      	ldr	r3, [r3, #0]
 8005b1c:	461a      	mov	r2, r3
 8005b1e:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 8005b22:	61fb      	str	r3, [r7, #28]
 8005b24:	61ba      	str	r2, [r7, #24]
 8005b26:	69b9      	ldr	r1, [r7, #24]
 8005b28:	69fa      	ldr	r2, [r7, #28]
 8005b2a:	e841 2300 	strex	r3, r2, [r1]
 8005b2e:	617b      	str	r3, [r7, #20]
 8005b30:	697b      	ldr	r3, [r7, #20]
 8005b32:	2b00      	cmp	r3, #0
 8005b34:	d1e4      	bne.n	8005b00 <HAL_UART_IRQHandler+0x4fc>
 8005b36:	687b      	ldr	r3, [r7, #4]
 8005b38:	2202      	movs	r2, #2
 8005b3a:	665a      	str	r2, [r3, #100]	; 0x64
 8005b3c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8005b40:	4619      	mov	r1, r3
 8005b42:	6878      	ldr	r0, [r7, #4]
 8005b44:	f000 f85c 	bl	8005c00 <HAL_UARTEx_RxEventCallback>
 8005b48:	e03f      	b.n	8005bca <HAL_UART_IRQHandler+0x5c6>
 8005b4a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005b4e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005b52:	2b00      	cmp	r3, #0
 8005b54:	d00e      	beq.n	8005b74 <HAL_UART_IRQHandler+0x570>
 8005b56:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8005b5a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005b5e:	2b00      	cmp	r3, #0
 8005b60:	d008      	beq.n	8005b74 <HAL_UART_IRQHandler+0x570>
 8005b62:	687b      	ldr	r3, [r7, #4]
 8005b64:	681b      	ldr	r3, [r3, #0]
 8005b66:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 8005b6a:	621a      	str	r2, [r3, #32]
 8005b6c:	6878      	ldr	r0, [r7, #4]
 8005b6e:	f000 ff85 	bl	8006a7c <HAL_UARTEx_WakeupCallback>
 8005b72:	e02d      	b.n	8005bd0 <HAL_UART_IRQHandler+0x5cc>
 8005b74:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005b78:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005b7c:	2b00      	cmp	r3, #0
 8005b7e:	d00e      	beq.n	8005b9e <HAL_UART_IRQHandler+0x59a>
 8005b80:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8005b84:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005b88:	2b00      	cmp	r3, #0
 8005b8a:	d008      	beq.n	8005b9e <HAL_UART_IRQHandler+0x59a>
 8005b8c:	687b      	ldr	r3, [r7, #4]
 8005b8e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8005b90:	2b00      	cmp	r3, #0
 8005b92:	d01c      	beq.n	8005bce <HAL_UART_IRQHandler+0x5ca>
 8005b94:	687b      	ldr	r3, [r7, #4]
 8005b96:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8005b98:	6878      	ldr	r0, [r7, #4]
 8005b9a:	4798      	blx	r3
 8005b9c:	e017      	b.n	8005bce <HAL_UART_IRQHandler+0x5ca>
 8005b9e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005ba2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005ba6:	2b00      	cmp	r3, #0
 8005ba8:	d012      	beq.n	8005bd0 <HAL_UART_IRQHandler+0x5cc>
 8005baa:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8005bae:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005bb2:	2b00      	cmp	r3, #0
 8005bb4:	d00c      	beq.n	8005bd0 <HAL_UART_IRQHandler+0x5cc>
 8005bb6:	6878      	ldr	r0, [r7, #4]
 8005bb8:	f000 fd7a 	bl	80066b0 <UART_EndTransmit_IT>
 8005bbc:	e008      	b.n	8005bd0 <HAL_UART_IRQHandler+0x5cc>
 8005bbe:	bf00      	nop
 8005bc0:	e006      	b.n	8005bd0 <HAL_UART_IRQHandler+0x5cc>
 8005bc2:	bf00      	nop
 8005bc4:	e004      	b.n	8005bd0 <HAL_UART_IRQHandler+0x5cc>
 8005bc6:	bf00      	nop
 8005bc8:	e002      	b.n	8005bd0 <HAL_UART_IRQHandler+0x5cc>
 8005bca:	bf00      	nop
 8005bcc:	e000      	b.n	8005bd0 <HAL_UART_IRQHandler+0x5cc>
 8005bce:	bf00      	nop
 8005bd0:	37e8      	adds	r7, #232	; 0xe8
 8005bd2:	46bd      	mov	sp, r7
 8005bd4:	bd80      	pop	{r7, pc}
 8005bd6:	bf00      	nop

08005bd8 <HAL_UART_TxCpltCallback>:
 8005bd8:	b480      	push	{r7}
 8005bda:	b083      	sub	sp, #12
 8005bdc:	af00      	add	r7, sp, #0
 8005bde:	6078      	str	r0, [r7, #4]
 8005be0:	bf00      	nop
 8005be2:	370c      	adds	r7, #12
 8005be4:	46bd      	mov	sp, r7
 8005be6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bea:	4770      	bx	lr

08005bec <HAL_UART_ErrorCallback>:
 8005bec:	b480      	push	{r7}
 8005bee:	b083      	sub	sp, #12
 8005bf0:	af00      	add	r7, sp, #0
 8005bf2:	6078      	str	r0, [r7, #4]
 8005bf4:	bf00      	nop
 8005bf6:	370c      	adds	r7, #12
 8005bf8:	46bd      	mov	sp, r7
 8005bfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bfe:	4770      	bx	lr

08005c00 <HAL_UARTEx_RxEventCallback>:
 8005c00:	b480      	push	{r7}
 8005c02:	b083      	sub	sp, #12
 8005c04:	af00      	add	r7, sp, #0
 8005c06:	6078      	str	r0, [r7, #4]
 8005c08:	460b      	mov	r3, r1
 8005c0a:	807b      	strh	r3, [r7, #2]
 8005c0c:	bf00      	nop
 8005c0e:	370c      	adds	r7, #12
 8005c10:	46bd      	mov	sp, r7
 8005c12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c16:	4770      	bx	lr

08005c18 <UART_SetConfig>:
 8005c18:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005c1c:	b08a      	sub	sp, #40	; 0x28
 8005c1e:	af00      	add	r7, sp, #0
 8005c20:	60f8      	str	r0, [r7, #12]
 8005c22:	2300      	movs	r3, #0
 8005c24:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8005c28:	68fb      	ldr	r3, [r7, #12]
 8005c2a:	689a      	ldr	r2, [r3, #8]
 8005c2c:	68fb      	ldr	r3, [r7, #12]
 8005c2e:	691b      	ldr	r3, [r3, #16]
 8005c30:	431a      	orrs	r2, r3
 8005c32:	68fb      	ldr	r3, [r7, #12]
 8005c34:	695b      	ldr	r3, [r3, #20]
 8005c36:	431a      	orrs	r2, r3
 8005c38:	68fb      	ldr	r3, [r7, #12]
 8005c3a:	69db      	ldr	r3, [r3, #28]
 8005c3c:	4313      	orrs	r3, r2
 8005c3e:	627b      	str	r3, [r7, #36]	; 0x24
 8005c40:	68fb      	ldr	r3, [r7, #12]
 8005c42:	681b      	ldr	r3, [r3, #0]
 8005c44:	681a      	ldr	r2, [r3, #0]
 8005c46:	4b9e      	ldr	r3, [pc, #632]	; (8005ec0 <UART_SetConfig+0x2a8>)
 8005c48:	4013      	ands	r3, r2
 8005c4a:	68fa      	ldr	r2, [r7, #12]
 8005c4c:	6812      	ldr	r2, [r2, #0]
 8005c4e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8005c50:	430b      	orrs	r3, r1
 8005c52:	6013      	str	r3, [r2, #0]
 8005c54:	68fb      	ldr	r3, [r7, #12]
 8005c56:	681b      	ldr	r3, [r3, #0]
 8005c58:	685b      	ldr	r3, [r3, #4]
 8005c5a:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8005c5e:	68fb      	ldr	r3, [r7, #12]
 8005c60:	68da      	ldr	r2, [r3, #12]
 8005c62:	68fb      	ldr	r3, [r7, #12]
 8005c64:	681b      	ldr	r3, [r3, #0]
 8005c66:	430a      	orrs	r2, r1
 8005c68:	605a      	str	r2, [r3, #4]
 8005c6a:	68fb      	ldr	r3, [r7, #12]
 8005c6c:	699b      	ldr	r3, [r3, #24]
 8005c6e:	627b      	str	r3, [r7, #36]	; 0x24
 8005c70:	68fb      	ldr	r3, [r7, #12]
 8005c72:	681b      	ldr	r3, [r3, #0]
 8005c74:	4a93      	ldr	r2, [pc, #588]	; (8005ec4 <UART_SetConfig+0x2ac>)
 8005c76:	4293      	cmp	r3, r2
 8005c78:	d004      	beq.n	8005c84 <UART_SetConfig+0x6c>
 8005c7a:	68fb      	ldr	r3, [r7, #12]
 8005c7c:	6a1b      	ldr	r3, [r3, #32]
 8005c7e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005c80:	4313      	orrs	r3, r2
 8005c82:	627b      	str	r3, [r7, #36]	; 0x24
 8005c84:	68fb      	ldr	r3, [r7, #12]
 8005c86:	681b      	ldr	r3, [r3, #0]
 8005c88:	689b      	ldr	r3, [r3, #8]
 8005c8a:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 8005c8e:	68fb      	ldr	r3, [r7, #12]
 8005c90:	681b      	ldr	r3, [r3, #0]
 8005c92:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005c94:	430a      	orrs	r2, r1
 8005c96:	609a      	str	r2, [r3, #8]
 8005c98:	68fb      	ldr	r3, [r7, #12]
 8005c9a:	681b      	ldr	r3, [r3, #0]
 8005c9c:	4a8a      	ldr	r2, [pc, #552]	; (8005ec8 <UART_SetConfig+0x2b0>)
 8005c9e:	4293      	cmp	r3, r2
 8005ca0:	d126      	bne.n	8005cf0 <UART_SetConfig+0xd8>
 8005ca2:	4b8a      	ldr	r3, [pc, #552]	; (8005ecc <UART_SetConfig+0x2b4>)
 8005ca4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005ca8:	f003 0303 	and.w	r3, r3, #3
 8005cac:	2b03      	cmp	r3, #3
 8005cae:	d81b      	bhi.n	8005ce8 <UART_SetConfig+0xd0>
 8005cb0:	a201      	add	r2, pc, #4	; (adr r2, 8005cb8 <UART_SetConfig+0xa0>)
 8005cb2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005cb6:	bf00      	nop
 8005cb8:	08005cc9 	.word	0x08005cc9
 8005cbc:	08005cd9 	.word	0x08005cd9
 8005cc0:	08005cd1 	.word	0x08005cd1
 8005cc4:	08005ce1 	.word	0x08005ce1
 8005cc8:	2301      	movs	r3, #1
 8005cca:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005cce:	e0ab      	b.n	8005e28 <UART_SetConfig+0x210>
 8005cd0:	2302      	movs	r3, #2
 8005cd2:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005cd6:	e0a7      	b.n	8005e28 <UART_SetConfig+0x210>
 8005cd8:	2304      	movs	r3, #4
 8005cda:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005cde:	e0a3      	b.n	8005e28 <UART_SetConfig+0x210>
 8005ce0:	2308      	movs	r3, #8
 8005ce2:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005ce6:	e09f      	b.n	8005e28 <UART_SetConfig+0x210>
 8005ce8:	2310      	movs	r3, #16
 8005cea:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005cee:	e09b      	b.n	8005e28 <UART_SetConfig+0x210>
 8005cf0:	68fb      	ldr	r3, [r7, #12]
 8005cf2:	681b      	ldr	r3, [r3, #0]
 8005cf4:	4a76      	ldr	r2, [pc, #472]	; (8005ed0 <UART_SetConfig+0x2b8>)
 8005cf6:	4293      	cmp	r3, r2
 8005cf8:	d138      	bne.n	8005d6c <UART_SetConfig+0x154>
 8005cfa:	4b74      	ldr	r3, [pc, #464]	; (8005ecc <UART_SetConfig+0x2b4>)
 8005cfc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005d00:	f003 030c 	and.w	r3, r3, #12
 8005d04:	2b0c      	cmp	r3, #12
 8005d06:	d82d      	bhi.n	8005d64 <UART_SetConfig+0x14c>
 8005d08:	a201      	add	r2, pc, #4	; (adr r2, 8005d10 <UART_SetConfig+0xf8>)
 8005d0a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005d0e:	bf00      	nop
 8005d10:	08005d45 	.word	0x08005d45
 8005d14:	08005d65 	.word	0x08005d65
 8005d18:	08005d65 	.word	0x08005d65
 8005d1c:	08005d65 	.word	0x08005d65
 8005d20:	08005d55 	.word	0x08005d55
 8005d24:	08005d65 	.word	0x08005d65
 8005d28:	08005d65 	.word	0x08005d65
 8005d2c:	08005d65 	.word	0x08005d65
 8005d30:	08005d4d 	.word	0x08005d4d
 8005d34:	08005d65 	.word	0x08005d65
 8005d38:	08005d65 	.word	0x08005d65
 8005d3c:	08005d65 	.word	0x08005d65
 8005d40:	08005d5d 	.word	0x08005d5d
 8005d44:	2300      	movs	r3, #0
 8005d46:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005d4a:	e06d      	b.n	8005e28 <UART_SetConfig+0x210>
 8005d4c:	2302      	movs	r3, #2
 8005d4e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005d52:	e069      	b.n	8005e28 <UART_SetConfig+0x210>
 8005d54:	2304      	movs	r3, #4
 8005d56:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005d5a:	e065      	b.n	8005e28 <UART_SetConfig+0x210>
 8005d5c:	2308      	movs	r3, #8
 8005d5e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005d62:	e061      	b.n	8005e28 <UART_SetConfig+0x210>
 8005d64:	2310      	movs	r3, #16
 8005d66:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005d6a:	e05d      	b.n	8005e28 <UART_SetConfig+0x210>
 8005d6c:	68fb      	ldr	r3, [r7, #12]
 8005d6e:	681b      	ldr	r3, [r3, #0]
 8005d70:	4a58      	ldr	r2, [pc, #352]	; (8005ed4 <UART_SetConfig+0x2bc>)
 8005d72:	4293      	cmp	r3, r2
 8005d74:	d125      	bne.n	8005dc2 <UART_SetConfig+0x1aa>
 8005d76:	4b55      	ldr	r3, [pc, #340]	; (8005ecc <UART_SetConfig+0x2b4>)
 8005d78:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005d7c:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8005d80:	2b30      	cmp	r3, #48	; 0x30
 8005d82:	d016      	beq.n	8005db2 <UART_SetConfig+0x19a>
 8005d84:	2b30      	cmp	r3, #48	; 0x30
 8005d86:	d818      	bhi.n	8005dba <UART_SetConfig+0x1a2>
 8005d88:	2b20      	cmp	r3, #32
 8005d8a:	d00a      	beq.n	8005da2 <UART_SetConfig+0x18a>
 8005d8c:	2b20      	cmp	r3, #32
 8005d8e:	d814      	bhi.n	8005dba <UART_SetConfig+0x1a2>
 8005d90:	2b00      	cmp	r3, #0
 8005d92:	d002      	beq.n	8005d9a <UART_SetConfig+0x182>
 8005d94:	2b10      	cmp	r3, #16
 8005d96:	d008      	beq.n	8005daa <UART_SetConfig+0x192>
 8005d98:	e00f      	b.n	8005dba <UART_SetConfig+0x1a2>
 8005d9a:	2300      	movs	r3, #0
 8005d9c:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005da0:	e042      	b.n	8005e28 <UART_SetConfig+0x210>
 8005da2:	2302      	movs	r3, #2
 8005da4:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005da8:	e03e      	b.n	8005e28 <UART_SetConfig+0x210>
 8005daa:	2304      	movs	r3, #4
 8005dac:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005db0:	e03a      	b.n	8005e28 <UART_SetConfig+0x210>
 8005db2:	2308      	movs	r3, #8
 8005db4:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005db8:	e036      	b.n	8005e28 <UART_SetConfig+0x210>
 8005dba:	2310      	movs	r3, #16
 8005dbc:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005dc0:	e032      	b.n	8005e28 <UART_SetConfig+0x210>
 8005dc2:	68fb      	ldr	r3, [r7, #12]
 8005dc4:	681b      	ldr	r3, [r3, #0]
 8005dc6:	4a3f      	ldr	r2, [pc, #252]	; (8005ec4 <UART_SetConfig+0x2ac>)
 8005dc8:	4293      	cmp	r3, r2
 8005dca:	d12a      	bne.n	8005e22 <UART_SetConfig+0x20a>
 8005dcc:	4b3f      	ldr	r3, [pc, #252]	; (8005ecc <UART_SetConfig+0x2b4>)
 8005dce:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005dd2:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8005dd6:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8005dda:	d01a      	beq.n	8005e12 <UART_SetConfig+0x1fa>
 8005ddc:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8005de0:	d81b      	bhi.n	8005e1a <UART_SetConfig+0x202>
 8005de2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8005de6:	d00c      	beq.n	8005e02 <UART_SetConfig+0x1ea>
 8005de8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8005dec:	d815      	bhi.n	8005e1a <UART_SetConfig+0x202>
 8005dee:	2b00      	cmp	r3, #0
 8005df0:	d003      	beq.n	8005dfa <UART_SetConfig+0x1e2>
 8005df2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005df6:	d008      	beq.n	8005e0a <UART_SetConfig+0x1f2>
 8005df8:	e00f      	b.n	8005e1a <UART_SetConfig+0x202>
 8005dfa:	2300      	movs	r3, #0
 8005dfc:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005e00:	e012      	b.n	8005e28 <UART_SetConfig+0x210>
 8005e02:	2302      	movs	r3, #2
 8005e04:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005e08:	e00e      	b.n	8005e28 <UART_SetConfig+0x210>
 8005e0a:	2304      	movs	r3, #4
 8005e0c:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005e10:	e00a      	b.n	8005e28 <UART_SetConfig+0x210>
 8005e12:	2308      	movs	r3, #8
 8005e14:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005e18:	e006      	b.n	8005e28 <UART_SetConfig+0x210>
 8005e1a:	2310      	movs	r3, #16
 8005e1c:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005e20:	e002      	b.n	8005e28 <UART_SetConfig+0x210>
 8005e22:	2310      	movs	r3, #16
 8005e24:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005e28:	68fb      	ldr	r3, [r7, #12]
 8005e2a:	681b      	ldr	r3, [r3, #0]
 8005e2c:	4a25      	ldr	r2, [pc, #148]	; (8005ec4 <UART_SetConfig+0x2ac>)
 8005e2e:	4293      	cmp	r3, r2
 8005e30:	f040 808a 	bne.w	8005f48 <UART_SetConfig+0x330>
 8005e34:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8005e38:	2b08      	cmp	r3, #8
 8005e3a:	d824      	bhi.n	8005e86 <UART_SetConfig+0x26e>
 8005e3c:	a201      	add	r2, pc, #4	; (adr r2, 8005e44 <UART_SetConfig+0x22c>)
 8005e3e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005e42:	bf00      	nop
 8005e44:	08005e69 	.word	0x08005e69
 8005e48:	08005e87 	.word	0x08005e87
 8005e4c:	08005e71 	.word	0x08005e71
 8005e50:	08005e87 	.word	0x08005e87
 8005e54:	08005e77 	.word	0x08005e77
 8005e58:	08005e87 	.word	0x08005e87
 8005e5c:	08005e87 	.word	0x08005e87
 8005e60:	08005e87 	.word	0x08005e87
 8005e64:	08005e7f 	.word	0x08005e7f
 8005e68:	f7ff f920 	bl	80050ac <HAL_RCC_GetPCLK1Freq>
 8005e6c:	61f8      	str	r0, [r7, #28]
 8005e6e:	e010      	b.n	8005e92 <UART_SetConfig+0x27a>
 8005e70:	4b19      	ldr	r3, [pc, #100]	; (8005ed8 <UART_SetConfig+0x2c0>)
 8005e72:	61fb      	str	r3, [r7, #28]
 8005e74:	e00d      	b.n	8005e92 <UART_SetConfig+0x27a>
 8005e76:	f7ff f881 	bl	8004f7c <HAL_RCC_GetSysClockFreq>
 8005e7a:	61f8      	str	r0, [r7, #28]
 8005e7c:	e009      	b.n	8005e92 <UART_SetConfig+0x27a>
 8005e7e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8005e82:	61fb      	str	r3, [r7, #28]
 8005e84:	e005      	b.n	8005e92 <UART_SetConfig+0x27a>
 8005e86:	2300      	movs	r3, #0
 8005e88:	61fb      	str	r3, [r7, #28]
 8005e8a:	2301      	movs	r3, #1
 8005e8c:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8005e90:	bf00      	nop
 8005e92:	69fb      	ldr	r3, [r7, #28]
 8005e94:	2b00      	cmp	r3, #0
 8005e96:	f000 8109 	beq.w	80060ac <UART_SetConfig+0x494>
 8005e9a:	68fb      	ldr	r3, [r7, #12]
 8005e9c:	685a      	ldr	r2, [r3, #4]
 8005e9e:	4613      	mov	r3, r2
 8005ea0:	005b      	lsls	r3, r3, #1
 8005ea2:	4413      	add	r3, r2
 8005ea4:	69fa      	ldr	r2, [r7, #28]
 8005ea6:	429a      	cmp	r2, r3
 8005ea8:	d305      	bcc.n	8005eb6 <UART_SetConfig+0x29e>
 8005eaa:	68fb      	ldr	r3, [r7, #12]
 8005eac:	685b      	ldr	r3, [r3, #4]
 8005eae:	031b      	lsls	r3, r3, #12
 8005eb0:	69fa      	ldr	r2, [r7, #28]
 8005eb2:	429a      	cmp	r2, r3
 8005eb4:	d912      	bls.n	8005edc <UART_SetConfig+0x2c4>
 8005eb6:	2301      	movs	r3, #1
 8005eb8:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8005ebc:	e0f6      	b.n	80060ac <UART_SetConfig+0x494>
 8005ebe:	bf00      	nop
 8005ec0:	efff69f3 	.word	0xefff69f3
 8005ec4:	40008000 	.word	0x40008000
 8005ec8:	40013800 	.word	0x40013800
 8005ecc:	40021000 	.word	0x40021000
 8005ed0:	40004400 	.word	0x40004400
 8005ed4:	40004800 	.word	0x40004800
 8005ed8:	00f42400 	.word	0x00f42400
 8005edc:	69fb      	ldr	r3, [r7, #28]
 8005ede:	2200      	movs	r2, #0
 8005ee0:	461c      	mov	r4, r3
 8005ee2:	4615      	mov	r5, r2
 8005ee4:	f04f 0200 	mov.w	r2, #0
 8005ee8:	f04f 0300 	mov.w	r3, #0
 8005eec:	022b      	lsls	r3, r5, #8
 8005eee:	ea43 6314 	orr.w	r3, r3, r4, lsr #24
 8005ef2:	0222      	lsls	r2, r4, #8
 8005ef4:	68f9      	ldr	r1, [r7, #12]
 8005ef6:	6849      	ldr	r1, [r1, #4]
 8005ef8:	0849      	lsrs	r1, r1, #1
 8005efa:	2000      	movs	r0, #0
 8005efc:	4688      	mov	r8, r1
 8005efe:	4681      	mov	r9, r0
 8005f00:	eb12 0a08 	adds.w	sl, r2, r8
 8005f04:	eb43 0b09 	adc.w	fp, r3, r9
 8005f08:	68fb      	ldr	r3, [r7, #12]
 8005f0a:	685b      	ldr	r3, [r3, #4]
 8005f0c:	2200      	movs	r2, #0
 8005f0e:	603b      	str	r3, [r7, #0]
 8005f10:	607a      	str	r2, [r7, #4]
 8005f12:	e9d7 2300 	ldrd	r2, r3, [r7]
 8005f16:	4650      	mov	r0, sl
 8005f18:	4659      	mov	r1, fp
 8005f1a:	f7fa fe6f 	bl	8000bfc <__aeabi_uldivmod>
 8005f1e:	4602      	mov	r2, r0
 8005f20:	460b      	mov	r3, r1
 8005f22:	4613      	mov	r3, r2
 8005f24:	61bb      	str	r3, [r7, #24]
 8005f26:	69bb      	ldr	r3, [r7, #24]
 8005f28:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8005f2c:	d308      	bcc.n	8005f40 <UART_SetConfig+0x328>
 8005f2e:	69bb      	ldr	r3, [r7, #24]
 8005f30:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8005f34:	d204      	bcs.n	8005f40 <UART_SetConfig+0x328>
 8005f36:	68fb      	ldr	r3, [r7, #12]
 8005f38:	681b      	ldr	r3, [r3, #0]
 8005f3a:	69ba      	ldr	r2, [r7, #24]
 8005f3c:	60da      	str	r2, [r3, #12]
 8005f3e:	e0b5      	b.n	80060ac <UART_SetConfig+0x494>
 8005f40:	2301      	movs	r3, #1
 8005f42:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8005f46:	e0b1      	b.n	80060ac <UART_SetConfig+0x494>
 8005f48:	68fb      	ldr	r3, [r7, #12]
 8005f4a:	69db      	ldr	r3, [r3, #28]
 8005f4c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005f50:	d15d      	bne.n	800600e <UART_SetConfig+0x3f6>
 8005f52:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8005f56:	2b08      	cmp	r3, #8
 8005f58:	d827      	bhi.n	8005faa <UART_SetConfig+0x392>
 8005f5a:	a201      	add	r2, pc, #4	; (adr r2, 8005f60 <UART_SetConfig+0x348>)
 8005f5c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005f60:	08005f85 	.word	0x08005f85
 8005f64:	08005f8d 	.word	0x08005f8d
 8005f68:	08005f95 	.word	0x08005f95
 8005f6c:	08005fab 	.word	0x08005fab
 8005f70:	08005f9b 	.word	0x08005f9b
 8005f74:	08005fab 	.word	0x08005fab
 8005f78:	08005fab 	.word	0x08005fab
 8005f7c:	08005fab 	.word	0x08005fab
 8005f80:	08005fa3 	.word	0x08005fa3
 8005f84:	f7ff f892 	bl	80050ac <HAL_RCC_GetPCLK1Freq>
 8005f88:	61f8      	str	r0, [r7, #28]
 8005f8a:	e014      	b.n	8005fb6 <UART_SetConfig+0x39e>
 8005f8c:	f7ff f8a4 	bl	80050d8 <HAL_RCC_GetPCLK2Freq>
 8005f90:	61f8      	str	r0, [r7, #28]
 8005f92:	e010      	b.n	8005fb6 <UART_SetConfig+0x39e>
 8005f94:	4b4c      	ldr	r3, [pc, #304]	; (80060c8 <UART_SetConfig+0x4b0>)
 8005f96:	61fb      	str	r3, [r7, #28]
 8005f98:	e00d      	b.n	8005fb6 <UART_SetConfig+0x39e>
 8005f9a:	f7fe ffef 	bl	8004f7c <HAL_RCC_GetSysClockFreq>
 8005f9e:	61f8      	str	r0, [r7, #28]
 8005fa0:	e009      	b.n	8005fb6 <UART_SetConfig+0x39e>
 8005fa2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8005fa6:	61fb      	str	r3, [r7, #28]
 8005fa8:	e005      	b.n	8005fb6 <UART_SetConfig+0x39e>
 8005faa:	2300      	movs	r3, #0
 8005fac:	61fb      	str	r3, [r7, #28]
 8005fae:	2301      	movs	r3, #1
 8005fb0:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8005fb4:	bf00      	nop
 8005fb6:	69fb      	ldr	r3, [r7, #28]
 8005fb8:	2b00      	cmp	r3, #0
 8005fba:	d077      	beq.n	80060ac <UART_SetConfig+0x494>
 8005fbc:	69fb      	ldr	r3, [r7, #28]
 8005fbe:	005a      	lsls	r2, r3, #1
 8005fc0:	68fb      	ldr	r3, [r7, #12]
 8005fc2:	685b      	ldr	r3, [r3, #4]
 8005fc4:	085b      	lsrs	r3, r3, #1
 8005fc6:	441a      	add	r2, r3
 8005fc8:	68fb      	ldr	r3, [r7, #12]
 8005fca:	685b      	ldr	r3, [r3, #4]
 8005fcc:	fbb2 f3f3 	udiv	r3, r2, r3
 8005fd0:	61bb      	str	r3, [r7, #24]
 8005fd2:	69bb      	ldr	r3, [r7, #24]
 8005fd4:	2b0f      	cmp	r3, #15
 8005fd6:	d916      	bls.n	8006006 <UART_SetConfig+0x3ee>
 8005fd8:	69bb      	ldr	r3, [r7, #24]
 8005fda:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005fde:	d212      	bcs.n	8006006 <UART_SetConfig+0x3ee>
 8005fe0:	69bb      	ldr	r3, [r7, #24]
 8005fe2:	b29b      	uxth	r3, r3
 8005fe4:	f023 030f 	bic.w	r3, r3, #15
 8005fe8:	82fb      	strh	r3, [r7, #22]
 8005fea:	69bb      	ldr	r3, [r7, #24]
 8005fec:	085b      	lsrs	r3, r3, #1
 8005fee:	b29b      	uxth	r3, r3
 8005ff0:	f003 0307 	and.w	r3, r3, #7
 8005ff4:	b29a      	uxth	r2, r3
 8005ff6:	8afb      	ldrh	r3, [r7, #22]
 8005ff8:	4313      	orrs	r3, r2
 8005ffa:	82fb      	strh	r3, [r7, #22]
 8005ffc:	68fb      	ldr	r3, [r7, #12]
 8005ffe:	681b      	ldr	r3, [r3, #0]
 8006000:	8afa      	ldrh	r2, [r7, #22]
 8006002:	60da      	str	r2, [r3, #12]
 8006004:	e052      	b.n	80060ac <UART_SetConfig+0x494>
 8006006:	2301      	movs	r3, #1
 8006008:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 800600c:	e04e      	b.n	80060ac <UART_SetConfig+0x494>
 800600e:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8006012:	2b08      	cmp	r3, #8
 8006014:	d827      	bhi.n	8006066 <UART_SetConfig+0x44e>
 8006016:	a201      	add	r2, pc, #4	; (adr r2, 800601c <UART_SetConfig+0x404>)
 8006018:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800601c:	08006041 	.word	0x08006041
 8006020:	08006049 	.word	0x08006049
 8006024:	08006051 	.word	0x08006051
 8006028:	08006067 	.word	0x08006067
 800602c:	08006057 	.word	0x08006057
 8006030:	08006067 	.word	0x08006067
 8006034:	08006067 	.word	0x08006067
 8006038:	08006067 	.word	0x08006067
 800603c:	0800605f 	.word	0x0800605f
 8006040:	f7ff f834 	bl	80050ac <HAL_RCC_GetPCLK1Freq>
 8006044:	61f8      	str	r0, [r7, #28]
 8006046:	e014      	b.n	8006072 <UART_SetConfig+0x45a>
 8006048:	f7ff f846 	bl	80050d8 <HAL_RCC_GetPCLK2Freq>
 800604c:	61f8      	str	r0, [r7, #28]
 800604e:	e010      	b.n	8006072 <UART_SetConfig+0x45a>
 8006050:	4b1d      	ldr	r3, [pc, #116]	; (80060c8 <UART_SetConfig+0x4b0>)
 8006052:	61fb      	str	r3, [r7, #28]
 8006054:	e00d      	b.n	8006072 <UART_SetConfig+0x45a>
 8006056:	f7fe ff91 	bl	8004f7c <HAL_RCC_GetSysClockFreq>
 800605a:	61f8      	str	r0, [r7, #28]
 800605c:	e009      	b.n	8006072 <UART_SetConfig+0x45a>
 800605e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8006062:	61fb      	str	r3, [r7, #28]
 8006064:	e005      	b.n	8006072 <UART_SetConfig+0x45a>
 8006066:	2300      	movs	r3, #0
 8006068:	61fb      	str	r3, [r7, #28]
 800606a:	2301      	movs	r3, #1
 800606c:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8006070:	bf00      	nop
 8006072:	69fb      	ldr	r3, [r7, #28]
 8006074:	2b00      	cmp	r3, #0
 8006076:	d019      	beq.n	80060ac <UART_SetConfig+0x494>
 8006078:	68fb      	ldr	r3, [r7, #12]
 800607a:	685b      	ldr	r3, [r3, #4]
 800607c:	085a      	lsrs	r2, r3, #1
 800607e:	69fb      	ldr	r3, [r7, #28]
 8006080:	441a      	add	r2, r3
 8006082:	68fb      	ldr	r3, [r7, #12]
 8006084:	685b      	ldr	r3, [r3, #4]
 8006086:	fbb2 f3f3 	udiv	r3, r2, r3
 800608a:	61bb      	str	r3, [r7, #24]
 800608c:	69bb      	ldr	r3, [r7, #24]
 800608e:	2b0f      	cmp	r3, #15
 8006090:	d909      	bls.n	80060a6 <UART_SetConfig+0x48e>
 8006092:	69bb      	ldr	r3, [r7, #24]
 8006094:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006098:	d205      	bcs.n	80060a6 <UART_SetConfig+0x48e>
 800609a:	69bb      	ldr	r3, [r7, #24]
 800609c:	b29a      	uxth	r2, r3
 800609e:	68fb      	ldr	r3, [r7, #12]
 80060a0:	681b      	ldr	r3, [r3, #0]
 80060a2:	60da      	str	r2, [r3, #12]
 80060a4:	e002      	b.n	80060ac <UART_SetConfig+0x494>
 80060a6:	2301      	movs	r3, #1
 80060a8:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 80060ac:	68fb      	ldr	r3, [r7, #12]
 80060ae:	2200      	movs	r2, #0
 80060b0:	669a      	str	r2, [r3, #104]	; 0x68
 80060b2:	68fb      	ldr	r3, [r7, #12]
 80060b4:	2200      	movs	r2, #0
 80060b6:	66da      	str	r2, [r3, #108]	; 0x6c
 80060b8:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 80060bc:	4618      	mov	r0, r3
 80060be:	3728      	adds	r7, #40	; 0x28
 80060c0:	46bd      	mov	sp, r7
 80060c2:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80060c6:	bf00      	nop
 80060c8:	00f42400 	.word	0x00f42400

080060cc <UART_AdvFeatureConfig>:
 80060cc:	b480      	push	{r7}
 80060ce:	b083      	sub	sp, #12
 80060d0:	af00      	add	r7, sp, #0
 80060d2:	6078      	str	r0, [r7, #4]
 80060d4:	687b      	ldr	r3, [r7, #4]
 80060d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060d8:	f003 0308 	and.w	r3, r3, #8
 80060dc:	2b00      	cmp	r3, #0
 80060de:	d00a      	beq.n	80060f6 <UART_AdvFeatureConfig+0x2a>
 80060e0:	687b      	ldr	r3, [r7, #4]
 80060e2:	681b      	ldr	r3, [r3, #0]
 80060e4:	685b      	ldr	r3, [r3, #4]
 80060e6:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 80060ea:	687b      	ldr	r3, [r7, #4]
 80060ec:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80060ee:	687b      	ldr	r3, [r7, #4]
 80060f0:	681b      	ldr	r3, [r3, #0]
 80060f2:	430a      	orrs	r2, r1
 80060f4:	605a      	str	r2, [r3, #4]
 80060f6:	687b      	ldr	r3, [r7, #4]
 80060f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060fa:	f003 0301 	and.w	r3, r3, #1
 80060fe:	2b00      	cmp	r3, #0
 8006100:	d00a      	beq.n	8006118 <UART_AdvFeatureConfig+0x4c>
 8006102:	687b      	ldr	r3, [r7, #4]
 8006104:	681b      	ldr	r3, [r3, #0]
 8006106:	685b      	ldr	r3, [r3, #4]
 8006108:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 800610c:	687b      	ldr	r3, [r7, #4]
 800610e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8006110:	687b      	ldr	r3, [r7, #4]
 8006112:	681b      	ldr	r3, [r3, #0]
 8006114:	430a      	orrs	r2, r1
 8006116:	605a      	str	r2, [r3, #4]
 8006118:	687b      	ldr	r3, [r7, #4]
 800611a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800611c:	f003 0302 	and.w	r3, r3, #2
 8006120:	2b00      	cmp	r3, #0
 8006122:	d00a      	beq.n	800613a <UART_AdvFeatureConfig+0x6e>
 8006124:	687b      	ldr	r3, [r7, #4]
 8006126:	681b      	ldr	r3, [r3, #0]
 8006128:	685b      	ldr	r3, [r3, #4]
 800612a:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 800612e:	687b      	ldr	r3, [r7, #4]
 8006130:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006132:	687b      	ldr	r3, [r7, #4]
 8006134:	681b      	ldr	r3, [r3, #0]
 8006136:	430a      	orrs	r2, r1
 8006138:	605a      	str	r2, [r3, #4]
 800613a:	687b      	ldr	r3, [r7, #4]
 800613c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800613e:	f003 0304 	and.w	r3, r3, #4
 8006142:	2b00      	cmp	r3, #0
 8006144:	d00a      	beq.n	800615c <UART_AdvFeatureConfig+0x90>
 8006146:	687b      	ldr	r3, [r7, #4]
 8006148:	681b      	ldr	r3, [r3, #0]
 800614a:	685b      	ldr	r3, [r3, #4]
 800614c:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 8006150:	687b      	ldr	r3, [r7, #4]
 8006152:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006154:	687b      	ldr	r3, [r7, #4]
 8006156:	681b      	ldr	r3, [r3, #0]
 8006158:	430a      	orrs	r2, r1
 800615a:	605a      	str	r2, [r3, #4]
 800615c:	687b      	ldr	r3, [r7, #4]
 800615e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006160:	f003 0310 	and.w	r3, r3, #16
 8006164:	2b00      	cmp	r3, #0
 8006166:	d00a      	beq.n	800617e <UART_AdvFeatureConfig+0xb2>
 8006168:	687b      	ldr	r3, [r7, #4]
 800616a:	681b      	ldr	r3, [r3, #0]
 800616c:	689b      	ldr	r3, [r3, #8]
 800616e:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 8006172:	687b      	ldr	r3, [r7, #4]
 8006174:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006176:	687b      	ldr	r3, [r7, #4]
 8006178:	681b      	ldr	r3, [r3, #0]
 800617a:	430a      	orrs	r2, r1
 800617c:	609a      	str	r2, [r3, #8]
 800617e:	687b      	ldr	r3, [r7, #4]
 8006180:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006182:	f003 0320 	and.w	r3, r3, #32
 8006186:	2b00      	cmp	r3, #0
 8006188:	d00a      	beq.n	80061a0 <UART_AdvFeatureConfig+0xd4>
 800618a:	687b      	ldr	r3, [r7, #4]
 800618c:	681b      	ldr	r3, [r3, #0]
 800618e:	689b      	ldr	r3, [r3, #8]
 8006190:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 8006194:	687b      	ldr	r3, [r7, #4]
 8006196:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8006198:	687b      	ldr	r3, [r7, #4]
 800619a:	681b      	ldr	r3, [r3, #0]
 800619c:	430a      	orrs	r2, r1
 800619e:	609a      	str	r2, [r3, #8]
 80061a0:	687b      	ldr	r3, [r7, #4]
 80061a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80061a4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80061a8:	2b00      	cmp	r3, #0
 80061aa:	d01a      	beq.n	80061e2 <UART_AdvFeatureConfig+0x116>
 80061ac:	687b      	ldr	r3, [r7, #4]
 80061ae:	681b      	ldr	r3, [r3, #0]
 80061b0:	685b      	ldr	r3, [r3, #4]
 80061b2:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 80061b6:	687b      	ldr	r3, [r7, #4]
 80061b8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80061ba:	687b      	ldr	r3, [r7, #4]
 80061bc:	681b      	ldr	r3, [r3, #0]
 80061be:	430a      	orrs	r2, r1
 80061c0:	605a      	str	r2, [r3, #4]
 80061c2:	687b      	ldr	r3, [r7, #4]
 80061c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80061c6:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80061ca:	d10a      	bne.n	80061e2 <UART_AdvFeatureConfig+0x116>
 80061cc:	687b      	ldr	r3, [r7, #4]
 80061ce:	681b      	ldr	r3, [r3, #0]
 80061d0:	685b      	ldr	r3, [r3, #4]
 80061d2:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 80061d6:	687b      	ldr	r3, [r7, #4]
 80061d8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80061da:	687b      	ldr	r3, [r7, #4]
 80061dc:	681b      	ldr	r3, [r3, #0]
 80061de:	430a      	orrs	r2, r1
 80061e0:	605a      	str	r2, [r3, #4]
 80061e2:	687b      	ldr	r3, [r7, #4]
 80061e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80061e6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80061ea:	2b00      	cmp	r3, #0
 80061ec:	d00a      	beq.n	8006204 <UART_AdvFeatureConfig+0x138>
 80061ee:	687b      	ldr	r3, [r7, #4]
 80061f0:	681b      	ldr	r3, [r3, #0]
 80061f2:	685b      	ldr	r3, [r3, #4]
 80061f4:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 80061f8:	687b      	ldr	r3, [r7, #4]
 80061fa:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80061fc:	687b      	ldr	r3, [r7, #4]
 80061fe:	681b      	ldr	r3, [r3, #0]
 8006200:	430a      	orrs	r2, r1
 8006202:	605a      	str	r2, [r3, #4]
 8006204:	bf00      	nop
 8006206:	370c      	adds	r7, #12
 8006208:	46bd      	mov	sp, r7
 800620a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800620e:	4770      	bx	lr

08006210 <UART_CheckIdleState>:
 8006210:	b580      	push	{r7, lr}
 8006212:	b098      	sub	sp, #96	; 0x60
 8006214:	af02      	add	r7, sp, #8
 8006216:	6078      	str	r0, [r7, #4]
 8006218:	687b      	ldr	r3, [r7, #4]
 800621a:	2200      	movs	r2, #0
 800621c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8006220:	f7fc fe5e 	bl	8002ee0 <HAL_GetTick>
 8006224:	6578      	str	r0, [r7, #84]	; 0x54
 8006226:	687b      	ldr	r3, [r7, #4]
 8006228:	681b      	ldr	r3, [r3, #0]
 800622a:	681b      	ldr	r3, [r3, #0]
 800622c:	f003 0308 	and.w	r3, r3, #8
 8006230:	2b08      	cmp	r3, #8
 8006232:	d12e      	bne.n	8006292 <UART_CheckIdleState+0x82>
 8006234:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8006238:	9300      	str	r3, [sp, #0]
 800623a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800623c:	2200      	movs	r2, #0
 800623e:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8006242:	6878      	ldr	r0, [r7, #4]
 8006244:	f000 f88c 	bl	8006360 <UART_WaitOnFlagUntilTimeout>
 8006248:	4603      	mov	r3, r0
 800624a:	2b00      	cmp	r3, #0
 800624c:	d021      	beq.n	8006292 <UART_CheckIdleState+0x82>
 800624e:	687b      	ldr	r3, [r7, #4]
 8006250:	681b      	ldr	r3, [r3, #0]
 8006252:	63bb      	str	r3, [r7, #56]	; 0x38
 8006254:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006256:	e853 3f00 	ldrex	r3, [r3]
 800625a:	637b      	str	r3, [r7, #52]	; 0x34
 800625c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800625e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006262:	653b      	str	r3, [r7, #80]	; 0x50
 8006264:	687b      	ldr	r3, [r7, #4]
 8006266:	681b      	ldr	r3, [r3, #0]
 8006268:	461a      	mov	r2, r3
 800626a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800626c:	647b      	str	r3, [r7, #68]	; 0x44
 800626e:	643a      	str	r2, [r7, #64]	; 0x40
 8006270:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8006272:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8006274:	e841 2300 	strex	r3, r2, [r1]
 8006278:	63fb      	str	r3, [r7, #60]	; 0x3c
 800627a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800627c:	2b00      	cmp	r3, #0
 800627e:	d1e6      	bne.n	800624e <UART_CheckIdleState+0x3e>
 8006280:	687b      	ldr	r3, [r7, #4]
 8006282:	2220      	movs	r2, #32
 8006284:	67da      	str	r2, [r3, #124]	; 0x7c
 8006286:	687b      	ldr	r3, [r7, #4]
 8006288:	2200      	movs	r2, #0
 800628a:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 800628e:	2303      	movs	r3, #3
 8006290:	e062      	b.n	8006358 <UART_CheckIdleState+0x148>
 8006292:	687b      	ldr	r3, [r7, #4]
 8006294:	681b      	ldr	r3, [r3, #0]
 8006296:	681b      	ldr	r3, [r3, #0]
 8006298:	f003 0304 	and.w	r3, r3, #4
 800629c:	2b04      	cmp	r3, #4
 800629e:	d149      	bne.n	8006334 <UART_CheckIdleState+0x124>
 80062a0:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80062a4:	9300      	str	r3, [sp, #0]
 80062a6:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80062a8:	2200      	movs	r2, #0
 80062aa:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 80062ae:	6878      	ldr	r0, [r7, #4]
 80062b0:	f000 f856 	bl	8006360 <UART_WaitOnFlagUntilTimeout>
 80062b4:	4603      	mov	r3, r0
 80062b6:	2b00      	cmp	r3, #0
 80062b8:	d03c      	beq.n	8006334 <UART_CheckIdleState+0x124>
 80062ba:	687b      	ldr	r3, [r7, #4]
 80062bc:	681b      	ldr	r3, [r3, #0]
 80062be:	627b      	str	r3, [r7, #36]	; 0x24
 80062c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80062c2:	e853 3f00 	ldrex	r3, [r3]
 80062c6:	623b      	str	r3, [r7, #32]
 80062c8:	6a3b      	ldr	r3, [r7, #32]
 80062ca:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80062ce:	64fb      	str	r3, [r7, #76]	; 0x4c
 80062d0:	687b      	ldr	r3, [r7, #4]
 80062d2:	681b      	ldr	r3, [r3, #0]
 80062d4:	461a      	mov	r2, r3
 80062d6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80062d8:	633b      	str	r3, [r7, #48]	; 0x30
 80062da:	62fa      	str	r2, [r7, #44]	; 0x2c
 80062dc:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80062de:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80062e0:	e841 2300 	strex	r3, r2, [r1]
 80062e4:	62bb      	str	r3, [r7, #40]	; 0x28
 80062e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80062e8:	2b00      	cmp	r3, #0
 80062ea:	d1e6      	bne.n	80062ba <UART_CheckIdleState+0xaa>
 80062ec:	687b      	ldr	r3, [r7, #4]
 80062ee:	681b      	ldr	r3, [r3, #0]
 80062f0:	3308      	adds	r3, #8
 80062f2:	613b      	str	r3, [r7, #16]
 80062f4:	693b      	ldr	r3, [r7, #16]
 80062f6:	e853 3f00 	ldrex	r3, [r3]
 80062fa:	60fb      	str	r3, [r7, #12]
 80062fc:	68fb      	ldr	r3, [r7, #12]
 80062fe:	f023 0301 	bic.w	r3, r3, #1
 8006302:	64bb      	str	r3, [r7, #72]	; 0x48
 8006304:	687b      	ldr	r3, [r7, #4]
 8006306:	681b      	ldr	r3, [r3, #0]
 8006308:	3308      	adds	r3, #8
 800630a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800630c:	61fa      	str	r2, [r7, #28]
 800630e:	61bb      	str	r3, [r7, #24]
 8006310:	69b9      	ldr	r1, [r7, #24]
 8006312:	69fa      	ldr	r2, [r7, #28]
 8006314:	e841 2300 	strex	r3, r2, [r1]
 8006318:	617b      	str	r3, [r7, #20]
 800631a:	697b      	ldr	r3, [r7, #20]
 800631c:	2b00      	cmp	r3, #0
 800631e:	d1e5      	bne.n	80062ec <UART_CheckIdleState+0xdc>
 8006320:	687b      	ldr	r3, [r7, #4]
 8006322:	2220      	movs	r2, #32
 8006324:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8006328:	687b      	ldr	r3, [r7, #4]
 800632a:	2200      	movs	r2, #0
 800632c:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 8006330:	2303      	movs	r3, #3
 8006332:	e011      	b.n	8006358 <UART_CheckIdleState+0x148>
 8006334:	687b      	ldr	r3, [r7, #4]
 8006336:	2220      	movs	r2, #32
 8006338:	67da      	str	r2, [r3, #124]	; 0x7c
 800633a:	687b      	ldr	r3, [r7, #4]
 800633c:	2220      	movs	r2, #32
 800633e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8006342:	687b      	ldr	r3, [r7, #4]
 8006344:	2200      	movs	r2, #0
 8006346:	661a      	str	r2, [r3, #96]	; 0x60
 8006348:	687b      	ldr	r3, [r7, #4]
 800634a:	2200      	movs	r2, #0
 800634c:	665a      	str	r2, [r3, #100]	; 0x64
 800634e:	687b      	ldr	r3, [r7, #4]
 8006350:	2200      	movs	r2, #0
 8006352:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 8006356:	2300      	movs	r3, #0
 8006358:	4618      	mov	r0, r3
 800635a:	3758      	adds	r7, #88	; 0x58
 800635c:	46bd      	mov	sp, r7
 800635e:	bd80      	pop	{r7, pc}

08006360 <UART_WaitOnFlagUntilTimeout>:
 8006360:	b580      	push	{r7, lr}
 8006362:	b084      	sub	sp, #16
 8006364:	af00      	add	r7, sp, #0
 8006366:	60f8      	str	r0, [r7, #12]
 8006368:	60b9      	str	r1, [r7, #8]
 800636a:	603b      	str	r3, [r7, #0]
 800636c:	4613      	mov	r3, r2
 800636e:	71fb      	strb	r3, [r7, #7]
 8006370:	e049      	b.n	8006406 <UART_WaitOnFlagUntilTimeout+0xa6>
 8006372:	69bb      	ldr	r3, [r7, #24]
 8006374:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8006378:	d045      	beq.n	8006406 <UART_WaitOnFlagUntilTimeout+0xa6>
 800637a:	f7fc fdb1 	bl	8002ee0 <HAL_GetTick>
 800637e:	4602      	mov	r2, r0
 8006380:	683b      	ldr	r3, [r7, #0]
 8006382:	1ad3      	subs	r3, r2, r3
 8006384:	69ba      	ldr	r2, [r7, #24]
 8006386:	429a      	cmp	r2, r3
 8006388:	d302      	bcc.n	8006390 <UART_WaitOnFlagUntilTimeout+0x30>
 800638a:	69bb      	ldr	r3, [r7, #24]
 800638c:	2b00      	cmp	r3, #0
 800638e:	d101      	bne.n	8006394 <UART_WaitOnFlagUntilTimeout+0x34>
 8006390:	2303      	movs	r3, #3
 8006392:	e048      	b.n	8006426 <UART_WaitOnFlagUntilTimeout+0xc6>
 8006394:	68fb      	ldr	r3, [r7, #12]
 8006396:	681b      	ldr	r3, [r3, #0]
 8006398:	681b      	ldr	r3, [r3, #0]
 800639a:	f003 0304 	and.w	r3, r3, #4
 800639e:	2b00      	cmp	r3, #0
 80063a0:	d031      	beq.n	8006406 <UART_WaitOnFlagUntilTimeout+0xa6>
 80063a2:	68fb      	ldr	r3, [r7, #12]
 80063a4:	681b      	ldr	r3, [r3, #0]
 80063a6:	69db      	ldr	r3, [r3, #28]
 80063a8:	f003 0308 	and.w	r3, r3, #8
 80063ac:	2b08      	cmp	r3, #8
 80063ae:	d110      	bne.n	80063d2 <UART_WaitOnFlagUntilTimeout+0x72>
 80063b0:	68fb      	ldr	r3, [r7, #12]
 80063b2:	681b      	ldr	r3, [r3, #0]
 80063b4:	2208      	movs	r2, #8
 80063b6:	621a      	str	r2, [r3, #32]
 80063b8:	68f8      	ldr	r0, [r7, #12]
 80063ba:	f000 f8ff 	bl	80065bc <UART_EndRxTransfer>
 80063be:	68fb      	ldr	r3, [r7, #12]
 80063c0:	2208      	movs	r2, #8
 80063c2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 80063c6:	68fb      	ldr	r3, [r7, #12]
 80063c8:	2200      	movs	r2, #0
 80063ca:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 80063ce:	2301      	movs	r3, #1
 80063d0:	e029      	b.n	8006426 <UART_WaitOnFlagUntilTimeout+0xc6>
 80063d2:	68fb      	ldr	r3, [r7, #12]
 80063d4:	681b      	ldr	r3, [r3, #0]
 80063d6:	69db      	ldr	r3, [r3, #28]
 80063d8:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80063dc:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80063e0:	d111      	bne.n	8006406 <UART_WaitOnFlagUntilTimeout+0xa6>
 80063e2:	68fb      	ldr	r3, [r7, #12]
 80063e4:	681b      	ldr	r3, [r3, #0]
 80063e6:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80063ea:	621a      	str	r2, [r3, #32]
 80063ec:	68f8      	ldr	r0, [r7, #12]
 80063ee:	f000 f8e5 	bl	80065bc <UART_EndRxTransfer>
 80063f2:	68fb      	ldr	r3, [r7, #12]
 80063f4:	2220      	movs	r2, #32
 80063f6:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 80063fa:	68fb      	ldr	r3, [r7, #12]
 80063fc:	2200      	movs	r2, #0
 80063fe:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 8006402:	2303      	movs	r3, #3
 8006404:	e00f      	b.n	8006426 <UART_WaitOnFlagUntilTimeout+0xc6>
 8006406:	68fb      	ldr	r3, [r7, #12]
 8006408:	681b      	ldr	r3, [r3, #0]
 800640a:	69da      	ldr	r2, [r3, #28]
 800640c:	68bb      	ldr	r3, [r7, #8]
 800640e:	4013      	ands	r3, r2
 8006410:	68ba      	ldr	r2, [r7, #8]
 8006412:	429a      	cmp	r2, r3
 8006414:	bf0c      	ite	eq
 8006416:	2301      	moveq	r3, #1
 8006418:	2300      	movne	r3, #0
 800641a:	b2db      	uxtb	r3, r3
 800641c:	461a      	mov	r2, r3
 800641e:	79fb      	ldrb	r3, [r7, #7]
 8006420:	429a      	cmp	r2, r3
 8006422:	d0a6      	beq.n	8006372 <UART_WaitOnFlagUntilTimeout+0x12>
 8006424:	2300      	movs	r3, #0
 8006426:	4618      	mov	r0, r3
 8006428:	3710      	adds	r7, #16
 800642a:	46bd      	mov	sp, r7
 800642c:	bd80      	pop	{r7, pc}
	...

08006430 <UART_Start_Receive_IT>:
 8006430:	b480      	push	{r7}
 8006432:	b097      	sub	sp, #92	; 0x5c
 8006434:	af00      	add	r7, sp, #0
 8006436:	60f8      	str	r0, [r7, #12]
 8006438:	60b9      	str	r1, [r7, #8]
 800643a:	4613      	mov	r3, r2
 800643c:	80fb      	strh	r3, [r7, #6]
 800643e:	68fb      	ldr	r3, [r7, #12]
 8006440:	68ba      	ldr	r2, [r7, #8]
 8006442:	655a      	str	r2, [r3, #84]	; 0x54
 8006444:	68fb      	ldr	r3, [r7, #12]
 8006446:	88fa      	ldrh	r2, [r7, #6]
 8006448:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
 800644c:	68fb      	ldr	r3, [r7, #12]
 800644e:	88fa      	ldrh	r2, [r7, #6]
 8006450:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8006454:	68fb      	ldr	r3, [r7, #12]
 8006456:	2200      	movs	r2, #0
 8006458:	669a      	str	r2, [r3, #104]	; 0x68
 800645a:	68fb      	ldr	r3, [r7, #12]
 800645c:	689b      	ldr	r3, [r3, #8]
 800645e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006462:	d10e      	bne.n	8006482 <UART_Start_Receive_IT+0x52>
 8006464:	68fb      	ldr	r3, [r7, #12]
 8006466:	691b      	ldr	r3, [r3, #16]
 8006468:	2b00      	cmp	r3, #0
 800646a:	d105      	bne.n	8006478 <UART_Start_Receive_IT+0x48>
 800646c:	68fb      	ldr	r3, [r7, #12]
 800646e:	f240 12ff 	movw	r2, #511	; 0x1ff
 8006472:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8006476:	e02d      	b.n	80064d4 <UART_Start_Receive_IT+0xa4>
 8006478:	68fb      	ldr	r3, [r7, #12]
 800647a:	22ff      	movs	r2, #255	; 0xff
 800647c:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8006480:	e028      	b.n	80064d4 <UART_Start_Receive_IT+0xa4>
 8006482:	68fb      	ldr	r3, [r7, #12]
 8006484:	689b      	ldr	r3, [r3, #8]
 8006486:	2b00      	cmp	r3, #0
 8006488:	d10d      	bne.n	80064a6 <UART_Start_Receive_IT+0x76>
 800648a:	68fb      	ldr	r3, [r7, #12]
 800648c:	691b      	ldr	r3, [r3, #16]
 800648e:	2b00      	cmp	r3, #0
 8006490:	d104      	bne.n	800649c <UART_Start_Receive_IT+0x6c>
 8006492:	68fb      	ldr	r3, [r7, #12]
 8006494:	22ff      	movs	r2, #255	; 0xff
 8006496:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800649a:	e01b      	b.n	80064d4 <UART_Start_Receive_IT+0xa4>
 800649c:	68fb      	ldr	r3, [r7, #12]
 800649e:	227f      	movs	r2, #127	; 0x7f
 80064a0:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80064a4:	e016      	b.n	80064d4 <UART_Start_Receive_IT+0xa4>
 80064a6:	68fb      	ldr	r3, [r7, #12]
 80064a8:	689b      	ldr	r3, [r3, #8]
 80064aa:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80064ae:	d10d      	bne.n	80064cc <UART_Start_Receive_IT+0x9c>
 80064b0:	68fb      	ldr	r3, [r7, #12]
 80064b2:	691b      	ldr	r3, [r3, #16]
 80064b4:	2b00      	cmp	r3, #0
 80064b6:	d104      	bne.n	80064c2 <UART_Start_Receive_IT+0x92>
 80064b8:	68fb      	ldr	r3, [r7, #12]
 80064ba:	227f      	movs	r2, #127	; 0x7f
 80064bc:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80064c0:	e008      	b.n	80064d4 <UART_Start_Receive_IT+0xa4>
 80064c2:	68fb      	ldr	r3, [r7, #12]
 80064c4:	223f      	movs	r2, #63	; 0x3f
 80064c6:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80064ca:	e003      	b.n	80064d4 <UART_Start_Receive_IT+0xa4>
 80064cc:	68fb      	ldr	r3, [r7, #12]
 80064ce:	2200      	movs	r2, #0
 80064d0:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80064d4:	68fb      	ldr	r3, [r7, #12]
 80064d6:	2200      	movs	r2, #0
 80064d8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 80064dc:	68fb      	ldr	r3, [r7, #12]
 80064de:	2222      	movs	r2, #34	; 0x22
 80064e0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80064e4:	68fb      	ldr	r3, [r7, #12]
 80064e6:	681b      	ldr	r3, [r3, #0]
 80064e8:	3308      	adds	r3, #8
 80064ea:	63fb      	str	r3, [r7, #60]	; 0x3c
 80064ec:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80064ee:	e853 3f00 	ldrex	r3, [r3]
 80064f2:	63bb      	str	r3, [r7, #56]	; 0x38
 80064f4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80064f6:	f043 0301 	orr.w	r3, r3, #1
 80064fa:	657b      	str	r3, [r7, #84]	; 0x54
 80064fc:	68fb      	ldr	r3, [r7, #12]
 80064fe:	681b      	ldr	r3, [r3, #0]
 8006500:	3308      	adds	r3, #8
 8006502:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8006504:	64ba      	str	r2, [r7, #72]	; 0x48
 8006506:	647b      	str	r3, [r7, #68]	; 0x44
 8006508:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800650a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800650c:	e841 2300 	strex	r3, r2, [r1]
 8006510:	643b      	str	r3, [r7, #64]	; 0x40
 8006512:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8006514:	2b00      	cmp	r3, #0
 8006516:	d1e5      	bne.n	80064e4 <UART_Start_Receive_IT+0xb4>
 8006518:	68fb      	ldr	r3, [r7, #12]
 800651a:	689b      	ldr	r3, [r3, #8]
 800651c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006520:	d107      	bne.n	8006532 <UART_Start_Receive_IT+0x102>
 8006522:	68fb      	ldr	r3, [r7, #12]
 8006524:	691b      	ldr	r3, [r3, #16]
 8006526:	2b00      	cmp	r3, #0
 8006528:	d103      	bne.n	8006532 <UART_Start_Receive_IT+0x102>
 800652a:	68fb      	ldr	r3, [r7, #12]
 800652c:	4a21      	ldr	r2, [pc, #132]	; (80065b4 <UART_Start_Receive_IT+0x184>)
 800652e:	669a      	str	r2, [r3, #104]	; 0x68
 8006530:	e002      	b.n	8006538 <UART_Start_Receive_IT+0x108>
 8006532:	68fb      	ldr	r3, [r7, #12]
 8006534:	4a20      	ldr	r2, [pc, #128]	; (80065b8 <UART_Start_Receive_IT+0x188>)
 8006536:	669a      	str	r2, [r3, #104]	; 0x68
 8006538:	68fb      	ldr	r3, [r7, #12]
 800653a:	691b      	ldr	r3, [r3, #16]
 800653c:	2b00      	cmp	r3, #0
 800653e:	d019      	beq.n	8006574 <UART_Start_Receive_IT+0x144>
 8006540:	68fb      	ldr	r3, [r7, #12]
 8006542:	681b      	ldr	r3, [r3, #0]
 8006544:	62bb      	str	r3, [r7, #40]	; 0x28
 8006546:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006548:	e853 3f00 	ldrex	r3, [r3]
 800654c:	627b      	str	r3, [r7, #36]	; 0x24
 800654e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006550:	f443 7390 	orr.w	r3, r3, #288	; 0x120
 8006554:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006556:	68fb      	ldr	r3, [r7, #12]
 8006558:	681b      	ldr	r3, [r3, #0]
 800655a:	461a      	mov	r2, r3
 800655c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800655e:	637b      	str	r3, [r7, #52]	; 0x34
 8006560:	633a      	str	r2, [r7, #48]	; 0x30
 8006562:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8006564:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8006566:	e841 2300 	strex	r3, r2, [r1]
 800656a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800656c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800656e:	2b00      	cmp	r3, #0
 8006570:	d1e6      	bne.n	8006540 <UART_Start_Receive_IT+0x110>
 8006572:	e018      	b.n	80065a6 <UART_Start_Receive_IT+0x176>
 8006574:	68fb      	ldr	r3, [r7, #12]
 8006576:	681b      	ldr	r3, [r3, #0]
 8006578:	617b      	str	r3, [r7, #20]
 800657a:	697b      	ldr	r3, [r7, #20]
 800657c:	e853 3f00 	ldrex	r3, [r3]
 8006580:	613b      	str	r3, [r7, #16]
 8006582:	693b      	ldr	r3, [r7, #16]
 8006584:	f043 0320 	orr.w	r3, r3, #32
 8006588:	653b      	str	r3, [r7, #80]	; 0x50
 800658a:	68fb      	ldr	r3, [r7, #12]
 800658c:	681b      	ldr	r3, [r3, #0]
 800658e:	461a      	mov	r2, r3
 8006590:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8006592:	623b      	str	r3, [r7, #32]
 8006594:	61fa      	str	r2, [r7, #28]
 8006596:	69f9      	ldr	r1, [r7, #28]
 8006598:	6a3a      	ldr	r2, [r7, #32]
 800659a:	e841 2300 	strex	r3, r2, [r1]
 800659e:	61bb      	str	r3, [r7, #24]
 80065a0:	69bb      	ldr	r3, [r7, #24]
 80065a2:	2b00      	cmp	r3, #0
 80065a4:	d1e6      	bne.n	8006574 <UART_Start_Receive_IT+0x144>
 80065a6:	2300      	movs	r3, #0
 80065a8:	4618      	mov	r0, r3
 80065aa:	375c      	adds	r7, #92	; 0x5c
 80065ac:	46bd      	mov	sp, r7
 80065ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065b2:	4770      	bx	lr
 80065b4:	080068c1 	.word	0x080068c1
 80065b8:	08006705 	.word	0x08006705

080065bc <UART_EndRxTransfer>:
 80065bc:	b480      	push	{r7}
 80065be:	b095      	sub	sp, #84	; 0x54
 80065c0:	af00      	add	r7, sp, #0
 80065c2:	6078      	str	r0, [r7, #4]
 80065c4:	687b      	ldr	r3, [r7, #4]
 80065c6:	681b      	ldr	r3, [r3, #0]
 80065c8:	637b      	str	r3, [r7, #52]	; 0x34
 80065ca:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80065cc:	e853 3f00 	ldrex	r3, [r3]
 80065d0:	633b      	str	r3, [r7, #48]	; 0x30
 80065d2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80065d4:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80065d8:	64fb      	str	r3, [r7, #76]	; 0x4c
 80065da:	687b      	ldr	r3, [r7, #4]
 80065dc:	681b      	ldr	r3, [r3, #0]
 80065de:	461a      	mov	r2, r3
 80065e0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80065e2:	643b      	str	r3, [r7, #64]	; 0x40
 80065e4:	63fa      	str	r2, [r7, #60]	; 0x3c
 80065e6:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 80065e8:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 80065ea:	e841 2300 	strex	r3, r2, [r1]
 80065ee:	63bb      	str	r3, [r7, #56]	; 0x38
 80065f0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80065f2:	2b00      	cmp	r3, #0
 80065f4:	d1e6      	bne.n	80065c4 <UART_EndRxTransfer+0x8>
 80065f6:	687b      	ldr	r3, [r7, #4]
 80065f8:	681b      	ldr	r3, [r3, #0]
 80065fa:	3308      	adds	r3, #8
 80065fc:	623b      	str	r3, [r7, #32]
 80065fe:	6a3b      	ldr	r3, [r7, #32]
 8006600:	e853 3f00 	ldrex	r3, [r3]
 8006604:	61fb      	str	r3, [r7, #28]
 8006606:	69fb      	ldr	r3, [r7, #28]
 8006608:	f023 0301 	bic.w	r3, r3, #1
 800660c:	64bb      	str	r3, [r7, #72]	; 0x48
 800660e:	687b      	ldr	r3, [r7, #4]
 8006610:	681b      	ldr	r3, [r3, #0]
 8006612:	3308      	adds	r3, #8
 8006614:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006616:	62fa      	str	r2, [r7, #44]	; 0x2c
 8006618:	62bb      	str	r3, [r7, #40]	; 0x28
 800661a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800661c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800661e:	e841 2300 	strex	r3, r2, [r1]
 8006622:	627b      	str	r3, [r7, #36]	; 0x24
 8006624:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006626:	2b00      	cmp	r3, #0
 8006628:	d1e5      	bne.n	80065f6 <UART_EndRxTransfer+0x3a>
 800662a:	687b      	ldr	r3, [r7, #4]
 800662c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800662e:	2b01      	cmp	r3, #1
 8006630:	d118      	bne.n	8006664 <UART_EndRxTransfer+0xa8>
 8006632:	687b      	ldr	r3, [r7, #4]
 8006634:	681b      	ldr	r3, [r3, #0]
 8006636:	60fb      	str	r3, [r7, #12]
 8006638:	68fb      	ldr	r3, [r7, #12]
 800663a:	e853 3f00 	ldrex	r3, [r3]
 800663e:	60bb      	str	r3, [r7, #8]
 8006640:	68bb      	ldr	r3, [r7, #8]
 8006642:	f023 0310 	bic.w	r3, r3, #16
 8006646:	647b      	str	r3, [r7, #68]	; 0x44
 8006648:	687b      	ldr	r3, [r7, #4]
 800664a:	681b      	ldr	r3, [r3, #0]
 800664c:	461a      	mov	r2, r3
 800664e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8006650:	61bb      	str	r3, [r7, #24]
 8006652:	617a      	str	r2, [r7, #20]
 8006654:	6979      	ldr	r1, [r7, #20]
 8006656:	69ba      	ldr	r2, [r7, #24]
 8006658:	e841 2300 	strex	r3, r2, [r1]
 800665c:	613b      	str	r3, [r7, #16]
 800665e:	693b      	ldr	r3, [r7, #16]
 8006660:	2b00      	cmp	r3, #0
 8006662:	d1e6      	bne.n	8006632 <UART_EndRxTransfer+0x76>
 8006664:	687b      	ldr	r3, [r7, #4]
 8006666:	2220      	movs	r2, #32
 8006668:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800666c:	687b      	ldr	r3, [r7, #4]
 800666e:	2200      	movs	r2, #0
 8006670:	661a      	str	r2, [r3, #96]	; 0x60
 8006672:	687b      	ldr	r3, [r7, #4]
 8006674:	2200      	movs	r2, #0
 8006676:	669a      	str	r2, [r3, #104]	; 0x68
 8006678:	bf00      	nop
 800667a:	3754      	adds	r7, #84	; 0x54
 800667c:	46bd      	mov	sp, r7
 800667e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006682:	4770      	bx	lr

08006684 <UART_DMAAbortOnError>:
 8006684:	b580      	push	{r7, lr}
 8006686:	b084      	sub	sp, #16
 8006688:	af00      	add	r7, sp, #0
 800668a:	6078      	str	r0, [r7, #4]
 800668c:	687b      	ldr	r3, [r7, #4]
 800668e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006690:	60fb      	str	r3, [r7, #12]
 8006692:	68fb      	ldr	r3, [r7, #12]
 8006694:	2200      	movs	r2, #0
 8006696:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 800669a:	68fb      	ldr	r3, [r7, #12]
 800669c:	2200      	movs	r2, #0
 800669e:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 80066a2:	68f8      	ldr	r0, [r7, #12]
 80066a4:	f7ff faa2 	bl	8005bec <HAL_UART_ErrorCallback>
 80066a8:	bf00      	nop
 80066aa:	3710      	adds	r7, #16
 80066ac:	46bd      	mov	sp, r7
 80066ae:	bd80      	pop	{r7, pc}

080066b0 <UART_EndTransmit_IT>:
 80066b0:	b580      	push	{r7, lr}
 80066b2:	b088      	sub	sp, #32
 80066b4:	af00      	add	r7, sp, #0
 80066b6:	6078      	str	r0, [r7, #4]
 80066b8:	687b      	ldr	r3, [r7, #4]
 80066ba:	681b      	ldr	r3, [r3, #0]
 80066bc:	60fb      	str	r3, [r7, #12]
 80066be:	68fb      	ldr	r3, [r7, #12]
 80066c0:	e853 3f00 	ldrex	r3, [r3]
 80066c4:	60bb      	str	r3, [r7, #8]
 80066c6:	68bb      	ldr	r3, [r7, #8]
 80066c8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80066cc:	61fb      	str	r3, [r7, #28]
 80066ce:	687b      	ldr	r3, [r7, #4]
 80066d0:	681b      	ldr	r3, [r3, #0]
 80066d2:	461a      	mov	r2, r3
 80066d4:	69fb      	ldr	r3, [r7, #28]
 80066d6:	61bb      	str	r3, [r7, #24]
 80066d8:	617a      	str	r2, [r7, #20]
 80066da:	6979      	ldr	r1, [r7, #20]
 80066dc:	69ba      	ldr	r2, [r7, #24]
 80066de:	e841 2300 	strex	r3, r2, [r1]
 80066e2:	613b      	str	r3, [r7, #16]
 80066e4:	693b      	ldr	r3, [r7, #16]
 80066e6:	2b00      	cmp	r3, #0
 80066e8:	d1e6      	bne.n	80066b8 <UART_EndTransmit_IT+0x8>
 80066ea:	687b      	ldr	r3, [r7, #4]
 80066ec:	2220      	movs	r2, #32
 80066ee:	67da      	str	r2, [r3, #124]	; 0x7c
 80066f0:	687b      	ldr	r3, [r7, #4]
 80066f2:	2200      	movs	r2, #0
 80066f4:	66da      	str	r2, [r3, #108]	; 0x6c
 80066f6:	6878      	ldr	r0, [r7, #4]
 80066f8:	f7ff fa6e 	bl	8005bd8 <HAL_UART_TxCpltCallback>
 80066fc:	bf00      	nop
 80066fe:	3720      	adds	r7, #32
 8006700:	46bd      	mov	sp, r7
 8006702:	bd80      	pop	{r7, pc}

08006704 <UART_RxISR_8BIT>:
 8006704:	b580      	push	{r7, lr}
 8006706:	b09c      	sub	sp, #112	; 0x70
 8006708:	af00      	add	r7, sp, #0
 800670a:	6078      	str	r0, [r7, #4]
 800670c:	687b      	ldr	r3, [r7, #4]
 800670e:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8006712:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
 8006716:	687b      	ldr	r3, [r7, #4]
 8006718:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800671c:	2b22      	cmp	r3, #34	; 0x22
 800671e:	f040 80be 	bne.w	800689e <UART_RxISR_8BIT+0x19a>
 8006722:	687b      	ldr	r3, [r7, #4]
 8006724:	681b      	ldr	r3, [r3, #0]
 8006726:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8006728:	f8a7 306c 	strh.w	r3, [r7, #108]	; 0x6c
 800672c:	f8b7 306c 	ldrh.w	r3, [r7, #108]	; 0x6c
 8006730:	b2d9      	uxtb	r1, r3
 8006732:	f8b7 306e 	ldrh.w	r3, [r7, #110]	; 0x6e
 8006736:	b2da      	uxtb	r2, r3
 8006738:	687b      	ldr	r3, [r7, #4]
 800673a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800673c:	400a      	ands	r2, r1
 800673e:	b2d2      	uxtb	r2, r2
 8006740:	701a      	strb	r2, [r3, #0]
 8006742:	687b      	ldr	r3, [r7, #4]
 8006744:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006746:	1c5a      	adds	r2, r3, #1
 8006748:	687b      	ldr	r3, [r7, #4]
 800674a:	655a      	str	r2, [r3, #84]	; 0x54
 800674c:	687b      	ldr	r3, [r7, #4]
 800674e:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8006752:	b29b      	uxth	r3, r3
 8006754:	3b01      	subs	r3, #1
 8006756:	b29a      	uxth	r2, r3
 8006758:	687b      	ldr	r3, [r7, #4]
 800675a:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 800675e:	687b      	ldr	r3, [r7, #4]
 8006760:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8006764:	b29b      	uxth	r3, r3
 8006766:	2b00      	cmp	r3, #0
 8006768:	f040 80a3 	bne.w	80068b2 <UART_RxISR_8BIT+0x1ae>
 800676c:	687b      	ldr	r3, [r7, #4]
 800676e:	681b      	ldr	r3, [r3, #0]
 8006770:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006772:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8006774:	e853 3f00 	ldrex	r3, [r3]
 8006778:	64bb      	str	r3, [r7, #72]	; 0x48
 800677a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800677c:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8006780:	66bb      	str	r3, [r7, #104]	; 0x68
 8006782:	687b      	ldr	r3, [r7, #4]
 8006784:	681b      	ldr	r3, [r3, #0]
 8006786:	461a      	mov	r2, r3
 8006788:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800678a:	65bb      	str	r3, [r7, #88]	; 0x58
 800678c:	657a      	str	r2, [r7, #84]	; 0x54
 800678e:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8006790:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8006792:	e841 2300 	strex	r3, r2, [r1]
 8006796:	653b      	str	r3, [r7, #80]	; 0x50
 8006798:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800679a:	2b00      	cmp	r3, #0
 800679c:	d1e6      	bne.n	800676c <UART_RxISR_8BIT+0x68>
 800679e:	687b      	ldr	r3, [r7, #4]
 80067a0:	681b      	ldr	r3, [r3, #0]
 80067a2:	3308      	adds	r3, #8
 80067a4:	63bb      	str	r3, [r7, #56]	; 0x38
 80067a6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80067a8:	e853 3f00 	ldrex	r3, [r3]
 80067ac:	637b      	str	r3, [r7, #52]	; 0x34
 80067ae:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80067b0:	f023 0301 	bic.w	r3, r3, #1
 80067b4:	667b      	str	r3, [r7, #100]	; 0x64
 80067b6:	687b      	ldr	r3, [r7, #4]
 80067b8:	681b      	ldr	r3, [r3, #0]
 80067ba:	3308      	adds	r3, #8
 80067bc:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 80067be:	647a      	str	r2, [r7, #68]	; 0x44
 80067c0:	643b      	str	r3, [r7, #64]	; 0x40
 80067c2:	6c39      	ldr	r1, [r7, #64]	; 0x40
 80067c4:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80067c6:	e841 2300 	strex	r3, r2, [r1]
 80067ca:	63fb      	str	r3, [r7, #60]	; 0x3c
 80067cc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80067ce:	2b00      	cmp	r3, #0
 80067d0:	d1e5      	bne.n	800679e <UART_RxISR_8BIT+0x9a>
 80067d2:	687b      	ldr	r3, [r7, #4]
 80067d4:	2220      	movs	r2, #32
 80067d6:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80067da:	687b      	ldr	r3, [r7, #4]
 80067dc:	2200      	movs	r2, #0
 80067de:	669a      	str	r2, [r3, #104]	; 0x68
 80067e0:	687b      	ldr	r3, [r7, #4]
 80067e2:	2200      	movs	r2, #0
 80067e4:	665a      	str	r2, [r3, #100]	; 0x64
 80067e6:	687b      	ldr	r3, [r7, #4]
 80067e8:	681b      	ldr	r3, [r3, #0]
 80067ea:	4a34      	ldr	r2, [pc, #208]	; (80068bc <UART_RxISR_8BIT+0x1b8>)
 80067ec:	4293      	cmp	r3, r2
 80067ee:	d01f      	beq.n	8006830 <UART_RxISR_8BIT+0x12c>
 80067f0:	687b      	ldr	r3, [r7, #4]
 80067f2:	681b      	ldr	r3, [r3, #0]
 80067f4:	685b      	ldr	r3, [r3, #4]
 80067f6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80067fa:	2b00      	cmp	r3, #0
 80067fc:	d018      	beq.n	8006830 <UART_RxISR_8BIT+0x12c>
 80067fe:	687b      	ldr	r3, [r7, #4]
 8006800:	681b      	ldr	r3, [r3, #0]
 8006802:	627b      	str	r3, [r7, #36]	; 0x24
 8006804:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006806:	e853 3f00 	ldrex	r3, [r3]
 800680a:	623b      	str	r3, [r7, #32]
 800680c:	6a3b      	ldr	r3, [r7, #32]
 800680e:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8006812:	663b      	str	r3, [r7, #96]	; 0x60
 8006814:	687b      	ldr	r3, [r7, #4]
 8006816:	681b      	ldr	r3, [r3, #0]
 8006818:	461a      	mov	r2, r3
 800681a:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800681c:	633b      	str	r3, [r7, #48]	; 0x30
 800681e:	62fa      	str	r2, [r7, #44]	; 0x2c
 8006820:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8006822:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8006824:	e841 2300 	strex	r3, r2, [r1]
 8006828:	62bb      	str	r3, [r7, #40]	; 0x28
 800682a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800682c:	2b00      	cmp	r3, #0
 800682e:	d1e6      	bne.n	80067fe <UART_RxISR_8BIT+0xfa>
 8006830:	687b      	ldr	r3, [r7, #4]
 8006832:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006834:	2b01      	cmp	r3, #1
 8006836:	d12e      	bne.n	8006896 <UART_RxISR_8BIT+0x192>
 8006838:	687b      	ldr	r3, [r7, #4]
 800683a:	2200      	movs	r2, #0
 800683c:	661a      	str	r2, [r3, #96]	; 0x60
 800683e:	687b      	ldr	r3, [r7, #4]
 8006840:	681b      	ldr	r3, [r3, #0]
 8006842:	613b      	str	r3, [r7, #16]
 8006844:	693b      	ldr	r3, [r7, #16]
 8006846:	e853 3f00 	ldrex	r3, [r3]
 800684a:	60fb      	str	r3, [r7, #12]
 800684c:	68fb      	ldr	r3, [r7, #12]
 800684e:	f023 0310 	bic.w	r3, r3, #16
 8006852:	65fb      	str	r3, [r7, #92]	; 0x5c
 8006854:	687b      	ldr	r3, [r7, #4]
 8006856:	681b      	ldr	r3, [r3, #0]
 8006858:	461a      	mov	r2, r3
 800685a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800685c:	61fb      	str	r3, [r7, #28]
 800685e:	61ba      	str	r2, [r7, #24]
 8006860:	69b9      	ldr	r1, [r7, #24]
 8006862:	69fa      	ldr	r2, [r7, #28]
 8006864:	e841 2300 	strex	r3, r2, [r1]
 8006868:	617b      	str	r3, [r7, #20]
 800686a:	697b      	ldr	r3, [r7, #20]
 800686c:	2b00      	cmp	r3, #0
 800686e:	d1e6      	bne.n	800683e <UART_RxISR_8BIT+0x13a>
 8006870:	687b      	ldr	r3, [r7, #4]
 8006872:	681b      	ldr	r3, [r3, #0]
 8006874:	69db      	ldr	r3, [r3, #28]
 8006876:	f003 0310 	and.w	r3, r3, #16
 800687a:	2b10      	cmp	r3, #16
 800687c:	d103      	bne.n	8006886 <UART_RxISR_8BIT+0x182>
 800687e:	687b      	ldr	r3, [r7, #4]
 8006880:	681b      	ldr	r3, [r3, #0]
 8006882:	2210      	movs	r2, #16
 8006884:	621a      	str	r2, [r3, #32]
 8006886:	687b      	ldr	r3, [r7, #4]
 8006888:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 800688c:	4619      	mov	r1, r3
 800688e:	6878      	ldr	r0, [r7, #4]
 8006890:	f7ff f9b6 	bl	8005c00 <HAL_UARTEx_RxEventCallback>
 8006894:	e00d      	b.n	80068b2 <UART_RxISR_8BIT+0x1ae>
 8006896:	6878      	ldr	r0, [r7, #4]
 8006898:	f7fb f9f8 	bl	8001c8c <HAL_UART_RxCpltCallback>
 800689c:	e009      	b.n	80068b2 <UART_RxISR_8BIT+0x1ae>
 800689e:	687b      	ldr	r3, [r7, #4]
 80068a0:	681b      	ldr	r3, [r3, #0]
 80068a2:	8b1b      	ldrh	r3, [r3, #24]
 80068a4:	b29a      	uxth	r2, r3
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	681b      	ldr	r3, [r3, #0]
 80068aa:	f042 0208 	orr.w	r2, r2, #8
 80068ae:	b292      	uxth	r2, r2
 80068b0:	831a      	strh	r2, [r3, #24]
 80068b2:	bf00      	nop
 80068b4:	3770      	adds	r7, #112	; 0x70
 80068b6:	46bd      	mov	sp, r7
 80068b8:	bd80      	pop	{r7, pc}
 80068ba:	bf00      	nop
 80068bc:	40008000 	.word	0x40008000

080068c0 <UART_RxISR_16BIT>:
 80068c0:	b580      	push	{r7, lr}
 80068c2:	b09c      	sub	sp, #112	; 0x70
 80068c4:	af00      	add	r7, sp, #0
 80068c6:	6078      	str	r0, [r7, #4]
 80068c8:	687b      	ldr	r3, [r7, #4]
 80068ca:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 80068ce:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
 80068d2:	687b      	ldr	r3, [r7, #4]
 80068d4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80068d8:	2b22      	cmp	r3, #34	; 0x22
 80068da:	f040 80be 	bne.w	8006a5a <UART_RxISR_16BIT+0x19a>
 80068de:	687b      	ldr	r3, [r7, #4]
 80068e0:	681b      	ldr	r3, [r3, #0]
 80068e2:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 80068e4:	f8a7 306c 	strh.w	r3, [r7, #108]	; 0x6c
 80068e8:	687b      	ldr	r3, [r7, #4]
 80068ea:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80068ec:	66bb      	str	r3, [r7, #104]	; 0x68
 80068ee:	f8b7 206c 	ldrh.w	r2, [r7, #108]	; 0x6c
 80068f2:	f8b7 306e 	ldrh.w	r3, [r7, #110]	; 0x6e
 80068f6:	4013      	ands	r3, r2
 80068f8:	b29a      	uxth	r2, r3
 80068fa:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80068fc:	801a      	strh	r2, [r3, #0]
 80068fe:	687b      	ldr	r3, [r7, #4]
 8006900:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006902:	1c9a      	adds	r2, r3, #2
 8006904:	687b      	ldr	r3, [r7, #4]
 8006906:	655a      	str	r2, [r3, #84]	; 0x54
 8006908:	687b      	ldr	r3, [r7, #4]
 800690a:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 800690e:	b29b      	uxth	r3, r3
 8006910:	3b01      	subs	r3, #1
 8006912:	b29a      	uxth	r2, r3
 8006914:	687b      	ldr	r3, [r7, #4]
 8006916:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 800691a:	687b      	ldr	r3, [r7, #4]
 800691c:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8006920:	b29b      	uxth	r3, r3
 8006922:	2b00      	cmp	r3, #0
 8006924:	f040 80a3 	bne.w	8006a6e <UART_RxISR_16BIT+0x1ae>
 8006928:	687b      	ldr	r3, [r7, #4]
 800692a:	681b      	ldr	r3, [r3, #0]
 800692c:	64bb      	str	r3, [r7, #72]	; 0x48
 800692e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006930:	e853 3f00 	ldrex	r3, [r3]
 8006934:	647b      	str	r3, [r7, #68]	; 0x44
 8006936:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8006938:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800693c:	667b      	str	r3, [r7, #100]	; 0x64
 800693e:	687b      	ldr	r3, [r7, #4]
 8006940:	681b      	ldr	r3, [r3, #0]
 8006942:	461a      	mov	r2, r3
 8006944:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8006946:	657b      	str	r3, [r7, #84]	; 0x54
 8006948:	653a      	str	r2, [r7, #80]	; 0x50
 800694a:	6d39      	ldr	r1, [r7, #80]	; 0x50
 800694c:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 800694e:	e841 2300 	strex	r3, r2, [r1]
 8006952:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006954:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8006956:	2b00      	cmp	r3, #0
 8006958:	d1e6      	bne.n	8006928 <UART_RxISR_16BIT+0x68>
 800695a:	687b      	ldr	r3, [r7, #4]
 800695c:	681b      	ldr	r3, [r3, #0]
 800695e:	3308      	adds	r3, #8
 8006960:	637b      	str	r3, [r7, #52]	; 0x34
 8006962:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006964:	e853 3f00 	ldrex	r3, [r3]
 8006968:	633b      	str	r3, [r7, #48]	; 0x30
 800696a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800696c:	f023 0301 	bic.w	r3, r3, #1
 8006970:	663b      	str	r3, [r7, #96]	; 0x60
 8006972:	687b      	ldr	r3, [r7, #4]
 8006974:	681b      	ldr	r3, [r3, #0]
 8006976:	3308      	adds	r3, #8
 8006978:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800697a:	643a      	str	r2, [r7, #64]	; 0x40
 800697c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800697e:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8006980:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8006982:	e841 2300 	strex	r3, r2, [r1]
 8006986:	63bb      	str	r3, [r7, #56]	; 0x38
 8006988:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800698a:	2b00      	cmp	r3, #0
 800698c:	d1e5      	bne.n	800695a <UART_RxISR_16BIT+0x9a>
 800698e:	687b      	ldr	r3, [r7, #4]
 8006990:	2220      	movs	r2, #32
 8006992:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8006996:	687b      	ldr	r3, [r7, #4]
 8006998:	2200      	movs	r2, #0
 800699a:	669a      	str	r2, [r3, #104]	; 0x68
 800699c:	687b      	ldr	r3, [r7, #4]
 800699e:	2200      	movs	r2, #0
 80069a0:	665a      	str	r2, [r3, #100]	; 0x64
 80069a2:	687b      	ldr	r3, [r7, #4]
 80069a4:	681b      	ldr	r3, [r3, #0]
 80069a6:	4a34      	ldr	r2, [pc, #208]	; (8006a78 <UART_RxISR_16BIT+0x1b8>)
 80069a8:	4293      	cmp	r3, r2
 80069aa:	d01f      	beq.n	80069ec <UART_RxISR_16BIT+0x12c>
 80069ac:	687b      	ldr	r3, [r7, #4]
 80069ae:	681b      	ldr	r3, [r3, #0]
 80069b0:	685b      	ldr	r3, [r3, #4]
 80069b2:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80069b6:	2b00      	cmp	r3, #0
 80069b8:	d018      	beq.n	80069ec <UART_RxISR_16BIT+0x12c>
 80069ba:	687b      	ldr	r3, [r7, #4]
 80069bc:	681b      	ldr	r3, [r3, #0]
 80069be:	623b      	str	r3, [r7, #32]
 80069c0:	6a3b      	ldr	r3, [r7, #32]
 80069c2:	e853 3f00 	ldrex	r3, [r3]
 80069c6:	61fb      	str	r3, [r7, #28]
 80069c8:	69fb      	ldr	r3, [r7, #28]
 80069ca:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80069ce:	65fb      	str	r3, [r7, #92]	; 0x5c
 80069d0:	687b      	ldr	r3, [r7, #4]
 80069d2:	681b      	ldr	r3, [r3, #0]
 80069d4:	461a      	mov	r2, r3
 80069d6:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80069d8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80069da:	62ba      	str	r2, [r7, #40]	; 0x28
 80069dc:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80069de:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80069e0:	e841 2300 	strex	r3, r2, [r1]
 80069e4:	627b      	str	r3, [r7, #36]	; 0x24
 80069e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80069e8:	2b00      	cmp	r3, #0
 80069ea:	d1e6      	bne.n	80069ba <UART_RxISR_16BIT+0xfa>
 80069ec:	687b      	ldr	r3, [r7, #4]
 80069ee:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80069f0:	2b01      	cmp	r3, #1
 80069f2:	d12e      	bne.n	8006a52 <UART_RxISR_16BIT+0x192>
 80069f4:	687b      	ldr	r3, [r7, #4]
 80069f6:	2200      	movs	r2, #0
 80069f8:	661a      	str	r2, [r3, #96]	; 0x60
 80069fa:	687b      	ldr	r3, [r7, #4]
 80069fc:	681b      	ldr	r3, [r3, #0]
 80069fe:	60fb      	str	r3, [r7, #12]
 8006a00:	68fb      	ldr	r3, [r7, #12]
 8006a02:	e853 3f00 	ldrex	r3, [r3]
 8006a06:	60bb      	str	r3, [r7, #8]
 8006a08:	68bb      	ldr	r3, [r7, #8]
 8006a0a:	f023 0310 	bic.w	r3, r3, #16
 8006a0e:	65bb      	str	r3, [r7, #88]	; 0x58
 8006a10:	687b      	ldr	r3, [r7, #4]
 8006a12:	681b      	ldr	r3, [r3, #0]
 8006a14:	461a      	mov	r2, r3
 8006a16:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8006a18:	61bb      	str	r3, [r7, #24]
 8006a1a:	617a      	str	r2, [r7, #20]
 8006a1c:	6979      	ldr	r1, [r7, #20]
 8006a1e:	69ba      	ldr	r2, [r7, #24]
 8006a20:	e841 2300 	strex	r3, r2, [r1]
 8006a24:	613b      	str	r3, [r7, #16]
 8006a26:	693b      	ldr	r3, [r7, #16]
 8006a28:	2b00      	cmp	r3, #0
 8006a2a:	d1e6      	bne.n	80069fa <UART_RxISR_16BIT+0x13a>
 8006a2c:	687b      	ldr	r3, [r7, #4]
 8006a2e:	681b      	ldr	r3, [r3, #0]
 8006a30:	69db      	ldr	r3, [r3, #28]
 8006a32:	f003 0310 	and.w	r3, r3, #16
 8006a36:	2b10      	cmp	r3, #16
 8006a38:	d103      	bne.n	8006a42 <UART_RxISR_16BIT+0x182>
 8006a3a:	687b      	ldr	r3, [r7, #4]
 8006a3c:	681b      	ldr	r3, [r3, #0]
 8006a3e:	2210      	movs	r2, #16
 8006a40:	621a      	str	r2, [r3, #32]
 8006a42:	687b      	ldr	r3, [r7, #4]
 8006a44:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 8006a48:	4619      	mov	r1, r3
 8006a4a:	6878      	ldr	r0, [r7, #4]
 8006a4c:	f7ff f8d8 	bl	8005c00 <HAL_UARTEx_RxEventCallback>
 8006a50:	e00d      	b.n	8006a6e <UART_RxISR_16BIT+0x1ae>
 8006a52:	6878      	ldr	r0, [r7, #4]
 8006a54:	f7fb f91a 	bl	8001c8c <HAL_UART_RxCpltCallback>
 8006a58:	e009      	b.n	8006a6e <UART_RxISR_16BIT+0x1ae>
 8006a5a:	687b      	ldr	r3, [r7, #4]
 8006a5c:	681b      	ldr	r3, [r3, #0]
 8006a5e:	8b1b      	ldrh	r3, [r3, #24]
 8006a60:	b29a      	uxth	r2, r3
 8006a62:	687b      	ldr	r3, [r7, #4]
 8006a64:	681b      	ldr	r3, [r3, #0]
 8006a66:	f042 0208 	orr.w	r2, r2, #8
 8006a6a:	b292      	uxth	r2, r2
 8006a6c:	831a      	strh	r2, [r3, #24]
 8006a6e:	bf00      	nop
 8006a70:	3770      	adds	r7, #112	; 0x70
 8006a72:	46bd      	mov	sp, r7
 8006a74:	bd80      	pop	{r7, pc}
 8006a76:	bf00      	nop
 8006a78:	40008000 	.word	0x40008000

08006a7c <HAL_UARTEx_WakeupCallback>:
 8006a7c:	b480      	push	{r7}
 8006a7e:	b083      	sub	sp, #12
 8006a80:	af00      	add	r7, sp, #0
 8006a82:	6078      	str	r0, [r7, #4]
 8006a84:	bf00      	nop
 8006a86:	370c      	adds	r7, #12
 8006a88:	46bd      	mov	sp, r7
 8006a8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a8e:	4770      	bx	lr

08006a90 <atof>:
 8006a90:	2100      	movs	r1, #0
 8006a92:	f001 bb41 	b.w	8008118 <strtod>

08006a96 <__itoa>:
 8006a96:	1e93      	subs	r3, r2, #2
 8006a98:	2b22      	cmp	r3, #34	; 0x22
 8006a9a:	b510      	push	{r4, lr}
 8006a9c:	460c      	mov	r4, r1
 8006a9e:	d904      	bls.n	8006aaa <__itoa+0x14>
 8006aa0:	2300      	movs	r3, #0
 8006aa2:	700b      	strb	r3, [r1, #0]
 8006aa4:	461c      	mov	r4, r3
 8006aa6:	4620      	mov	r0, r4
 8006aa8:	bd10      	pop	{r4, pc}
 8006aaa:	2a0a      	cmp	r2, #10
 8006aac:	d109      	bne.n	8006ac2 <__itoa+0x2c>
 8006aae:	2800      	cmp	r0, #0
 8006ab0:	da07      	bge.n	8006ac2 <__itoa+0x2c>
 8006ab2:	232d      	movs	r3, #45	; 0x2d
 8006ab4:	700b      	strb	r3, [r1, #0]
 8006ab6:	4240      	negs	r0, r0
 8006ab8:	2101      	movs	r1, #1
 8006aba:	4421      	add	r1, r4
 8006abc:	f001 fb38 	bl	8008130 <__utoa>
 8006ac0:	e7f1      	b.n	8006aa6 <__itoa+0x10>
 8006ac2:	2100      	movs	r1, #0
 8006ac4:	e7f9      	b.n	8006aba <__itoa+0x24>

08006ac6 <itoa>:
 8006ac6:	f7ff bfe6 	b.w	8006a96 <__itoa>

08006aca <__cvt>:
 8006aca:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006ace:	ec55 4b10 	vmov	r4, r5, d0
 8006ad2:	2d00      	cmp	r5, #0
 8006ad4:	460e      	mov	r6, r1
 8006ad6:	4619      	mov	r1, r3
 8006ad8:	462b      	mov	r3, r5
 8006ada:	bfbb      	ittet	lt
 8006adc:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8006ae0:	461d      	movlt	r5, r3
 8006ae2:	2300      	movge	r3, #0
 8006ae4:	232d      	movlt	r3, #45	; 0x2d
 8006ae6:	700b      	strb	r3, [r1, #0]
 8006ae8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006aea:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8006aee:	4691      	mov	r9, r2
 8006af0:	f023 0820 	bic.w	r8, r3, #32
 8006af4:	bfbc      	itt	lt
 8006af6:	4622      	movlt	r2, r4
 8006af8:	4614      	movlt	r4, r2
 8006afa:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8006afe:	d005      	beq.n	8006b0c <__cvt+0x42>
 8006b00:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8006b04:	d100      	bne.n	8006b08 <__cvt+0x3e>
 8006b06:	3601      	adds	r6, #1
 8006b08:	2102      	movs	r1, #2
 8006b0a:	e000      	b.n	8006b0e <__cvt+0x44>
 8006b0c:	2103      	movs	r1, #3
 8006b0e:	ab03      	add	r3, sp, #12
 8006b10:	9301      	str	r3, [sp, #4]
 8006b12:	ab02      	add	r3, sp, #8
 8006b14:	9300      	str	r3, [sp, #0]
 8006b16:	ec45 4b10 	vmov	d0, r4, r5
 8006b1a:	4653      	mov	r3, sl
 8006b1c:	4632      	mov	r2, r6
 8006b1e:	f001 fcf3 	bl	8008508 <_dtoa_r>
 8006b22:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8006b26:	4607      	mov	r7, r0
 8006b28:	d102      	bne.n	8006b30 <__cvt+0x66>
 8006b2a:	f019 0f01 	tst.w	r9, #1
 8006b2e:	d022      	beq.n	8006b76 <__cvt+0xac>
 8006b30:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8006b34:	eb07 0906 	add.w	r9, r7, r6
 8006b38:	d110      	bne.n	8006b5c <__cvt+0x92>
 8006b3a:	783b      	ldrb	r3, [r7, #0]
 8006b3c:	2b30      	cmp	r3, #48	; 0x30
 8006b3e:	d10a      	bne.n	8006b56 <__cvt+0x8c>
 8006b40:	2200      	movs	r2, #0
 8006b42:	2300      	movs	r3, #0
 8006b44:	4620      	mov	r0, r4
 8006b46:	4629      	mov	r1, r5
 8006b48:	f7f9 ffc8 	bl	8000adc <__aeabi_dcmpeq>
 8006b4c:	b918      	cbnz	r0, 8006b56 <__cvt+0x8c>
 8006b4e:	f1c6 0601 	rsb	r6, r6, #1
 8006b52:	f8ca 6000 	str.w	r6, [sl]
 8006b56:	f8da 3000 	ldr.w	r3, [sl]
 8006b5a:	4499      	add	r9, r3
 8006b5c:	2200      	movs	r2, #0
 8006b5e:	2300      	movs	r3, #0
 8006b60:	4620      	mov	r0, r4
 8006b62:	4629      	mov	r1, r5
 8006b64:	f7f9 ffba 	bl	8000adc <__aeabi_dcmpeq>
 8006b68:	b108      	cbz	r0, 8006b6e <__cvt+0xa4>
 8006b6a:	f8cd 900c 	str.w	r9, [sp, #12]
 8006b6e:	2230      	movs	r2, #48	; 0x30
 8006b70:	9b03      	ldr	r3, [sp, #12]
 8006b72:	454b      	cmp	r3, r9
 8006b74:	d307      	bcc.n	8006b86 <__cvt+0xbc>
 8006b76:	9b03      	ldr	r3, [sp, #12]
 8006b78:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8006b7a:	1bdb      	subs	r3, r3, r7
 8006b7c:	4638      	mov	r0, r7
 8006b7e:	6013      	str	r3, [r2, #0]
 8006b80:	b004      	add	sp, #16
 8006b82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006b86:	1c59      	adds	r1, r3, #1
 8006b88:	9103      	str	r1, [sp, #12]
 8006b8a:	701a      	strb	r2, [r3, #0]
 8006b8c:	e7f0      	b.n	8006b70 <__cvt+0xa6>

08006b8e <__exponent>:
 8006b8e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006b90:	4603      	mov	r3, r0
 8006b92:	2900      	cmp	r1, #0
 8006b94:	bfb8      	it	lt
 8006b96:	4249      	neglt	r1, r1
 8006b98:	f803 2b02 	strb.w	r2, [r3], #2
 8006b9c:	bfb4      	ite	lt
 8006b9e:	222d      	movlt	r2, #45	; 0x2d
 8006ba0:	222b      	movge	r2, #43	; 0x2b
 8006ba2:	2909      	cmp	r1, #9
 8006ba4:	7042      	strb	r2, [r0, #1]
 8006ba6:	dd2a      	ble.n	8006bfe <__exponent+0x70>
 8006ba8:	f10d 0207 	add.w	r2, sp, #7
 8006bac:	4617      	mov	r7, r2
 8006bae:	260a      	movs	r6, #10
 8006bb0:	4694      	mov	ip, r2
 8006bb2:	fb91 f5f6 	sdiv	r5, r1, r6
 8006bb6:	fb06 1415 	mls	r4, r6, r5, r1
 8006bba:	3430      	adds	r4, #48	; 0x30
 8006bbc:	f80c 4c01 	strb.w	r4, [ip, #-1]
 8006bc0:	460c      	mov	r4, r1
 8006bc2:	2c63      	cmp	r4, #99	; 0x63
 8006bc4:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8006bc8:	4629      	mov	r1, r5
 8006bca:	dcf1      	bgt.n	8006bb0 <__exponent+0x22>
 8006bcc:	3130      	adds	r1, #48	; 0x30
 8006bce:	f1ac 0402 	sub.w	r4, ip, #2
 8006bd2:	f802 1c01 	strb.w	r1, [r2, #-1]
 8006bd6:	1c41      	adds	r1, r0, #1
 8006bd8:	4622      	mov	r2, r4
 8006bda:	42ba      	cmp	r2, r7
 8006bdc:	d30a      	bcc.n	8006bf4 <__exponent+0x66>
 8006bde:	f10d 0209 	add.w	r2, sp, #9
 8006be2:	eba2 020c 	sub.w	r2, r2, ip
 8006be6:	42bc      	cmp	r4, r7
 8006be8:	bf88      	it	hi
 8006bea:	2200      	movhi	r2, #0
 8006bec:	4413      	add	r3, r2
 8006bee:	1a18      	subs	r0, r3, r0
 8006bf0:	b003      	add	sp, #12
 8006bf2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006bf4:	f812 5b01 	ldrb.w	r5, [r2], #1
 8006bf8:	f801 5f01 	strb.w	r5, [r1, #1]!
 8006bfc:	e7ed      	b.n	8006bda <__exponent+0x4c>
 8006bfe:	2330      	movs	r3, #48	; 0x30
 8006c00:	3130      	adds	r1, #48	; 0x30
 8006c02:	7083      	strb	r3, [r0, #2]
 8006c04:	70c1      	strb	r1, [r0, #3]
 8006c06:	1d03      	adds	r3, r0, #4
 8006c08:	e7f1      	b.n	8006bee <__exponent+0x60>
	...

08006c0c <_printf_float>:
 8006c0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c10:	ed2d 8b02 	vpush	{d8}
 8006c14:	b08d      	sub	sp, #52	; 0x34
 8006c16:	460c      	mov	r4, r1
 8006c18:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8006c1c:	4616      	mov	r6, r2
 8006c1e:	461f      	mov	r7, r3
 8006c20:	4605      	mov	r5, r0
 8006c22:	f001 fb81 	bl	8008328 <_localeconv_r>
 8006c26:	f8d0 a000 	ldr.w	sl, [r0]
 8006c2a:	4650      	mov	r0, sl
 8006c2c:	f7f9 fb20 	bl	8000270 <strlen>
 8006c30:	2300      	movs	r3, #0
 8006c32:	930a      	str	r3, [sp, #40]	; 0x28
 8006c34:	6823      	ldr	r3, [r4, #0]
 8006c36:	9305      	str	r3, [sp, #20]
 8006c38:	f8d8 3000 	ldr.w	r3, [r8]
 8006c3c:	f894 b018 	ldrb.w	fp, [r4, #24]
 8006c40:	3307      	adds	r3, #7
 8006c42:	f023 0307 	bic.w	r3, r3, #7
 8006c46:	f103 0208 	add.w	r2, r3, #8
 8006c4a:	f8c8 2000 	str.w	r2, [r8]
 8006c4e:	e9d3 8900 	ldrd	r8, r9, [r3]
 8006c52:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8006c56:	9307      	str	r3, [sp, #28]
 8006c58:	f8cd 8018 	str.w	r8, [sp, #24]
 8006c5c:	ee08 0a10 	vmov	s16, r0
 8006c60:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 8006c64:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8006c68:	4b9e      	ldr	r3, [pc, #632]	; (8006ee4 <_printf_float+0x2d8>)
 8006c6a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006c6e:	f7f9 ff67 	bl	8000b40 <__aeabi_dcmpun>
 8006c72:	bb88      	cbnz	r0, 8006cd8 <_printf_float+0xcc>
 8006c74:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8006c78:	4b9a      	ldr	r3, [pc, #616]	; (8006ee4 <_printf_float+0x2d8>)
 8006c7a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006c7e:	f7f9 ff41 	bl	8000b04 <__aeabi_dcmple>
 8006c82:	bb48      	cbnz	r0, 8006cd8 <_printf_float+0xcc>
 8006c84:	2200      	movs	r2, #0
 8006c86:	2300      	movs	r3, #0
 8006c88:	4640      	mov	r0, r8
 8006c8a:	4649      	mov	r1, r9
 8006c8c:	f7f9 ff30 	bl	8000af0 <__aeabi_dcmplt>
 8006c90:	b110      	cbz	r0, 8006c98 <_printf_float+0x8c>
 8006c92:	232d      	movs	r3, #45	; 0x2d
 8006c94:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006c98:	4a93      	ldr	r2, [pc, #588]	; (8006ee8 <_printf_float+0x2dc>)
 8006c9a:	4b94      	ldr	r3, [pc, #592]	; (8006eec <_printf_float+0x2e0>)
 8006c9c:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8006ca0:	bf94      	ite	ls
 8006ca2:	4690      	movls	r8, r2
 8006ca4:	4698      	movhi	r8, r3
 8006ca6:	2303      	movs	r3, #3
 8006ca8:	6123      	str	r3, [r4, #16]
 8006caa:	9b05      	ldr	r3, [sp, #20]
 8006cac:	f023 0304 	bic.w	r3, r3, #4
 8006cb0:	6023      	str	r3, [r4, #0]
 8006cb2:	f04f 0900 	mov.w	r9, #0
 8006cb6:	9700      	str	r7, [sp, #0]
 8006cb8:	4633      	mov	r3, r6
 8006cba:	aa0b      	add	r2, sp, #44	; 0x2c
 8006cbc:	4621      	mov	r1, r4
 8006cbe:	4628      	mov	r0, r5
 8006cc0:	f000 f9da 	bl	8007078 <_printf_common>
 8006cc4:	3001      	adds	r0, #1
 8006cc6:	f040 8090 	bne.w	8006dea <_printf_float+0x1de>
 8006cca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006cce:	b00d      	add	sp, #52	; 0x34
 8006cd0:	ecbd 8b02 	vpop	{d8}
 8006cd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006cd8:	4642      	mov	r2, r8
 8006cda:	464b      	mov	r3, r9
 8006cdc:	4640      	mov	r0, r8
 8006cde:	4649      	mov	r1, r9
 8006ce0:	f7f9 ff2e 	bl	8000b40 <__aeabi_dcmpun>
 8006ce4:	b140      	cbz	r0, 8006cf8 <_printf_float+0xec>
 8006ce6:	464b      	mov	r3, r9
 8006ce8:	2b00      	cmp	r3, #0
 8006cea:	bfbc      	itt	lt
 8006cec:	232d      	movlt	r3, #45	; 0x2d
 8006cee:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8006cf2:	4a7f      	ldr	r2, [pc, #508]	; (8006ef0 <_printf_float+0x2e4>)
 8006cf4:	4b7f      	ldr	r3, [pc, #508]	; (8006ef4 <_printf_float+0x2e8>)
 8006cf6:	e7d1      	b.n	8006c9c <_printf_float+0x90>
 8006cf8:	6863      	ldr	r3, [r4, #4]
 8006cfa:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8006cfe:	9206      	str	r2, [sp, #24]
 8006d00:	1c5a      	adds	r2, r3, #1
 8006d02:	d13f      	bne.n	8006d84 <_printf_float+0x178>
 8006d04:	2306      	movs	r3, #6
 8006d06:	6063      	str	r3, [r4, #4]
 8006d08:	9b05      	ldr	r3, [sp, #20]
 8006d0a:	6861      	ldr	r1, [r4, #4]
 8006d0c:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8006d10:	2300      	movs	r3, #0
 8006d12:	9303      	str	r3, [sp, #12]
 8006d14:	ab0a      	add	r3, sp, #40	; 0x28
 8006d16:	e9cd b301 	strd	fp, r3, [sp, #4]
 8006d1a:	ab09      	add	r3, sp, #36	; 0x24
 8006d1c:	ec49 8b10 	vmov	d0, r8, r9
 8006d20:	9300      	str	r3, [sp, #0]
 8006d22:	6022      	str	r2, [r4, #0]
 8006d24:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8006d28:	4628      	mov	r0, r5
 8006d2a:	f7ff fece 	bl	8006aca <__cvt>
 8006d2e:	9b06      	ldr	r3, [sp, #24]
 8006d30:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006d32:	2b47      	cmp	r3, #71	; 0x47
 8006d34:	4680      	mov	r8, r0
 8006d36:	d108      	bne.n	8006d4a <_printf_float+0x13e>
 8006d38:	1cc8      	adds	r0, r1, #3
 8006d3a:	db02      	blt.n	8006d42 <_printf_float+0x136>
 8006d3c:	6863      	ldr	r3, [r4, #4]
 8006d3e:	4299      	cmp	r1, r3
 8006d40:	dd41      	ble.n	8006dc6 <_printf_float+0x1ba>
 8006d42:	f1ab 0302 	sub.w	r3, fp, #2
 8006d46:	fa5f fb83 	uxtb.w	fp, r3
 8006d4a:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8006d4e:	d820      	bhi.n	8006d92 <_printf_float+0x186>
 8006d50:	3901      	subs	r1, #1
 8006d52:	465a      	mov	r2, fp
 8006d54:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8006d58:	9109      	str	r1, [sp, #36]	; 0x24
 8006d5a:	f7ff ff18 	bl	8006b8e <__exponent>
 8006d5e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006d60:	1813      	adds	r3, r2, r0
 8006d62:	2a01      	cmp	r2, #1
 8006d64:	4681      	mov	r9, r0
 8006d66:	6123      	str	r3, [r4, #16]
 8006d68:	dc02      	bgt.n	8006d70 <_printf_float+0x164>
 8006d6a:	6822      	ldr	r2, [r4, #0]
 8006d6c:	07d2      	lsls	r2, r2, #31
 8006d6e:	d501      	bpl.n	8006d74 <_printf_float+0x168>
 8006d70:	3301      	adds	r3, #1
 8006d72:	6123      	str	r3, [r4, #16]
 8006d74:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8006d78:	2b00      	cmp	r3, #0
 8006d7a:	d09c      	beq.n	8006cb6 <_printf_float+0xaa>
 8006d7c:	232d      	movs	r3, #45	; 0x2d
 8006d7e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006d82:	e798      	b.n	8006cb6 <_printf_float+0xaa>
 8006d84:	9a06      	ldr	r2, [sp, #24]
 8006d86:	2a47      	cmp	r2, #71	; 0x47
 8006d88:	d1be      	bne.n	8006d08 <_printf_float+0xfc>
 8006d8a:	2b00      	cmp	r3, #0
 8006d8c:	d1bc      	bne.n	8006d08 <_printf_float+0xfc>
 8006d8e:	2301      	movs	r3, #1
 8006d90:	e7b9      	b.n	8006d06 <_printf_float+0xfa>
 8006d92:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8006d96:	d118      	bne.n	8006dca <_printf_float+0x1be>
 8006d98:	2900      	cmp	r1, #0
 8006d9a:	6863      	ldr	r3, [r4, #4]
 8006d9c:	dd0b      	ble.n	8006db6 <_printf_float+0x1aa>
 8006d9e:	6121      	str	r1, [r4, #16]
 8006da0:	b913      	cbnz	r3, 8006da8 <_printf_float+0x19c>
 8006da2:	6822      	ldr	r2, [r4, #0]
 8006da4:	07d0      	lsls	r0, r2, #31
 8006da6:	d502      	bpl.n	8006dae <_printf_float+0x1a2>
 8006da8:	3301      	adds	r3, #1
 8006daa:	440b      	add	r3, r1
 8006dac:	6123      	str	r3, [r4, #16]
 8006dae:	65a1      	str	r1, [r4, #88]	; 0x58
 8006db0:	f04f 0900 	mov.w	r9, #0
 8006db4:	e7de      	b.n	8006d74 <_printf_float+0x168>
 8006db6:	b913      	cbnz	r3, 8006dbe <_printf_float+0x1b2>
 8006db8:	6822      	ldr	r2, [r4, #0]
 8006dba:	07d2      	lsls	r2, r2, #31
 8006dbc:	d501      	bpl.n	8006dc2 <_printf_float+0x1b6>
 8006dbe:	3302      	adds	r3, #2
 8006dc0:	e7f4      	b.n	8006dac <_printf_float+0x1a0>
 8006dc2:	2301      	movs	r3, #1
 8006dc4:	e7f2      	b.n	8006dac <_printf_float+0x1a0>
 8006dc6:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8006dca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006dcc:	4299      	cmp	r1, r3
 8006dce:	db05      	blt.n	8006ddc <_printf_float+0x1d0>
 8006dd0:	6823      	ldr	r3, [r4, #0]
 8006dd2:	6121      	str	r1, [r4, #16]
 8006dd4:	07d8      	lsls	r0, r3, #31
 8006dd6:	d5ea      	bpl.n	8006dae <_printf_float+0x1a2>
 8006dd8:	1c4b      	adds	r3, r1, #1
 8006dda:	e7e7      	b.n	8006dac <_printf_float+0x1a0>
 8006ddc:	2900      	cmp	r1, #0
 8006dde:	bfd4      	ite	le
 8006de0:	f1c1 0202 	rsble	r2, r1, #2
 8006de4:	2201      	movgt	r2, #1
 8006de6:	4413      	add	r3, r2
 8006de8:	e7e0      	b.n	8006dac <_printf_float+0x1a0>
 8006dea:	6823      	ldr	r3, [r4, #0]
 8006dec:	055a      	lsls	r2, r3, #21
 8006dee:	d407      	bmi.n	8006e00 <_printf_float+0x1f4>
 8006df0:	6923      	ldr	r3, [r4, #16]
 8006df2:	4642      	mov	r2, r8
 8006df4:	4631      	mov	r1, r6
 8006df6:	4628      	mov	r0, r5
 8006df8:	47b8      	blx	r7
 8006dfa:	3001      	adds	r0, #1
 8006dfc:	d12c      	bne.n	8006e58 <_printf_float+0x24c>
 8006dfe:	e764      	b.n	8006cca <_printf_float+0xbe>
 8006e00:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8006e04:	f240 80e0 	bls.w	8006fc8 <_printf_float+0x3bc>
 8006e08:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8006e0c:	2200      	movs	r2, #0
 8006e0e:	2300      	movs	r3, #0
 8006e10:	f7f9 fe64 	bl	8000adc <__aeabi_dcmpeq>
 8006e14:	2800      	cmp	r0, #0
 8006e16:	d034      	beq.n	8006e82 <_printf_float+0x276>
 8006e18:	4a37      	ldr	r2, [pc, #220]	; (8006ef8 <_printf_float+0x2ec>)
 8006e1a:	2301      	movs	r3, #1
 8006e1c:	4631      	mov	r1, r6
 8006e1e:	4628      	mov	r0, r5
 8006e20:	47b8      	blx	r7
 8006e22:	3001      	adds	r0, #1
 8006e24:	f43f af51 	beq.w	8006cca <_printf_float+0xbe>
 8006e28:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8006e2c:	429a      	cmp	r2, r3
 8006e2e:	db02      	blt.n	8006e36 <_printf_float+0x22a>
 8006e30:	6823      	ldr	r3, [r4, #0]
 8006e32:	07d8      	lsls	r0, r3, #31
 8006e34:	d510      	bpl.n	8006e58 <_printf_float+0x24c>
 8006e36:	ee18 3a10 	vmov	r3, s16
 8006e3a:	4652      	mov	r2, sl
 8006e3c:	4631      	mov	r1, r6
 8006e3e:	4628      	mov	r0, r5
 8006e40:	47b8      	blx	r7
 8006e42:	3001      	adds	r0, #1
 8006e44:	f43f af41 	beq.w	8006cca <_printf_float+0xbe>
 8006e48:	f04f 0800 	mov.w	r8, #0
 8006e4c:	f104 091a 	add.w	r9, r4, #26
 8006e50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006e52:	3b01      	subs	r3, #1
 8006e54:	4543      	cmp	r3, r8
 8006e56:	dc09      	bgt.n	8006e6c <_printf_float+0x260>
 8006e58:	6823      	ldr	r3, [r4, #0]
 8006e5a:	079b      	lsls	r3, r3, #30
 8006e5c:	f100 8107 	bmi.w	800706e <_printf_float+0x462>
 8006e60:	68e0      	ldr	r0, [r4, #12]
 8006e62:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006e64:	4298      	cmp	r0, r3
 8006e66:	bfb8      	it	lt
 8006e68:	4618      	movlt	r0, r3
 8006e6a:	e730      	b.n	8006cce <_printf_float+0xc2>
 8006e6c:	2301      	movs	r3, #1
 8006e6e:	464a      	mov	r2, r9
 8006e70:	4631      	mov	r1, r6
 8006e72:	4628      	mov	r0, r5
 8006e74:	47b8      	blx	r7
 8006e76:	3001      	adds	r0, #1
 8006e78:	f43f af27 	beq.w	8006cca <_printf_float+0xbe>
 8006e7c:	f108 0801 	add.w	r8, r8, #1
 8006e80:	e7e6      	b.n	8006e50 <_printf_float+0x244>
 8006e82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006e84:	2b00      	cmp	r3, #0
 8006e86:	dc39      	bgt.n	8006efc <_printf_float+0x2f0>
 8006e88:	4a1b      	ldr	r2, [pc, #108]	; (8006ef8 <_printf_float+0x2ec>)
 8006e8a:	2301      	movs	r3, #1
 8006e8c:	4631      	mov	r1, r6
 8006e8e:	4628      	mov	r0, r5
 8006e90:	47b8      	blx	r7
 8006e92:	3001      	adds	r0, #1
 8006e94:	f43f af19 	beq.w	8006cca <_printf_float+0xbe>
 8006e98:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8006e9c:	4313      	orrs	r3, r2
 8006e9e:	d102      	bne.n	8006ea6 <_printf_float+0x29a>
 8006ea0:	6823      	ldr	r3, [r4, #0]
 8006ea2:	07d9      	lsls	r1, r3, #31
 8006ea4:	d5d8      	bpl.n	8006e58 <_printf_float+0x24c>
 8006ea6:	ee18 3a10 	vmov	r3, s16
 8006eaa:	4652      	mov	r2, sl
 8006eac:	4631      	mov	r1, r6
 8006eae:	4628      	mov	r0, r5
 8006eb0:	47b8      	blx	r7
 8006eb2:	3001      	adds	r0, #1
 8006eb4:	f43f af09 	beq.w	8006cca <_printf_float+0xbe>
 8006eb8:	f04f 0900 	mov.w	r9, #0
 8006ebc:	f104 0a1a 	add.w	sl, r4, #26
 8006ec0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006ec2:	425b      	negs	r3, r3
 8006ec4:	454b      	cmp	r3, r9
 8006ec6:	dc01      	bgt.n	8006ecc <_printf_float+0x2c0>
 8006ec8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006eca:	e792      	b.n	8006df2 <_printf_float+0x1e6>
 8006ecc:	2301      	movs	r3, #1
 8006ece:	4652      	mov	r2, sl
 8006ed0:	4631      	mov	r1, r6
 8006ed2:	4628      	mov	r0, r5
 8006ed4:	47b8      	blx	r7
 8006ed6:	3001      	adds	r0, #1
 8006ed8:	f43f aef7 	beq.w	8006cca <_printf_float+0xbe>
 8006edc:	f109 0901 	add.w	r9, r9, #1
 8006ee0:	e7ee      	b.n	8006ec0 <_printf_float+0x2b4>
 8006ee2:	bf00      	nop
 8006ee4:	7fefffff 	.word	0x7fefffff
 8006ee8:	0800bd10 	.word	0x0800bd10
 8006eec:	0800bd14 	.word	0x0800bd14
 8006ef0:	0800bd18 	.word	0x0800bd18
 8006ef4:	0800bd1c 	.word	0x0800bd1c
 8006ef8:	0800bd20 	.word	0x0800bd20
 8006efc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006efe:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8006f00:	429a      	cmp	r2, r3
 8006f02:	bfa8      	it	ge
 8006f04:	461a      	movge	r2, r3
 8006f06:	2a00      	cmp	r2, #0
 8006f08:	4691      	mov	r9, r2
 8006f0a:	dc37      	bgt.n	8006f7c <_printf_float+0x370>
 8006f0c:	f04f 0b00 	mov.w	fp, #0
 8006f10:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8006f14:	f104 021a 	add.w	r2, r4, #26
 8006f18:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8006f1a:	9305      	str	r3, [sp, #20]
 8006f1c:	eba3 0309 	sub.w	r3, r3, r9
 8006f20:	455b      	cmp	r3, fp
 8006f22:	dc33      	bgt.n	8006f8c <_printf_float+0x380>
 8006f24:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8006f28:	429a      	cmp	r2, r3
 8006f2a:	db3b      	blt.n	8006fa4 <_printf_float+0x398>
 8006f2c:	6823      	ldr	r3, [r4, #0]
 8006f2e:	07da      	lsls	r2, r3, #31
 8006f30:	d438      	bmi.n	8006fa4 <_printf_float+0x398>
 8006f32:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8006f36:	eba2 0903 	sub.w	r9, r2, r3
 8006f3a:	9b05      	ldr	r3, [sp, #20]
 8006f3c:	1ad2      	subs	r2, r2, r3
 8006f3e:	4591      	cmp	r9, r2
 8006f40:	bfa8      	it	ge
 8006f42:	4691      	movge	r9, r2
 8006f44:	f1b9 0f00 	cmp.w	r9, #0
 8006f48:	dc35      	bgt.n	8006fb6 <_printf_float+0x3aa>
 8006f4a:	f04f 0800 	mov.w	r8, #0
 8006f4e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8006f52:	f104 0a1a 	add.w	sl, r4, #26
 8006f56:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8006f5a:	1a9b      	subs	r3, r3, r2
 8006f5c:	eba3 0309 	sub.w	r3, r3, r9
 8006f60:	4543      	cmp	r3, r8
 8006f62:	f77f af79 	ble.w	8006e58 <_printf_float+0x24c>
 8006f66:	2301      	movs	r3, #1
 8006f68:	4652      	mov	r2, sl
 8006f6a:	4631      	mov	r1, r6
 8006f6c:	4628      	mov	r0, r5
 8006f6e:	47b8      	blx	r7
 8006f70:	3001      	adds	r0, #1
 8006f72:	f43f aeaa 	beq.w	8006cca <_printf_float+0xbe>
 8006f76:	f108 0801 	add.w	r8, r8, #1
 8006f7a:	e7ec      	b.n	8006f56 <_printf_float+0x34a>
 8006f7c:	4613      	mov	r3, r2
 8006f7e:	4631      	mov	r1, r6
 8006f80:	4642      	mov	r2, r8
 8006f82:	4628      	mov	r0, r5
 8006f84:	47b8      	blx	r7
 8006f86:	3001      	adds	r0, #1
 8006f88:	d1c0      	bne.n	8006f0c <_printf_float+0x300>
 8006f8a:	e69e      	b.n	8006cca <_printf_float+0xbe>
 8006f8c:	2301      	movs	r3, #1
 8006f8e:	4631      	mov	r1, r6
 8006f90:	4628      	mov	r0, r5
 8006f92:	9205      	str	r2, [sp, #20]
 8006f94:	47b8      	blx	r7
 8006f96:	3001      	adds	r0, #1
 8006f98:	f43f ae97 	beq.w	8006cca <_printf_float+0xbe>
 8006f9c:	9a05      	ldr	r2, [sp, #20]
 8006f9e:	f10b 0b01 	add.w	fp, fp, #1
 8006fa2:	e7b9      	b.n	8006f18 <_printf_float+0x30c>
 8006fa4:	ee18 3a10 	vmov	r3, s16
 8006fa8:	4652      	mov	r2, sl
 8006faa:	4631      	mov	r1, r6
 8006fac:	4628      	mov	r0, r5
 8006fae:	47b8      	blx	r7
 8006fb0:	3001      	adds	r0, #1
 8006fb2:	d1be      	bne.n	8006f32 <_printf_float+0x326>
 8006fb4:	e689      	b.n	8006cca <_printf_float+0xbe>
 8006fb6:	9a05      	ldr	r2, [sp, #20]
 8006fb8:	464b      	mov	r3, r9
 8006fba:	4442      	add	r2, r8
 8006fbc:	4631      	mov	r1, r6
 8006fbe:	4628      	mov	r0, r5
 8006fc0:	47b8      	blx	r7
 8006fc2:	3001      	adds	r0, #1
 8006fc4:	d1c1      	bne.n	8006f4a <_printf_float+0x33e>
 8006fc6:	e680      	b.n	8006cca <_printf_float+0xbe>
 8006fc8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006fca:	2a01      	cmp	r2, #1
 8006fcc:	dc01      	bgt.n	8006fd2 <_printf_float+0x3c6>
 8006fce:	07db      	lsls	r3, r3, #31
 8006fd0:	d53a      	bpl.n	8007048 <_printf_float+0x43c>
 8006fd2:	2301      	movs	r3, #1
 8006fd4:	4642      	mov	r2, r8
 8006fd6:	4631      	mov	r1, r6
 8006fd8:	4628      	mov	r0, r5
 8006fda:	47b8      	blx	r7
 8006fdc:	3001      	adds	r0, #1
 8006fde:	f43f ae74 	beq.w	8006cca <_printf_float+0xbe>
 8006fe2:	ee18 3a10 	vmov	r3, s16
 8006fe6:	4652      	mov	r2, sl
 8006fe8:	4631      	mov	r1, r6
 8006fea:	4628      	mov	r0, r5
 8006fec:	47b8      	blx	r7
 8006fee:	3001      	adds	r0, #1
 8006ff0:	f43f ae6b 	beq.w	8006cca <_printf_float+0xbe>
 8006ff4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8006ff8:	2200      	movs	r2, #0
 8006ffa:	2300      	movs	r3, #0
 8006ffc:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8007000:	f7f9 fd6c 	bl	8000adc <__aeabi_dcmpeq>
 8007004:	b9d8      	cbnz	r0, 800703e <_printf_float+0x432>
 8007006:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
 800700a:	f108 0201 	add.w	r2, r8, #1
 800700e:	4631      	mov	r1, r6
 8007010:	4628      	mov	r0, r5
 8007012:	47b8      	blx	r7
 8007014:	3001      	adds	r0, #1
 8007016:	d10e      	bne.n	8007036 <_printf_float+0x42a>
 8007018:	e657      	b.n	8006cca <_printf_float+0xbe>
 800701a:	2301      	movs	r3, #1
 800701c:	4652      	mov	r2, sl
 800701e:	4631      	mov	r1, r6
 8007020:	4628      	mov	r0, r5
 8007022:	47b8      	blx	r7
 8007024:	3001      	adds	r0, #1
 8007026:	f43f ae50 	beq.w	8006cca <_printf_float+0xbe>
 800702a:	f108 0801 	add.w	r8, r8, #1
 800702e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007030:	3b01      	subs	r3, #1
 8007032:	4543      	cmp	r3, r8
 8007034:	dcf1      	bgt.n	800701a <_printf_float+0x40e>
 8007036:	464b      	mov	r3, r9
 8007038:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800703c:	e6da      	b.n	8006df4 <_printf_float+0x1e8>
 800703e:	f04f 0800 	mov.w	r8, #0
 8007042:	f104 0a1a 	add.w	sl, r4, #26
 8007046:	e7f2      	b.n	800702e <_printf_float+0x422>
 8007048:	2301      	movs	r3, #1
 800704a:	4642      	mov	r2, r8
 800704c:	e7df      	b.n	800700e <_printf_float+0x402>
 800704e:	2301      	movs	r3, #1
 8007050:	464a      	mov	r2, r9
 8007052:	4631      	mov	r1, r6
 8007054:	4628      	mov	r0, r5
 8007056:	47b8      	blx	r7
 8007058:	3001      	adds	r0, #1
 800705a:	f43f ae36 	beq.w	8006cca <_printf_float+0xbe>
 800705e:	f108 0801 	add.w	r8, r8, #1
 8007062:	68e3      	ldr	r3, [r4, #12]
 8007064:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8007066:	1a5b      	subs	r3, r3, r1
 8007068:	4543      	cmp	r3, r8
 800706a:	dcf0      	bgt.n	800704e <_printf_float+0x442>
 800706c:	e6f8      	b.n	8006e60 <_printf_float+0x254>
 800706e:	f04f 0800 	mov.w	r8, #0
 8007072:	f104 0919 	add.w	r9, r4, #25
 8007076:	e7f4      	b.n	8007062 <_printf_float+0x456>

08007078 <_printf_common>:
 8007078:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800707c:	4616      	mov	r6, r2
 800707e:	4699      	mov	r9, r3
 8007080:	688a      	ldr	r2, [r1, #8]
 8007082:	690b      	ldr	r3, [r1, #16]
 8007084:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8007088:	4293      	cmp	r3, r2
 800708a:	bfb8      	it	lt
 800708c:	4613      	movlt	r3, r2
 800708e:	6033      	str	r3, [r6, #0]
 8007090:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8007094:	4607      	mov	r7, r0
 8007096:	460c      	mov	r4, r1
 8007098:	b10a      	cbz	r2, 800709e <_printf_common+0x26>
 800709a:	3301      	adds	r3, #1
 800709c:	6033      	str	r3, [r6, #0]
 800709e:	6823      	ldr	r3, [r4, #0]
 80070a0:	0699      	lsls	r1, r3, #26
 80070a2:	bf42      	ittt	mi
 80070a4:	6833      	ldrmi	r3, [r6, #0]
 80070a6:	3302      	addmi	r3, #2
 80070a8:	6033      	strmi	r3, [r6, #0]
 80070aa:	6825      	ldr	r5, [r4, #0]
 80070ac:	f015 0506 	ands.w	r5, r5, #6
 80070b0:	d106      	bne.n	80070c0 <_printf_common+0x48>
 80070b2:	f104 0a19 	add.w	sl, r4, #25
 80070b6:	68e3      	ldr	r3, [r4, #12]
 80070b8:	6832      	ldr	r2, [r6, #0]
 80070ba:	1a9b      	subs	r3, r3, r2
 80070bc:	42ab      	cmp	r3, r5
 80070be:	dc26      	bgt.n	800710e <_printf_common+0x96>
 80070c0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80070c4:	1e13      	subs	r3, r2, #0
 80070c6:	6822      	ldr	r2, [r4, #0]
 80070c8:	bf18      	it	ne
 80070ca:	2301      	movne	r3, #1
 80070cc:	0692      	lsls	r2, r2, #26
 80070ce:	d42b      	bmi.n	8007128 <_printf_common+0xb0>
 80070d0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80070d4:	4649      	mov	r1, r9
 80070d6:	4638      	mov	r0, r7
 80070d8:	47c0      	blx	r8
 80070da:	3001      	adds	r0, #1
 80070dc:	d01e      	beq.n	800711c <_printf_common+0xa4>
 80070de:	6823      	ldr	r3, [r4, #0]
 80070e0:	6922      	ldr	r2, [r4, #16]
 80070e2:	f003 0306 	and.w	r3, r3, #6
 80070e6:	2b04      	cmp	r3, #4
 80070e8:	bf02      	ittt	eq
 80070ea:	68e5      	ldreq	r5, [r4, #12]
 80070ec:	6833      	ldreq	r3, [r6, #0]
 80070ee:	1aed      	subeq	r5, r5, r3
 80070f0:	68a3      	ldr	r3, [r4, #8]
 80070f2:	bf0c      	ite	eq
 80070f4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80070f8:	2500      	movne	r5, #0
 80070fa:	4293      	cmp	r3, r2
 80070fc:	bfc4      	itt	gt
 80070fe:	1a9b      	subgt	r3, r3, r2
 8007100:	18ed      	addgt	r5, r5, r3
 8007102:	2600      	movs	r6, #0
 8007104:	341a      	adds	r4, #26
 8007106:	42b5      	cmp	r5, r6
 8007108:	d11a      	bne.n	8007140 <_printf_common+0xc8>
 800710a:	2000      	movs	r0, #0
 800710c:	e008      	b.n	8007120 <_printf_common+0xa8>
 800710e:	2301      	movs	r3, #1
 8007110:	4652      	mov	r2, sl
 8007112:	4649      	mov	r1, r9
 8007114:	4638      	mov	r0, r7
 8007116:	47c0      	blx	r8
 8007118:	3001      	adds	r0, #1
 800711a:	d103      	bne.n	8007124 <_printf_common+0xac>
 800711c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007120:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007124:	3501      	adds	r5, #1
 8007126:	e7c6      	b.n	80070b6 <_printf_common+0x3e>
 8007128:	18e1      	adds	r1, r4, r3
 800712a:	1c5a      	adds	r2, r3, #1
 800712c:	2030      	movs	r0, #48	; 0x30
 800712e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8007132:	4422      	add	r2, r4
 8007134:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8007138:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800713c:	3302      	adds	r3, #2
 800713e:	e7c7      	b.n	80070d0 <_printf_common+0x58>
 8007140:	2301      	movs	r3, #1
 8007142:	4622      	mov	r2, r4
 8007144:	4649      	mov	r1, r9
 8007146:	4638      	mov	r0, r7
 8007148:	47c0      	blx	r8
 800714a:	3001      	adds	r0, #1
 800714c:	d0e6      	beq.n	800711c <_printf_common+0xa4>
 800714e:	3601      	adds	r6, #1
 8007150:	e7d9      	b.n	8007106 <_printf_common+0x8e>
	...

08007154 <_printf_i>:
 8007154:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007158:	7e0f      	ldrb	r7, [r1, #24]
 800715a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800715c:	2f78      	cmp	r7, #120	; 0x78
 800715e:	4691      	mov	r9, r2
 8007160:	4680      	mov	r8, r0
 8007162:	460c      	mov	r4, r1
 8007164:	469a      	mov	sl, r3
 8007166:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800716a:	d807      	bhi.n	800717c <_printf_i+0x28>
 800716c:	2f62      	cmp	r7, #98	; 0x62
 800716e:	d80a      	bhi.n	8007186 <_printf_i+0x32>
 8007170:	2f00      	cmp	r7, #0
 8007172:	f000 80d4 	beq.w	800731e <_printf_i+0x1ca>
 8007176:	2f58      	cmp	r7, #88	; 0x58
 8007178:	f000 80c0 	beq.w	80072fc <_printf_i+0x1a8>
 800717c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8007180:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8007184:	e03a      	b.n	80071fc <_printf_i+0xa8>
 8007186:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800718a:	2b15      	cmp	r3, #21
 800718c:	d8f6      	bhi.n	800717c <_printf_i+0x28>
 800718e:	a101      	add	r1, pc, #4	; (adr r1, 8007194 <_printf_i+0x40>)
 8007190:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8007194:	080071ed 	.word	0x080071ed
 8007198:	08007201 	.word	0x08007201
 800719c:	0800717d 	.word	0x0800717d
 80071a0:	0800717d 	.word	0x0800717d
 80071a4:	0800717d 	.word	0x0800717d
 80071a8:	0800717d 	.word	0x0800717d
 80071ac:	08007201 	.word	0x08007201
 80071b0:	0800717d 	.word	0x0800717d
 80071b4:	0800717d 	.word	0x0800717d
 80071b8:	0800717d 	.word	0x0800717d
 80071bc:	0800717d 	.word	0x0800717d
 80071c0:	08007305 	.word	0x08007305
 80071c4:	0800722d 	.word	0x0800722d
 80071c8:	080072bf 	.word	0x080072bf
 80071cc:	0800717d 	.word	0x0800717d
 80071d0:	0800717d 	.word	0x0800717d
 80071d4:	08007327 	.word	0x08007327
 80071d8:	0800717d 	.word	0x0800717d
 80071dc:	0800722d 	.word	0x0800722d
 80071e0:	0800717d 	.word	0x0800717d
 80071e4:	0800717d 	.word	0x0800717d
 80071e8:	080072c7 	.word	0x080072c7
 80071ec:	682b      	ldr	r3, [r5, #0]
 80071ee:	1d1a      	adds	r2, r3, #4
 80071f0:	681b      	ldr	r3, [r3, #0]
 80071f2:	602a      	str	r2, [r5, #0]
 80071f4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80071f8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80071fc:	2301      	movs	r3, #1
 80071fe:	e09f      	b.n	8007340 <_printf_i+0x1ec>
 8007200:	6820      	ldr	r0, [r4, #0]
 8007202:	682b      	ldr	r3, [r5, #0]
 8007204:	0607      	lsls	r7, r0, #24
 8007206:	f103 0104 	add.w	r1, r3, #4
 800720a:	6029      	str	r1, [r5, #0]
 800720c:	d501      	bpl.n	8007212 <_printf_i+0xbe>
 800720e:	681e      	ldr	r6, [r3, #0]
 8007210:	e003      	b.n	800721a <_printf_i+0xc6>
 8007212:	0646      	lsls	r6, r0, #25
 8007214:	d5fb      	bpl.n	800720e <_printf_i+0xba>
 8007216:	f9b3 6000 	ldrsh.w	r6, [r3]
 800721a:	2e00      	cmp	r6, #0
 800721c:	da03      	bge.n	8007226 <_printf_i+0xd2>
 800721e:	232d      	movs	r3, #45	; 0x2d
 8007220:	4276      	negs	r6, r6
 8007222:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007226:	485a      	ldr	r0, [pc, #360]	; (8007390 <_printf_i+0x23c>)
 8007228:	230a      	movs	r3, #10
 800722a:	e012      	b.n	8007252 <_printf_i+0xfe>
 800722c:	682b      	ldr	r3, [r5, #0]
 800722e:	6820      	ldr	r0, [r4, #0]
 8007230:	1d19      	adds	r1, r3, #4
 8007232:	6029      	str	r1, [r5, #0]
 8007234:	0605      	lsls	r5, r0, #24
 8007236:	d501      	bpl.n	800723c <_printf_i+0xe8>
 8007238:	681e      	ldr	r6, [r3, #0]
 800723a:	e002      	b.n	8007242 <_printf_i+0xee>
 800723c:	0641      	lsls	r1, r0, #25
 800723e:	d5fb      	bpl.n	8007238 <_printf_i+0xe4>
 8007240:	881e      	ldrh	r6, [r3, #0]
 8007242:	4853      	ldr	r0, [pc, #332]	; (8007390 <_printf_i+0x23c>)
 8007244:	2f6f      	cmp	r7, #111	; 0x6f
 8007246:	bf0c      	ite	eq
 8007248:	2308      	moveq	r3, #8
 800724a:	230a      	movne	r3, #10
 800724c:	2100      	movs	r1, #0
 800724e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8007252:	6865      	ldr	r5, [r4, #4]
 8007254:	60a5      	str	r5, [r4, #8]
 8007256:	2d00      	cmp	r5, #0
 8007258:	bfa2      	ittt	ge
 800725a:	6821      	ldrge	r1, [r4, #0]
 800725c:	f021 0104 	bicge.w	r1, r1, #4
 8007260:	6021      	strge	r1, [r4, #0]
 8007262:	b90e      	cbnz	r6, 8007268 <_printf_i+0x114>
 8007264:	2d00      	cmp	r5, #0
 8007266:	d04b      	beq.n	8007300 <_printf_i+0x1ac>
 8007268:	4615      	mov	r5, r2
 800726a:	fbb6 f1f3 	udiv	r1, r6, r3
 800726e:	fb03 6711 	mls	r7, r3, r1, r6
 8007272:	5dc7      	ldrb	r7, [r0, r7]
 8007274:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8007278:	4637      	mov	r7, r6
 800727a:	42bb      	cmp	r3, r7
 800727c:	460e      	mov	r6, r1
 800727e:	d9f4      	bls.n	800726a <_printf_i+0x116>
 8007280:	2b08      	cmp	r3, #8
 8007282:	d10b      	bne.n	800729c <_printf_i+0x148>
 8007284:	6823      	ldr	r3, [r4, #0]
 8007286:	07de      	lsls	r6, r3, #31
 8007288:	d508      	bpl.n	800729c <_printf_i+0x148>
 800728a:	6923      	ldr	r3, [r4, #16]
 800728c:	6861      	ldr	r1, [r4, #4]
 800728e:	4299      	cmp	r1, r3
 8007290:	bfde      	ittt	le
 8007292:	2330      	movle	r3, #48	; 0x30
 8007294:	f805 3c01 	strble.w	r3, [r5, #-1]
 8007298:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 800729c:	1b52      	subs	r2, r2, r5
 800729e:	6122      	str	r2, [r4, #16]
 80072a0:	f8cd a000 	str.w	sl, [sp]
 80072a4:	464b      	mov	r3, r9
 80072a6:	aa03      	add	r2, sp, #12
 80072a8:	4621      	mov	r1, r4
 80072aa:	4640      	mov	r0, r8
 80072ac:	f7ff fee4 	bl	8007078 <_printf_common>
 80072b0:	3001      	adds	r0, #1
 80072b2:	d14a      	bne.n	800734a <_printf_i+0x1f6>
 80072b4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80072b8:	b004      	add	sp, #16
 80072ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80072be:	6823      	ldr	r3, [r4, #0]
 80072c0:	f043 0320 	orr.w	r3, r3, #32
 80072c4:	6023      	str	r3, [r4, #0]
 80072c6:	4833      	ldr	r0, [pc, #204]	; (8007394 <_printf_i+0x240>)
 80072c8:	2778      	movs	r7, #120	; 0x78
 80072ca:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80072ce:	6823      	ldr	r3, [r4, #0]
 80072d0:	6829      	ldr	r1, [r5, #0]
 80072d2:	061f      	lsls	r7, r3, #24
 80072d4:	f851 6b04 	ldr.w	r6, [r1], #4
 80072d8:	d402      	bmi.n	80072e0 <_printf_i+0x18c>
 80072da:	065f      	lsls	r7, r3, #25
 80072dc:	bf48      	it	mi
 80072de:	b2b6      	uxthmi	r6, r6
 80072e0:	07df      	lsls	r7, r3, #31
 80072e2:	bf48      	it	mi
 80072e4:	f043 0320 	orrmi.w	r3, r3, #32
 80072e8:	6029      	str	r1, [r5, #0]
 80072ea:	bf48      	it	mi
 80072ec:	6023      	strmi	r3, [r4, #0]
 80072ee:	b91e      	cbnz	r6, 80072f8 <_printf_i+0x1a4>
 80072f0:	6823      	ldr	r3, [r4, #0]
 80072f2:	f023 0320 	bic.w	r3, r3, #32
 80072f6:	6023      	str	r3, [r4, #0]
 80072f8:	2310      	movs	r3, #16
 80072fa:	e7a7      	b.n	800724c <_printf_i+0xf8>
 80072fc:	4824      	ldr	r0, [pc, #144]	; (8007390 <_printf_i+0x23c>)
 80072fe:	e7e4      	b.n	80072ca <_printf_i+0x176>
 8007300:	4615      	mov	r5, r2
 8007302:	e7bd      	b.n	8007280 <_printf_i+0x12c>
 8007304:	682b      	ldr	r3, [r5, #0]
 8007306:	6826      	ldr	r6, [r4, #0]
 8007308:	6961      	ldr	r1, [r4, #20]
 800730a:	1d18      	adds	r0, r3, #4
 800730c:	6028      	str	r0, [r5, #0]
 800730e:	0635      	lsls	r5, r6, #24
 8007310:	681b      	ldr	r3, [r3, #0]
 8007312:	d501      	bpl.n	8007318 <_printf_i+0x1c4>
 8007314:	6019      	str	r1, [r3, #0]
 8007316:	e002      	b.n	800731e <_printf_i+0x1ca>
 8007318:	0670      	lsls	r0, r6, #25
 800731a:	d5fb      	bpl.n	8007314 <_printf_i+0x1c0>
 800731c:	8019      	strh	r1, [r3, #0]
 800731e:	2300      	movs	r3, #0
 8007320:	6123      	str	r3, [r4, #16]
 8007322:	4615      	mov	r5, r2
 8007324:	e7bc      	b.n	80072a0 <_printf_i+0x14c>
 8007326:	682b      	ldr	r3, [r5, #0]
 8007328:	1d1a      	adds	r2, r3, #4
 800732a:	602a      	str	r2, [r5, #0]
 800732c:	681d      	ldr	r5, [r3, #0]
 800732e:	6862      	ldr	r2, [r4, #4]
 8007330:	2100      	movs	r1, #0
 8007332:	4628      	mov	r0, r5
 8007334:	f7f8 ff4c 	bl	80001d0 <memchr>
 8007338:	b108      	cbz	r0, 800733e <_printf_i+0x1ea>
 800733a:	1b40      	subs	r0, r0, r5
 800733c:	6060      	str	r0, [r4, #4]
 800733e:	6863      	ldr	r3, [r4, #4]
 8007340:	6123      	str	r3, [r4, #16]
 8007342:	2300      	movs	r3, #0
 8007344:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007348:	e7aa      	b.n	80072a0 <_printf_i+0x14c>
 800734a:	6923      	ldr	r3, [r4, #16]
 800734c:	462a      	mov	r2, r5
 800734e:	4649      	mov	r1, r9
 8007350:	4640      	mov	r0, r8
 8007352:	47d0      	blx	sl
 8007354:	3001      	adds	r0, #1
 8007356:	d0ad      	beq.n	80072b4 <_printf_i+0x160>
 8007358:	6823      	ldr	r3, [r4, #0]
 800735a:	079b      	lsls	r3, r3, #30
 800735c:	d413      	bmi.n	8007386 <_printf_i+0x232>
 800735e:	68e0      	ldr	r0, [r4, #12]
 8007360:	9b03      	ldr	r3, [sp, #12]
 8007362:	4298      	cmp	r0, r3
 8007364:	bfb8      	it	lt
 8007366:	4618      	movlt	r0, r3
 8007368:	e7a6      	b.n	80072b8 <_printf_i+0x164>
 800736a:	2301      	movs	r3, #1
 800736c:	4632      	mov	r2, r6
 800736e:	4649      	mov	r1, r9
 8007370:	4640      	mov	r0, r8
 8007372:	47d0      	blx	sl
 8007374:	3001      	adds	r0, #1
 8007376:	d09d      	beq.n	80072b4 <_printf_i+0x160>
 8007378:	3501      	adds	r5, #1
 800737a:	68e3      	ldr	r3, [r4, #12]
 800737c:	9903      	ldr	r1, [sp, #12]
 800737e:	1a5b      	subs	r3, r3, r1
 8007380:	42ab      	cmp	r3, r5
 8007382:	dcf2      	bgt.n	800736a <_printf_i+0x216>
 8007384:	e7eb      	b.n	800735e <_printf_i+0x20a>
 8007386:	2500      	movs	r5, #0
 8007388:	f104 0619 	add.w	r6, r4, #25
 800738c:	e7f5      	b.n	800737a <_printf_i+0x226>
 800738e:	bf00      	nop
 8007390:	0800bd22 	.word	0x0800bd22
 8007394:	0800bd33 	.word	0x0800bd33

08007398 <siprintf>:
 8007398:	b40e      	push	{r1, r2, r3}
 800739a:	b500      	push	{lr}
 800739c:	b09c      	sub	sp, #112	; 0x70
 800739e:	ab1d      	add	r3, sp, #116	; 0x74
 80073a0:	9002      	str	r0, [sp, #8]
 80073a2:	9006      	str	r0, [sp, #24]
 80073a4:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80073a8:	4809      	ldr	r0, [pc, #36]	; (80073d0 <siprintf+0x38>)
 80073aa:	9107      	str	r1, [sp, #28]
 80073ac:	9104      	str	r1, [sp, #16]
 80073ae:	4909      	ldr	r1, [pc, #36]	; (80073d4 <siprintf+0x3c>)
 80073b0:	f853 2b04 	ldr.w	r2, [r3], #4
 80073b4:	9105      	str	r1, [sp, #20]
 80073b6:	6800      	ldr	r0, [r0, #0]
 80073b8:	9301      	str	r3, [sp, #4]
 80073ba:	a902      	add	r1, sp, #8
 80073bc:	f002 fa48 	bl	8009850 <_svfiprintf_r>
 80073c0:	9b02      	ldr	r3, [sp, #8]
 80073c2:	2200      	movs	r2, #0
 80073c4:	701a      	strb	r2, [r3, #0]
 80073c6:	b01c      	add	sp, #112	; 0x70
 80073c8:	f85d eb04 	ldr.w	lr, [sp], #4
 80073cc:	b003      	add	sp, #12
 80073ce:	4770      	bx	lr
 80073d0:	200001ec 	.word	0x200001ec
 80073d4:	ffff0208 	.word	0xffff0208

080073d8 <std>:
 80073d8:	2300      	movs	r3, #0
 80073da:	b510      	push	{r4, lr}
 80073dc:	4604      	mov	r4, r0
 80073de:	e9c0 3300 	strd	r3, r3, [r0]
 80073e2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80073e6:	6083      	str	r3, [r0, #8]
 80073e8:	8181      	strh	r1, [r0, #12]
 80073ea:	6643      	str	r3, [r0, #100]	; 0x64
 80073ec:	81c2      	strh	r2, [r0, #14]
 80073ee:	6183      	str	r3, [r0, #24]
 80073f0:	4619      	mov	r1, r3
 80073f2:	2208      	movs	r2, #8
 80073f4:	305c      	adds	r0, #92	; 0x5c
 80073f6:	f000 ff8f 	bl	8008318 <memset>
 80073fa:	4b05      	ldr	r3, [pc, #20]	; (8007410 <std+0x38>)
 80073fc:	6263      	str	r3, [r4, #36]	; 0x24
 80073fe:	4b05      	ldr	r3, [pc, #20]	; (8007414 <std+0x3c>)
 8007400:	62a3      	str	r3, [r4, #40]	; 0x28
 8007402:	4b05      	ldr	r3, [pc, #20]	; (8007418 <std+0x40>)
 8007404:	62e3      	str	r3, [r4, #44]	; 0x2c
 8007406:	4b05      	ldr	r3, [pc, #20]	; (800741c <std+0x44>)
 8007408:	6224      	str	r4, [r4, #32]
 800740a:	6323      	str	r3, [r4, #48]	; 0x30
 800740c:	bd10      	pop	{r4, pc}
 800740e:	bf00      	nop
 8007410:	0800a917 	.word	0x0800a917
 8007414:	0800a939 	.word	0x0800a939
 8007418:	0800a971 	.word	0x0800a971
 800741c:	0800a995 	.word	0x0800a995

08007420 <stdio_exit_handler>:
 8007420:	4a02      	ldr	r2, [pc, #8]	; (800742c <stdio_exit_handler+0xc>)
 8007422:	4903      	ldr	r1, [pc, #12]	; (8007430 <stdio_exit_handler+0x10>)
 8007424:	4803      	ldr	r0, [pc, #12]	; (8007434 <stdio_exit_handler+0x14>)
 8007426:	f000 bec5 	b.w	80081b4 <_fwalk_sglue>
 800742a:	bf00      	nop
 800742c:	20000028 	.word	0x20000028
 8007430:	08009f55 	.word	0x08009f55
 8007434:	200001a0 	.word	0x200001a0

08007438 <cleanup_stdio>:
 8007438:	6841      	ldr	r1, [r0, #4]
 800743a:	4b0c      	ldr	r3, [pc, #48]	; (800746c <cleanup_stdio+0x34>)
 800743c:	4299      	cmp	r1, r3
 800743e:	b510      	push	{r4, lr}
 8007440:	4604      	mov	r4, r0
 8007442:	d001      	beq.n	8007448 <cleanup_stdio+0x10>
 8007444:	f002 fd86 	bl	8009f54 <_fflush_r>
 8007448:	68a1      	ldr	r1, [r4, #8]
 800744a:	4b09      	ldr	r3, [pc, #36]	; (8007470 <cleanup_stdio+0x38>)
 800744c:	4299      	cmp	r1, r3
 800744e:	d002      	beq.n	8007456 <cleanup_stdio+0x1e>
 8007450:	4620      	mov	r0, r4
 8007452:	f002 fd7f 	bl	8009f54 <_fflush_r>
 8007456:	68e1      	ldr	r1, [r4, #12]
 8007458:	4b06      	ldr	r3, [pc, #24]	; (8007474 <cleanup_stdio+0x3c>)
 800745a:	4299      	cmp	r1, r3
 800745c:	d004      	beq.n	8007468 <cleanup_stdio+0x30>
 800745e:	4620      	mov	r0, r4
 8007460:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007464:	f002 bd76 	b.w	8009f54 <_fflush_r>
 8007468:	bd10      	pop	{r4, pc}
 800746a:	bf00      	nop
 800746c:	20000e48 	.word	0x20000e48
 8007470:	20000eb0 	.word	0x20000eb0
 8007474:	20000f18 	.word	0x20000f18

08007478 <global_stdio_init.part.0>:
 8007478:	b510      	push	{r4, lr}
 800747a:	4b0b      	ldr	r3, [pc, #44]	; (80074a8 <global_stdio_init.part.0+0x30>)
 800747c:	4c0b      	ldr	r4, [pc, #44]	; (80074ac <global_stdio_init.part.0+0x34>)
 800747e:	4a0c      	ldr	r2, [pc, #48]	; (80074b0 <global_stdio_init.part.0+0x38>)
 8007480:	601a      	str	r2, [r3, #0]
 8007482:	4620      	mov	r0, r4
 8007484:	2200      	movs	r2, #0
 8007486:	2104      	movs	r1, #4
 8007488:	f7ff ffa6 	bl	80073d8 <std>
 800748c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8007490:	2201      	movs	r2, #1
 8007492:	2109      	movs	r1, #9
 8007494:	f7ff ffa0 	bl	80073d8 <std>
 8007498:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 800749c:	2202      	movs	r2, #2
 800749e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80074a2:	2112      	movs	r1, #18
 80074a4:	f7ff bf98 	b.w	80073d8 <std>
 80074a8:	20000f80 	.word	0x20000f80
 80074ac:	20000e48 	.word	0x20000e48
 80074b0:	08007421 	.word	0x08007421

080074b4 <__sfp_lock_acquire>:
 80074b4:	4801      	ldr	r0, [pc, #4]	; (80074bc <__sfp_lock_acquire+0x8>)
 80074b6:	f000 bf65 	b.w	8008384 <__retarget_lock_acquire_recursive>
 80074ba:	bf00      	nop
 80074bc:	20000f85 	.word	0x20000f85

080074c0 <__sfp_lock_release>:
 80074c0:	4801      	ldr	r0, [pc, #4]	; (80074c8 <__sfp_lock_release+0x8>)
 80074c2:	f000 bf60 	b.w	8008386 <__retarget_lock_release_recursive>
 80074c6:	bf00      	nop
 80074c8:	20000f85 	.word	0x20000f85

080074cc <__sinit>:
 80074cc:	b510      	push	{r4, lr}
 80074ce:	4604      	mov	r4, r0
 80074d0:	f7ff fff0 	bl	80074b4 <__sfp_lock_acquire>
 80074d4:	6a23      	ldr	r3, [r4, #32]
 80074d6:	b11b      	cbz	r3, 80074e0 <__sinit+0x14>
 80074d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80074dc:	f7ff bff0 	b.w	80074c0 <__sfp_lock_release>
 80074e0:	4b04      	ldr	r3, [pc, #16]	; (80074f4 <__sinit+0x28>)
 80074e2:	6223      	str	r3, [r4, #32]
 80074e4:	4b04      	ldr	r3, [pc, #16]	; (80074f8 <__sinit+0x2c>)
 80074e6:	681b      	ldr	r3, [r3, #0]
 80074e8:	2b00      	cmp	r3, #0
 80074ea:	d1f5      	bne.n	80074d8 <__sinit+0xc>
 80074ec:	f7ff ffc4 	bl	8007478 <global_stdio_init.part.0>
 80074f0:	e7f2      	b.n	80074d8 <__sinit+0xc>
 80074f2:	bf00      	nop
 80074f4:	08007439 	.word	0x08007439
 80074f8:	20000f80 	.word	0x20000f80

080074fc <sulp>:
 80074fc:	b570      	push	{r4, r5, r6, lr}
 80074fe:	4604      	mov	r4, r0
 8007500:	460d      	mov	r5, r1
 8007502:	ec45 4b10 	vmov	d0, r4, r5
 8007506:	4616      	mov	r6, r2
 8007508:	f003 f8c4 	bl	800a694 <__ulp>
 800750c:	ec51 0b10 	vmov	r0, r1, d0
 8007510:	b17e      	cbz	r6, 8007532 <sulp+0x36>
 8007512:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8007516:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800751a:	2b00      	cmp	r3, #0
 800751c:	dd09      	ble.n	8007532 <sulp+0x36>
 800751e:	051b      	lsls	r3, r3, #20
 8007520:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8007524:	2400      	movs	r4, #0
 8007526:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 800752a:	4622      	mov	r2, r4
 800752c:	462b      	mov	r3, r5
 800752e:	f7f9 f86d 	bl	800060c <__aeabi_dmul>
 8007532:	bd70      	pop	{r4, r5, r6, pc}
 8007534:	0000      	movs	r0, r0
	...

08007538 <_strtod_l>:
 8007538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800753c:	ed2d 8b02 	vpush	{d8}
 8007540:	b09b      	sub	sp, #108	; 0x6c
 8007542:	4604      	mov	r4, r0
 8007544:	9213      	str	r2, [sp, #76]	; 0x4c
 8007546:	2200      	movs	r2, #0
 8007548:	9216      	str	r2, [sp, #88]	; 0x58
 800754a:	460d      	mov	r5, r1
 800754c:	f04f 0800 	mov.w	r8, #0
 8007550:	f04f 0900 	mov.w	r9, #0
 8007554:	460a      	mov	r2, r1
 8007556:	9215      	str	r2, [sp, #84]	; 0x54
 8007558:	7811      	ldrb	r1, [r2, #0]
 800755a:	292b      	cmp	r1, #43	; 0x2b
 800755c:	d04c      	beq.n	80075f8 <_strtod_l+0xc0>
 800755e:	d83a      	bhi.n	80075d6 <_strtod_l+0x9e>
 8007560:	290d      	cmp	r1, #13
 8007562:	d834      	bhi.n	80075ce <_strtod_l+0x96>
 8007564:	2908      	cmp	r1, #8
 8007566:	d834      	bhi.n	80075d2 <_strtod_l+0x9a>
 8007568:	2900      	cmp	r1, #0
 800756a:	d03d      	beq.n	80075e8 <_strtod_l+0xb0>
 800756c:	2200      	movs	r2, #0
 800756e:	920a      	str	r2, [sp, #40]	; 0x28
 8007570:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8007572:	7832      	ldrb	r2, [r6, #0]
 8007574:	2a30      	cmp	r2, #48	; 0x30
 8007576:	f040 80b4 	bne.w	80076e2 <_strtod_l+0x1aa>
 800757a:	7872      	ldrb	r2, [r6, #1]
 800757c:	f002 02df 	and.w	r2, r2, #223	; 0xdf
 8007580:	2a58      	cmp	r2, #88	; 0x58
 8007582:	d170      	bne.n	8007666 <_strtod_l+0x12e>
 8007584:	9302      	str	r3, [sp, #8]
 8007586:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007588:	9301      	str	r3, [sp, #4]
 800758a:	ab16      	add	r3, sp, #88	; 0x58
 800758c:	9300      	str	r3, [sp, #0]
 800758e:	4a8e      	ldr	r2, [pc, #568]	; (80077c8 <_strtod_l+0x290>)
 8007590:	ab17      	add	r3, sp, #92	; 0x5c
 8007592:	a915      	add	r1, sp, #84	; 0x54
 8007594:	4620      	mov	r0, r4
 8007596:	f001 fe11 	bl	80091bc <__gethex>
 800759a:	f010 070f 	ands.w	r7, r0, #15
 800759e:	4605      	mov	r5, r0
 80075a0:	d005      	beq.n	80075ae <_strtod_l+0x76>
 80075a2:	2f06      	cmp	r7, #6
 80075a4:	d12a      	bne.n	80075fc <_strtod_l+0xc4>
 80075a6:	3601      	adds	r6, #1
 80075a8:	2300      	movs	r3, #0
 80075aa:	9615      	str	r6, [sp, #84]	; 0x54
 80075ac:	930a      	str	r3, [sp, #40]	; 0x28
 80075ae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80075b0:	2b00      	cmp	r3, #0
 80075b2:	f040 857f 	bne.w	80080b4 <_strtod_l+0xb7c>
 80075b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80075b8:	b1db      	cbz	r3, 80075f2 <_strtod_l+0xba>
 80075ba:	4642      	mov	r2, r8
 80075bc:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 80075c0:	ec43 2b10 	vmov	d0, r2, r3
 80075c4:	b01b      	add	sp, #108	; 0x6c
 80075c6:	ecbd 8b02 	vpop	{d8}
 80075ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80075ce:	2920      	cmp	r1, #32
 80075d0:	d1cc      	bne.n	800756c <_strtod_l+0x34>
 80075d2:	3201      	adds	r2, #1
 80075d4:	e7bf      	b.n	8007556 <_strtod_l+0x1e>
 80075d6:	292d      	cmp	r1, #45	; 0x2d
 80075d8:	d1c8      	bne.n	800756c <_strtod_l+0x34>
 80075da:	2101      	movs	r1, #1
 80075dc:	910a      	str	r1, [sp, #40]	; 0x28
 80075de:	1c51      	adds	r1, r2, #1
 80075e0:	9115      	str	r1, [sp, #84]	; 0x54
 80075e2:	7852      	ldrb	r2, [r2, #1]
 80075e4:	2a00      	cmp	r2, #0
 80075e6:	d1c3      	bne.n	8007570 <_strtod_l+0x38>
 80075e8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80075ea:	9515      	str	r5, [sp, #84]	; 0x54
 80075ec:	2b00      	cmp	r3, #0
 80075ee:	f040 855f 	bne.w	80080b0 <_strtod_l+0xb78>
 80075f2:	4642      	mov	r2, r8
 80075f4:	464b      	mov	r3, r9
 80075f6:	e7e3      	b.n	80075c0 <_strtod_l+0x88>
 80075f8:	2100      	movs	r1, #0
 80075fa:	e7ef      	b.n	80075dc <_strtod_l+0xa4>
 80075fc:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80075fe:	b13a      	cbz	r2, 8007610 <_strtod_l+0xd8>
 8007600:	2135      	movs	r1, #53	; 0x35
 8007602:	a818      	add	r0, sp, #96	; 0x60
 8007604:	f003 f943 	bl	800a88e <__copybits>
 8007608:	9916      	ldr	r1, [sp, #88]	; 0x58
 800760a:	4620      	mov	r0, r4
 800760c:	f002 fd16 	bl	800a03c <_Bfree>
 8007610:	3f01      	subs	r7, #1
 8007612:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8007614:	2f04      	cmp	r7, #4
 8007616:	d806      	bhi.n	8007626 <_strtod_l+0xee>
 8007618:	e8df f007 	tbb	[pc, r7]
 800761c:	201d0314 	.word	0x201d0314
 8007620:	14          	.byte	0x14
 8007621:	00          	.byte	0x00
 8007622:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
 8007626:	05e9      	lsls	r1, r5, #23
 8007628:	bf48      	it	mi
 800762a:	f049 4900 	orrmi.w	r9, r9, #2147483648	; 0x80000000
 800762e:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8007632:	0d1b      	lsrs	r3, r3, #20
 8007634:	051b      	lsls	r3, r3, #20
 8007636:	2b00      	cmp	r3, #0
 8007638:	d1b9      	bne.n	80075ae <_strtod_l+0x76>
 800763a:	f000 fe79 	bl	8008330 <__errno>
 800763e:	2322      	movs	r3, #34	; 0x22
 8007640:	6003      	str	r3, [r0, #0]
 8007642:	e7b4      	b.n	80075ae <_strtod_l+0x76>
 8007644:	e9dd 8318 	ldrd	r8, r3, [sp, #96]	; 0x60
 8007648:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800764c:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8007650:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 8007654:	e7e7      	b.n	8007626 <_strtod_l+0xee>
 8007656:	f8df 9178 	ldr.w	r9, [pc, #376]	; 80077d0 <_strtod_l+0x298>
 800765a:	e7e4      	b.n	8007626 <_strtod_l+0xee>
 800765c:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 8007660:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 8007664:	e7df      	b.n	8007626 <_strtod_l+0xee>
 8007666:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8007668:	1c5a      	adds	r2, r3, #1
 800766a:	9215      	str	r2, [sp, #84]	; 0x54
 800766c:	785b      	ldrb	r3, [r3, #1]
 800766e:	2b30      	cmp	r3, #48	; 0x30
 8007670:	d0f9      	beq.n	8007666 <_strtod_l+0x12e>
 8007672:	2b00      	cmp	r3, #0
 8007674:	d09b      	beq.n	80075ae <_strtod_l+0x76>
 8007676:	2301      	movs	r3, #1
 8007678:	f04f 0a00 	mov.w	sl, #0
 800767c:	9304      	str	r3, [sp, #16]
 800767e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8007680:	930b      	str	r3, [sp, #44]	; 0x2c
 8007682:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 8007686:	46d3      	mov	fp, sl
 8007688:	220a      	movs	r2, #10
 800768a:	9815      	ldr	r0, [sp, #84]	; 0x54
 800768c:	7806      	ldrb	r6, [r0, #0]
 800768e:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 8007692:	b2d9      	uxtb	r1, r3
 8007694:	2909      	cmp	r1, #9
 8007696:	d926      	bls.n	80076e6 <_strtod_l+0x1ae>
 8007698:	494c      	ldr	r1, [pc, #304]	; (80077cc <_strtod_l+0x294>)
 800769a:	2201      	movs	r2, #1
 800769c:	f000 fdba 	bl	8008214 <strncmp>
 80076a0:	2800      	cmp	r0, #0
 80076a2:	d030      	beq.n	8007706 <_strtod_l+0x1ce>
 80076a4:	2000      	movs	r0, #0
 80076a6:	4632      	mov	r2, r6
 80076a8:	9005      	str	r0, [sp, #20]
 80076aa:	465e      	mov	r6, fp
 80076ac:	4603      	mov	r3, r0
 80076ae:	2a65      	cmp	r2, #101	; 0x65
 80076b0:	d001      	beq.n	80076b6 <_strtod_l+0x17e>
 80076b2:	2a45      	cmp	r2, #69	; 0x45
 80076b4:	d113      	bne.n	80076de <_strtod_l+0x1a6>
 80076b6:	b91e      	cbnz	r6, 80076c0 <_strtod_l+0x188>
 80076b8:	9a04      	ldr	r2, [sp, #16]
 80076ba:	4302      	orrs	r2, r0
 80076bc:	d094      	beq.n	80075e8 <_strtod_l+0xb0>
 80076be:	2600      	movs	r6, #0
 80076c0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80076c2:	1c6a      	adds	r2, r5, #1
 80076c4:	9215      	str	r2, [sp, #84]	; 0x54
 80076c6:	786a      	ldrb	r2, [r5, #1]
 80076c8:	2a2b      	cmp	r2, #43	; 0x2b
 80076ca:	d074      	beq.n	80077b6 <_strtod_l+0x27e>
 80076cc:	2a2d      	cmp	r2, #45	; 0x2d
 80076ce:	d078      	beq.n	80077c2 <_strtod_l+0x28a>
 80076d0:	f04f 0c00 	mov.w	ip, #0
 80076d4:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 80076d8:	2909      	cmp	r1, #9
 80076da:	d97f      	bls.n	80077dc <_strtod_l+0x2a4>
 80076dc:	9515      	str	r5, [sp, #84]	; 0x54
 80076de:	2700      	movs	r7, #0
 80076e0:	e09e      	b.n	8007820 <_strtod_l+0x2e8>
 80076e2:	2300      	movs	r3, #0
 80076e4:	e7c8      	b.n	8007678 <_strtod_l+0x140>
 80076e6:	f1bb 0f08 	cmp.w	fp, #8
 80076ea:	bfd8      	it	le
 80076ec:	9909      	ldrle	r1, [sp, #36]	; 0x24
 80076ee:	f100 0001 	add.w	r0, r0, #1
 80076f2:	bfda      	itte	le
 80076f4:	fb02 3301 	mlale	r3, r2, r1, r3
 80076f8:	9309      	strle	r3, [sp, #36]	; 0x24
 80076fa:	fb02 3a0a 	mlagt	sl, r2, sl, r3
 80076fe:	f10b 0b01 	add.w	fp, fp, #1
 8007702:	9015      	str	r0, [sp, #84]	; 0x54
 8007704:	e7c1      	b.n	800768a <_strtod_l+0x152>
 8007706:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8007708:	1c5a      	adds	r2, r3, #1
 800770a:	9215      	str	r2, [sp, #84]	; 0x54
 800770c:	785a      	ldrb	r2, [r3, #1]
 800770e:	f1bb 0f00 	cmp.w	fp, #0
 8007712:	d037      	beq.n	8007784 <_strtod_l+0x24c>
 8007714:	9005      	str	r0, [sp, #20]
 8007716:	465e      	mov	r6, fp
 8007718:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800771c:	2b09      	cmp	r3, #9
 800771e:	d912      	bls.n	8007746 <_strtod_l+0x20e>
 8007720:	2301      	movs	r3, #1
 8007722:	e7c4      	b.n	80076ae <_strtod_l+0x176>
 8007724:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8007726:	1c5a      	adds	r2, r3, #1
 8007728:	9215      	str	r2, [sp, #84]	; 0x54
 800772a:	785a      	ldrb	r2, [r3, #1]
 800772c:	3001      	adds	r0, #1
 800772e:	2a30      	cmp	r2, #48	; 0x30
 8007730:	d0f8      	beq.n	8007724 <_strtod_l+0x1ec>
 8007732:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 8007736:	2b08      	cmp	r3, #8
 8007738:	f200 84c1 	bhi.w	80080be <_strtod_l+0xb86>
 800773c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800773e:	9005      	str	r0, [sp, #20]
 8007740:	2000      	movs	r0, #0
 8007742:	930b      	str	r3, [sp, #44]	; 0x2c
 8007744:	4606      	mov	r6, r0
 8007746:	3a30      	subs	r2, #48	; 0x30
 8007748:	f100 0301 	add.w	r3, r0, #1
 800774c:	d014      	beq.n	8007778 <_strtod_l+0x240>
 800774e:	9905      	ldr	r1, [sp, #20]
 8007750:	4419      	add	r1, r3
 8007752:	9105      	str	r1, [sp, #20]
 8007754:	4633      	mov	r3, r6
 8007756:	eb00 0c06 	add.w	ip, r0, r6
 800775a:	210a      	movs	r1, #10
 800775c:	4563      	cmp	r3, ip
 800775e:	d113      	bne.n	8007788 <_strtod_l+0x250>
 8007760:	1833      	adds	r3, r6, r0
 8007762:	2b08      	cmp	r3, #8
 8007764:	f106 0601 	add.w	r6, r6, #1
 8007768:	4406      	add	r6, r0
 800776a:	dc1a      	bgt.n	80077a2 <_strtod_l+0x26a>
 800776c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800776e:	230a      	movs	r3, #10
 8007770:	fb03 2301 	mla	r3, r3, r1, r2
 8007774:	9309      	str	r3, [sp, #36]	; 0x24
 8007776:	2300      	movs	r3, #0
 8007778:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800777a:	1c51      	adds	r1, r2, #1
 800777c:	9115      	str	r1, [sp, #84]	; 0x54
 800777e:	7852      	ldrb	r2, [r2, #1]
 8007780:	4618      	mov	r0, r3
 8007782:	e7c9      	b.n	8007718 <_strtod_l+0x1e0>
 8007784:	4658      	mov	r0, fp
 8007786:	e7d2      	b.n	800772e <_strtod_l+0x1f6>
 8007788:	2b08      	cmp	r3, #8
 800778a:	f103 0301 	add.w	r3, r3, #1
 800778e:	dc03      	bgt.n	8007798 <_strtod_l+0x260>
 8007790:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8007792:	434f      	muls	r7, r1
 8007794:	9709      	str	r7, [sp, #36]	; 0x24
 8007796:	e7e1      	b.n	800775c <_strtod_l+0x224>
 8007798:	2b10      	cmp	r3, #16
 800779a:	bfd8      	it	le
 800779c:	fb01 fa0a 	mulle.w	sl, r1, sl
 80077a0:	e7dc      	b.n	800775c <_strtod_l+0x224>
 80077a2:	2e10      	cmp	r6, #16
 80077a4:	bfdc      	itt	le
 80077a6:	230a      	movle	r3, #10
 80077a8:	fb03 2a0a 	mlale	sl, r3, sl, r2
 80077ac:	e7e3      	b.n	8007776 <_strtod_l+0x23e>
 80077ae:	2300      	movs	r3, #0
 80077b0:	9305      	str	r3, [sp, #20]
 80077b2:	2301      	movs	r3, #1
 80077b4:	e780      	b.n	80076b8 <_strtod_l+0x180>
 80077b6:	f04f 0c00 	mov.w	ip, #0
 80077ba:	1caa      	adds	r2, r5, #2
 80077bc:	9215      	str	r2, [sp, #84]	; 0x54
 80077be:	78aa      	ldrb	r2, [r5, #2]
 80077c0:	e788      	b.n	80076d4 <_strtod_l+0x19c>
 80077c2:	f04f 0c01 	mov.w	ip, #1
 80077c6:	e7f8      	b.n	80077ba <_strtod_l+0x282>
 80077c8:	0800bd48 	.word	0x0800bd48
 80077cc:	0800bd44 	.word	0x0800bd44
 80077d0:	7ff00000 	.word	0x7ff00000
 80077d4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80077d6:	1c51      	adds	r1, r2, #1
 80077d8:	9115      	str	r1, [sp, #84]	; 0x54
 80077da:	7852      	ldrb	r2, [r2, #1]
 80077dc:	2a30      	cmp	r2, #48	; 0x30
 80077de:	d0f9      	beq.n	80077d4 <_strtod_l+0x29c>
 80077e0:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 80077e4:	2908      	cmp	r1, #8
 80077e6:	f63f af7a 	bhi.w	80076de <_strtod_l+0x1a6>
 80077ea:	3a30      	subs	r2, #48	; 0x30
 80077ec:	9208      	str	r2, [sp, #32]
 80077ee:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80077f0:	920c      	str	r2, [sp, #48]	; 0x30
 80077f2:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80077f4:	1c57      	adds	r7, r2, #1
 80077f6:	9715      	str	r7, [sp, #84]	; 0x54
 80077f8:	7852      	ldrb	r2, [r2, #1]
 80077fa:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 80077fe:	f1be 0f09 	cmp.w	lr, #9
 8007802:	d938      	bls.n	8007876 <_strtod_l+0x33e>
 8007804:	990c      	ldr	r1, [sp, #48]	; 0x30
 8007806:	1a7f      	subs	r7, r7, r1
 8007808:	2f08      	cmp	r7, #8
 800780a:	f644 671f 	movw	r7, #19999	; 0x4e1f
 800780e:	dc03      	bgt.n	8007818 <_strtod_l+0x2e0>
 8007810:	9908      	ldr	r1, [sp, #32]
 8007812:	428f      	cmp	r7, r1
 8007814:	bfa8      	it	ge
 8007816:	460f      	movge	r7, r1
 8007818:	f1bc 0f00 	cmp.w	ip, #0
 800781c:	d000      	beq.n	8007820 <_strtod_l+0x2e8>
 800781e:	427f      	negs	r7, r7
 8007820:	2e00      	cmp	r6, #0
 8007822:	d14f      	bne.n	80078c4 <_strtod_l+0x38c>
 8007824:	9904      	ldr	r1, [sp, #16]
 8007826:	4301      	orrs	r1, r0
 8007828:	f47f aec1 	bne.w	80075ae <_strtod_l+0x76>
 800782c:	2b00      	cmp	r3, #0
 800782e:	f47f aedb 	bne.w	80075e8 <_strtod_l+0xb0>
 8007832:	2a69      	cmp	r2, #105	; 0x69
 8007834:	d029      	beq.n	800788a <_strtod_l+0x352>
 8007836:	dc26      	bgt.n	8007886 <_strtod_l+0x34e>
 8007838:	2a49      	cmp	r2, #73	; 0x49
 800783a:	d026      	beq.n	800788a <_strtod_l+0x352>
 800783c:	2a4e      	cmp	r2, #78	; 0x4e
 800783e:	f47f aed3 	bne.w	80075e8 <_strtod_l+0xb0>
 8007842:	499b      	ldr	r1, [pc, #620]	; (8007ab0 <_strtod_l+0x578>)
 8007844:	a815      	add	r0, sp, #84	; 0x54
 8007846:	f001 fef9 	bl	800963c <__match>
 800784a:	2800      	cmp	r0, #0
 800784c:	f43f aecc 	beq.w	80075e8 <_strtod_l+0xb0>
 8007850:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8007852:	781b      	ldrb	r3, [r3, #0]
 8007854:	2b28      	cmp	r3, #40	; 0x28
 8007856:	d12f      	bne.n	80078b8 <_strtod_l+0x380>
 8007858:	4996      	ldr	r1, [pc, #600]	; (8007ab4 <_strtod_l+0x57c>)
 800785a:	aa18      	add	r2, sp, #96	; 0x60
 800785c:	a815      	add	r0, sp, #84	; 0x54
 800785e:	f001 ff01 	bl	8009664 <__hexnan>
 8007862:	2805      	cmp	r0, #5
 8007864:	d128      	bne.n	80078b8 <_strtod_l+0x380>
 8007866:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8007868:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800786c:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 8007870:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 8007874:	e69b      	b.n	80075ae <_strtod_l+0x76>
 8007876:	9f08      	ldr	r7, [sp, #32]
 8007878:	210a      	movs	r1, #10
 800787a:	fb01 2107 	mla	r1, r1, r7, r2
 800787e:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 8007882:	9208      	str	r2, [sp, #32]
 8007884:	e7b5      	b.n	80077f2 <_strtod_l+0x2ba>
 8007886:	2a6e      	cmp	r2, #110	; 0x6e
 8007888:	e7d9      	b.n	800783e <_strtod_l+0x306>
 800788a:	498b      	ldr	r1, [pc, #556]	; (8007ab8 <_strtod_l+0x580>)
 800788c:	a815      	add	r0, sp, #84	; 0x54
 800788e:	f001 fed5 	bl	800963c <__match>
 8007892:	2800      	cmp	r0, #0
 8007894:	f43f aea8 	beq.w	80075e8 <_strtod_l+0xb0>
 8007898:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800789a:	4988      	ldr	r1, [pc, #544]	; (8007abc <_strtod_l+0x584>)
 800789c:	3b01      	subs	r3, #1
 800789e:	a815      	add	r0, sp, #84	; 0x54
 80078a0:	9315      	str	r3, [sp, #84]	; 0x54
 80078a2:	f001 fecb 	bl	800963c <__match>
 80078a6:	b910      	cbnz	r0, 80078ae <_strtod_l+0x376>
 80078a8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80078aa:	3301      	adds	r3, #1
 80078ac:	9315      	str	r3, [sp, #84]	; 0x54
 80078ae:	f8df 921c 	ldr.w	r9, [pc, #540]	; 8007acc <_strtod_l+0x594>
 80078b2:	f04f 0800 	mov.w	r8, #0
 80078b6:	e67a      	b.n	80075ae <_strtod_l+0x76>
 80078b8:	4881      	ldr	r0, [pc, #516]	; (8007ac0 <_strtod_l+0x588>)
 80078ba:	f000 fd75 	bl	80083a8 <nan>
 80078be:	ec59 8b10 	vmov	r8, r9, d0
 80078c2:	e674      	b.n	80075ae <_strtod_l+0x76>
 80078c4:	9b05      	ldr	r3, [sp, #20]
 80078c6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80078c8:	1afb      	subs	r3, r7, r3
 80078ca:	f1bb 0f00 	cmp.w	fp, #0
 80078ce:	bf08      	it	eq
 80078d0:	46b3      	moveq	fp, r6
 80078d2:	2e10      	cmp	r6, #16
 80078d4:	9308      	str	r3, [sp, #32]
 80078d6:	4635      	mov	r5, r6
 80078d8:	bfa8      	it	ge
 80078da:	2510      	movge	r5, #16
 80078dc:	f7f8 fe1c 	bl	8000518 <__aeabi_ui2d>
 80078e0:	2e09      	cmp	r6, #9
 80078e2:	4680      	mov	r8, r0
 80078e4:	4689      	mov	r9, r1
 80078e6:	dd13      	ble.n	8007910 <_strtod_l+0x3d8>
 80078e8:	4b76      	ldr	r3, [pc, #472]	; (8007ac4 <_strtod_l+0x58c>)
 80078ea:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80078ee:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 80078f2:	f7f8 fe8b 	bl	800060c <__aeabi_dmul>
 80078f6:	4680      	mov	r8, r0
 80078f8:	4650      	mov	r0, sl
 80078fa:	4689      	mov	r9, r1
 80078fc:	f7f8 fe0c 	bl	8000518 <__aeabi_ui2d>
 8007900:	4602      	mov	r2, r0
 8007902:	460b      	mov	r3, r1
 8007904:	4640      	mov	r0, r8
 8007906:	4649      	mov	r1, r9
 8007908:	f7f8 fcca 	bl	80002a0 <__adddf3>
 800790c:	4680      	mov	r8, r0
 800790e:	4689      	mov	r9, r1
 8007910:	2e0f      	cmp	r6, #15
 8007912:	dc38      	bgt.n	8007986 <_strtod_l+0x44e>
 8007914:	9b08      	ldr	r3, [sp, #32]
 8007916:	2b00      	cmp	r3, #0
 8007918:	f43f ae49 	beq.w	80075ae <_strtod_l+0x76>
 800791c:	dd24      	ble.n	8007968 <_strtod_l+0x430>
 800791e:	2b16      	cmp	r3, #22
 8007920:	dc0b      	bgt.n	800793a <_strtod_l+0x402>
 8007922:	4968      	ldr	r1, [pc, #416]	; (8007ac4 <_strtod_l+0x58c>)
 8007924:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8007928:	e9d1 0100 	ldrd	r0, r1, [r1]
 800792c:	4642      	mov	r2, r8
 800792e:	464b      	mov	r3, r9
 8007930:	f7f8 fe6c 	bl	800060c <__aeabi_dmul>
 8007934:	4680      	mov	r8, r0
 8007936:	4689      	mov	r9, r1
 8007938:	e639      	b.n	80075ae <_strtod_l+0x76>
 800793a:	9a08      	ldr	r2, [sp, #32]
 800793c:	f1c6 0325 	rsb	r3, r6, #37	; 0x25
 8007940:	4293      	cmp	r3, r2
 8007942:	db20      	blt.n	8007986 <_strtod_l+0x44e>
 8007944:	4c5f      	ldr	r4, [pc, #380]	; (8007ac4 <_strtod_l+0x58c>)
 8007946:	f1c6 060f 	rsb	r6, r6, #15
 800794a:	eb04 01c6 	add.w	r1, r4, r6, lsl #3
 800794e:	4642      	mov	r2, r8
 8007950:	464b      	mov	r3, r9
 8007952:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007956:	f7f8 fe59 	bl	800060c <__aeabi_dmul>
 800795a:	9b08      	ldr	r3, [sp, #32]
 800795c:	1b9e      	subs	r6, r3, r6
 800795e:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 8007962:	e9d4 2300 	ldrd	r2, r3, [r4]
 8007966:	e7e3      	b.n	8007930 <_strtod_l+0x3f8>
 8007968:	9b08      	ldr	r3, [sp, #32]
 800796a:	3316      	adds	r3, #22
 800796c:	db0b      	blt.n	8007986 <_strtod_l+0x44e>
 800796e:	9b05      	ldr	r3, [sp, #20]
 8007970:	1bdf      	subs	r7, r3, r7
 8007972:	4b54      	ldr	r3, [pc, #336]	; (8007ac4 <_strtod_l+0x58c>)
 8007974:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8007978:	e9d7 2300 	ldrd	r2, r3, [r7]
 800797c:	4640      	mov	r0, r8
 800797e:	4649      	mov	r1, r9
 8007980:	f7f8 ff6e 	bl	8000860 <__aeabi_ddiv>
 8007984:	e7d6      	b.n	8007934 <_strtod_l+0x3fc>
 8007986:	9b08      	ldr	r3, [sp, #32]
 8007988:	1b75      	subs	r5, r6, r5
 800798a:	441d      	add	r5, r3
 800798c:	2d00      	cmp	r5, #0
 800798e:	dd70      	ble.n	8007a72 <_strtod_l+0x53a>
 8007990:	f015 030f 	ands.w	r3, r5, #15
 8007994:	d00a      	beq.n	80079ac <_strtod_l+0x474>
 8007996:	494b      	ldr	r1, [pc, #300]	; (8007ac4 <_strtod_l+0x58c>)
 8007998:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800799c:	4642      	mov	r2, r8
 800799e:	464b      	mov	r3, r9
 80079a0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80079a4:	f7f8 fe32 	bl	800060c <__aeabi_dmul>
 80079a8:	4680      	mov	r8, r0
 80079aa:	4689      	mov	r9, r1
 80079ac:	f035 050f 	bics.w	r5, r5, #15
 80079b0:	d04d      	beq.n	8007a4e <_strtod_l+0x516>
 80079b2:	f5b5 7f9a 	cmp.w	r5, #308	; 0x134
 80079b6:	dd22      	ble.n	80079fe <_strtod_l+0x4c6>
 80079b8:	2500      	movs	r5, #0
 80079ba:	46ab      	mov	fp, r5
 80079bc:	9509      	str	r5, [sp, #36]	; 0x24
 80079be:	9505      	str	r5, [sp, #20]
 80079c0:	2322      	movs	r3, #34	; 0x22
 80079c2:	f8df 9108 	ldr.w	r9, [pc, #264]	; 8007acc <_strtod_l+0x594>
 80079c6:	6023      	str	r3, [r4, #0]
 80079c8:	f04f 0800 	mov.w	r8, #0
 80079cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80079ce:	2b00      	cmp	r3, #0
 80079d0:	f43f aded 	beq.w	80075ae <_strtod_l+0x76>
 80079d4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80079d6:	4620      	mov	r0, r4
 80079d8:	f002 fb30 	bl	800a03c <_Bfree>
 80079dc:	9905      	ldr	r1, [sp, #20]
 80079de:	4620      	mov	r0, r4
 80079e0:	f002 fb2c 	bl	800a03c <_Bfree>
 80079e4:	4659      	mov	r1, fp
 80079e6:	4620      	mov	r0, r4
 80079e8:	f002 fb28 	bl	800a03c <_Bfree>
 80079ec:	9909      	ldr	r1, [sp, #36]	; 0x24
 80079ee:	4620      	mov	r0, r4
 80079f0:	f002 fb24 	bl	800a03c <_Bfree>
 80079f4:	4629      	mov	r1, r5
 80079f6:	4620      	mov	r0, r4
 80079f8:	f002 fb20 	bl	800a03c <_Bfree>
 80079fc:	e5d7      	b.n	80075ae <_strtod_l+0x76>
 80079fe:	4b32      	ldr	r3, [pc, #200]	; (8007ac8 <_strtod_l+0x590>)
 8007a00:	9304      	str	r3, [sp, #16]
 8007a02:	2300      	movs	r3, #0
 8007a04:	112d      	asrs	r5, r5, #4
 8007a06:	4640      	mov	r0, r8
 8007a08:	4649      	mov	r1, r9
 8007a0a:	469a      	mov	sl, r3
 8007a0c:	2d01      	cmp	r5, #1
 8007a0e:	dc21      	bgt.n	8007a54 <_strtod_l+0x51c>
 8007a10:	b10b      	cbz	r3, 8007a16 <_strtod_l+0x4de>
 8007a12:	4680      	mov	r8, r0
 8007a14:	4689      	mov	r9, r1
 8007a16:	492c      	ldr	r1, [pc, #176]	; (8007ac8 <_strtod_l+0x590>)
 8007a18:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 8007a1c:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 8007a20:	4642      	mov	r2, r8
 8007a22:	464b      	mov	r3, r9
 8007a24:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007a28:	f7f8 fdf0 	bl	800060c <__aeabi_dmul>
 8007a2c:	4b27      	ldr	r3, [pc, #156]	; (8007acc <_strtod_l+0x594>)
 8007a2e:	460a      	mov	r2, r1
 8007a30:	400b      	ands	r3, r1
 8007a32:	4927      	ldr	r1, [pc, #156]	; (8007ad0 <_strtod_l+0x598>)
 8007a34:	428b      	cmp	r3, r1
 8007a36:	4680      	mov	r8, r0
 8007a38:	d8be      	bhi.n	80079b8 <_strtod_l+0x480>
 8007a3a:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8007a3e:	428b      	cmp	r3, r1
 8007a40:	bf86      	itte	hi
 8007a42:	f8df 9090 	ldrhi.w	r9, [pc, #144]	; 8007ad4 <_strtod_l+0x59c>
 8007a46:	f04f 38ff 	movhi.w	r8, #4294967295	; 0xffffffff
 8007a4a:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 8007a4e:	2300      	movs	r3, #0
 8007a50:	9304      	str	r3, [sp, #16]
 8007a52:	e07b      	b.n	8007b4c <_strtod_l+0x614>
 8007a54:	07ea      	lsls	r2, r5, #31
 8007a56:	d505      	bpl.n	8007a64 <_strtod_l+0x52c>
 8007a58:	9b04      	ldr	r3, [sp, #16]
 8007a5a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a5e:	f7f8 fdd5 	bl	800060c <__aeabi_dmul>
 8007a62:	2301      	movs	r3, #1
 8007a64:	9a04      	ldr	r2, [sp, #16]
 8007a66:	3208      	adds	r2, #8
 8007a68:	f10a 0a01 	add.w	sl, sl, #1
 8007a6c:	106d      	asrs	r5, r5, #1
 8007a6e:	9204      	str	r2, [sp, #16]
 8007a70:	e7cc      	b.n	8007a0c <_strtod_l+0x4d4>
 8007a72:	d0ec      	beq.n	8007a4e <_strtod_l+0x516>
 8007a74:	426d      	negs	r5, r5
 8007a76:	f015 020f 	ands.w	r2, r5, #15
 8007a7a:	d00a      	beq.n	8007a92 <_strtod_l+0x55a>
 8007a7c:	4b11      	ldr	r3, [pc, #68]	; (8007ac4 <_strtod_l+0x58c>)
 8007a7e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8007a82:	4640      	mov	r0, r8
 8007a84:	4649      	mov	r1, r9
 8007a86:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a8a:	f7f8 fee9 	bl	8000860 <__aeabi_ddiv>
 8007a8e:	4680      	mov	r8, r0
 8007a90:	4689      	mov	r9, r1
 8007a92:	112d      	asrs	r5, r5, #4
 8007a94:	d0db      	beq.n	8007a4e <_strtod_l+0x516>
 8007a96:	2d1f      	cmp	r5, #31
 8007a98:	dd1e      	ble.n	8007ad8 <_strtod_l+0x5a0>
 8007a9a:	2500      	movs	r5, #0
 8007a9c:	46ab      	mov	fp, r5
 8007a9e:	9509      	str	r5, [sp, #36]	; 0x24
 8007aa0:	9505      	str	r5, [sp, #20]
 8007aa2:	2322      	movs	r3, #34	; 0x22
 8007aa4:	f04f 0800 	mov.w	r8, #0
 8007aa8:	f04f 0900 	mov.w	r9, #0
 8007aac:	6023      	str	r3, [r4, #0]
 8007aae:	e78d      	b.n	80079cc <_strtod_l+0x494>
 8007ab0:	0800bd1d 	.word	0x0800bd1d
 8007ab4:	0800bd5c 	.word	0x0800bd5c
 8007ab8:	0800bd15 	.word	0x0800bd15
 8007abc:	0800bf76 	.word	0x0800bf76
 8007ac0:	0800bf72 	.word	0x0800bf72
 8007ac4:	0800c0e0 	.word	0x0800c0e0
 8007ac8:	0800c0b8 	.word	0x0800c0b8
 8007acc:	7ff00000 	.word	0x7ff00000
 8007ad0:	7ca00000 	.word	0x7ca00000
 8007ad4:	7fefffff 	.word	0x7fefffff
 8007ad8:	f015 0310 	ands.w	r3, r5, #16
 8007adc:	bf18      	it	ne
 8007ade:	236a      	movne	r3, #106	; 0x6a
 8007ae0:	f8df a3a0 	ldr.w	sl, [pc, #928]	; 8007e84 <_strtod_l+0x94c>
 8007ae4:	9304      	str	r3, [sp, #16]
 8007ae6:	4640      	mov	r0, r8
 8007ae8:	4649      	mov	r1, r9
 8007aea:	2300      	movs	r3, #0
 8007aec:	07ea      	lsls	r2, r5, #31
 8007aee:	d504      	bpl.n	8007afa <_strtod_l+0x5c2>
 8007af0:	e9da 2300 	ldrd	r2, r3, [sl]
 8007af4:	f7f8 fd8a 	bl	800060c <__aeabi_dmul>
 8007af8:	2301      	movs	r3, #1
 8007afa:	106d      	asrs	r5, r5, #1
 8007afc:	f10a 0a08 	add.w	sl, sl, #8
 8007b00:	d1f4      	bne.n	8007aec <_strtod_l+0x5b4>
 8007b02:	b10b      	cbz	r3, 8007b08 <_strtod_l+0x5d0>
 8007b04:	4680      	mov	r8, r0
 8007b06:	4689      	mov	r9, r1
 8007b08:	9b04      	ldr	r3, [sp, #16]
 8007b0a:	b1bb      	cbz	r3, 8007b3c <_strtod_l+0x604>
 8007b0c:	f3c9 520a 	ubfx	r2, r9, #20, #11
 8007b10:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8007b14:	2b00      	cmp	r3, #0
 8007b16:	4649      	mov	r1, r9
 8007b18:	dd10      	ble.n	8007b3c <_strtod_l+0x604>
 8007b1a:	2b1f      	cmp	r3, #31
 8007b1c:	f340 811e 	ble.w	8007d5c <_strtod_l+0x824>
 8007b20:	2b34      	cmp	r3, #52	; 0x34
 8007b22:	bfde      	ittt	le
 8007b24:	f04f 33ff 	movle.w	r3, #4294967295	; 0xffffffff
 8007b28:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 8007b2c:	4093      	lslle	r3, r2
 8007b2e:	f04f 0800 	mov.w	r8, #0
 8007b32:	bfcc      	ite	gt
 8007b34:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8007b38:	ea03 0901 	andle.w	r9, r3, r1
 8007b3c:	2200      	movs	r2, #0
 8007b3e:	2300      	movs	r3, #0
 8007b40:	4640      	mov	r0, r8
 8007b42:	4649      	mov	r1, r9
 8007b44:	f7f8 ffca 	bl	8000adc <__aeabi_dcmpeq>
 8007b48:	2800      	cmp	r0, #0
 8007b4a:	d1a6      	bne.n	8007a9a <_strtod_l+0x562>
 8007b4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007b4e:	9300      	str	r3, [sp, #0]
 8007b50:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8007b52:	4633      	mov	r3, r6
 8007b54:	465a      	mov	r2, fp
 8007b56:	4620      	mov	r0, r4
 8007b58:	f002 fad8 	bl	800a10c <__s2b>
 8007b5c:	9009      	str	r0, [sp, #36]	; 0x24
 8007b5e:	2800      	cmp	r0, #0
 8007b60:	f43f af2a 	beq.w	80079b8 <_strtod_l+0x480>
 8007b64:	9a08      	ldr	r2, [sp, #32]
 8007b66:	9b05      	ldr	r3, [sp, #20]
 8007b68:	2a00      	cmp	r2, #0
 8007b6a:	eba3 0307 	sub.w	r3, r3, r7
 8007b6e:	bfa8      	it	ge
 8007b70:	2300      	movge	r3, #0
 8007b72:	930c      	str	r3, [sp, #48]	; 0x30
 8007b74:	2500      	movs	r5, #0
 8007b76:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8007b7a:	9312      	str	r3, [sp, #72]	; 0x48
 8007b7c:	46ab      	mov	fp, r5
 8007b7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007b80:	4620      	mov	r0, r4
 8007b82:	6859      	ldr	r1, [r3, #4]
 8007b84:	f002 fa1a 	bl	8009fbc <_Balloc>
 8007b88:	9005      	str	r0, [sp, #20]
 8007b8a:	2800      	cmp	r0, #0
 8007b8c:	f43f af18 	beq.w	80079c0 <_strtod_l+0x488>
 8007b90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007b92:	691a      	ldr	r2, [r3, #16]
 8007b94:	3202      	adds	r2, #2
 8007b96:	f103 010c 	add.w	r1, r3, #12
 8007b9a:	0092      	lsls	r2, r2, #2
 8007b9c:	300c      	adds	r0, #12
 8007b9e:	f000 fbf3 	bl	8008388 <memcpy>
 8007ba2:	ec49 8b10 	vmov	d0, r8, r9
 8007ba6:	aa18      	add	r2, sp, #96	; 0x60
 8007ba8:	a917      	add	r1, sp, #92	; 0x5c
 8007baa:	4620      	mov	r0, r4
 8007bac:	f002 fde2 	bl	800a774 <__d2b>
 8007bb0:	ec49 8b18 	vmov	d8, r8, r9
 8007bb4:	9016      	str	r0, [sp, #88]	; 0x58
 8007bb6:	2800      	cmp	r0, #0
 8007bb8:	f43f af02 	beq.w	80079c0 <_strtod_l+0x488>
 8007bbc:	2101      	movs	r1, #1
 8007bbe:	4620      	mov	r0, r4
 8007bc0:	f002 fb3c 	bl	800a23c <__i2b>
 8007bc4:	4683      	mov	fp, r0
 8007bc6:	2800      	cmp	r0, #0
 8007bc8:	f43f aefa 	beq.w	80079c0 <_strtod_l+0x488>
 8007bcc:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8007bce:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8007bd0:	2e00      	cmp	r6, #0
 8007bd2:	bfab      	itete	ge
 8007bd4:	9b0c      	ldrge	r3, [sp, #48]	; 0x30
 8007bd6:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
 8007bd8:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 8007bda:	f8dd a030 	ldrlt.w	sl, [sp, #48]	; 0x30
 8007bde:	bfac      	ite	ge
 8007be0:	eb06 0a03 	addge.w	sl, r6, r3
 8007be4:	1b9f      	sublt	r7, r3, r6
 8007be6:	9b04      	ldr	r3, [sp, #16]
 8007be8:	1af6      	subs	r6, r6, r3
 8007bea:	4416      	add	r6, r2
 8007bec:	4ba0      	ldr	r3, [pc, #640]	; (8007e70 <_strtod_l+0x938>)
 8007bee:	3e01      	subs	r6, #1
 8007bf0:	429e      	cmp	r6, r3
 8007bf2:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8007bf6:	f280 80c4 	bge.w	8007d82 <_strtod_l+0x84a>
 8007bfa:	1b9b      	subs	r3, r3, r6
 8007bfc:	2b1f      	cmp	r3, #31
 8007bfe:	eba2 0203 	sub.w	r2, r2, r3
 8007c02:	f04f 0101 	mov.w	r1, #1
 8007c06:	f300 80b0 	bgt.w	8007d6a <_strtod_l+0x832>
 8007c0a:	fa01 f303 	lsl.w	r3, r1, r3
 8007c0e:	930e      	str	r3, [sp, #56]	; 0x38
 8007c10:	2300      	movs	r3, #0
 8007c12:	930d      	str	r3, [sp, #52]	; 0x34
 8007c14:	eb0a 0602 	add.w	r6, sl, r2
 8007c18:	9b04      	ldr	r3, [sp, #16]
 8007c1a:	45b2      	cmp	sl, r6
 8007c1c:	4417      	add	r7, r2
 8007c1e:	441f      	add	r7, r3
 8007c20:	4653      	mov	r3, sl
 8007c22:	bfa8      	it	ge
 8007c24:	4633      	movge	r3, r6
 8007c26:	42bb      	cmp	r3, r7
 8007c28:	bfa8      	it	ge
 8007c2a:	463b      	movge	r3, r7
 8007c2c:	2b00      	cmp	r3, #0
 8007c2e:	bfc2      	ittt	gt
 8007c30:	1af6      	subgt	r6, r6, r3
 8007c32:	1aff      	subgt	r7, r7, r3
 8007c34:	ebaa 0a03 	subgt.w	sl, sl, r3
 8007c38:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007c3a:	2b00      	cmp	r3, #0
 8007c3c:	dd17      	ble.n	8007c6e <_strtod_l+0x736>
 8007c3e:	4659      	mov	r1, fp
 8007c40:	461a      	mov	r2, r3
 8007c42:	4620      	mov	r0, r4
 8007c44:	f002 fbba 	bl	800a3bc <__pow5mult>
 8007c48:	4683      	mov	fp, r0
 8007c4a:	2800      	cmp	r0, #0
 8007c4c:	f43f aeb8 	beq.w	80079c0 <_strtod_l+0x488>
 8007c50:	4601      	mov	r1, r0
 8007c52:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8007c54:	4620      	mov	r0, r4
 8007c56:	f002 fb07 	bl	800a268 <__multiply>
 8007c5a:	900b      	str	r0, [sp, #44]	; 0x2c
 8007c5c:	2800      	cmp	r0, #0
 8007c5e:	f43f aeaf 	beq.w	80079c0 <_strtod_l+0x488>
 8007c62:	9916      	ldr	r1, [sp, #88]	; 0x58
 8007c64:	4620      	mov	r0, r4
 8007c66:	f002 f9e9 	bl	800a03c <_Bfree>
 8007c6a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007c6c:	9316      	str	r3, [sp, #88]	; 0x58
 8007c6e:	2e00      	cmp	r6, #0
 8007c70:	f300 808c 	bgt.w	8007d8c <_strtod_l+0x854>
 8007c74:	9b08      	ldr	r3, [sp, #32]
 8007c76:	2b00      	cmp	r3, #0
 8007c78:	dd08      	ble.n	8007c8c <_strtod_l+0x754>
 8007c7a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8007c7c:	9905      	ldr	r1, [sp, #20]
 8007c7e:	4620      	mov	r0, r4
 8007c80:	f002 fb9c 	bl	800a3bc <__pow5mult>
 8007c84:	9005      	str	r0, [sp, #20]
 8007c86:	2800      	cmp	r0, #0
 8007c88:	f43f ae9a 	beq.w	80079c0 <_strtod_l+0x488>
 8007c8c:	2f00      	cmp	r7, #0
 8007c8e:	dd08      	ble.n	8007ca2 <_strtod_l+0x76a>
 8007c90:	9905      	ldr	r1, [sp, #20]
 8007c92:	463a      	mov	r2, r7
 8007c94:	4620      	mov	r0, r4
 8007c96:	f002 fbeb 	bl	800a470 <__lshift>
 8007c9a:	9005      	str	r0, [sp, #20]
 8007c9c:	2800      	cmp	r0, #0
 8007c9e:	f43f ae8f 	beq.w	80079c0 <_strtod_l+0x488>
 8007ca2:	f1ba 0f00 	cmp.w	sl, #0
 8007ca6:	dd08      	ble.n	8007cba <_strtod_l+0x782>
 8007ca8:	4659      	mov	r1, fp
 8007caa:	4652      	mov	r2, sl
 8007cac:	4620      	mov	r0, r4
 8007cae:	f002 fbdf 	bl	800a470 <__lshift>
 8007cb2:	4683      	mov	fp, r0
 8007cb4:	2800      	cmp	r0, #0
 8007cb6:	f43f ae83 	beq.w	80079c0 <_strtod_l+0x488>
 8007cba:	9a05      	ldr	r2, [sp, #20]
 8007cbc:	9916      	ldr	r1, [sp, #88]	; 0x58
 8007cbe:	4620      	mov	r0, r4
 8007cc0:	f002 fc5e 	bl	800a580 <__mdiff>
 8007cc4:	4605      	mov	r5, r0
 8007cc6:	2800      	cmp	r0, #0
 8007cc8:	f43f ae7a 	beq.w	80079c0 <_strtod_l+0x488>
 8007ccc:	68c3      	ldr	r3, [r0, #12]
 8007cce:	930b      	str	r3, [sp, #44]	; 0x2c
 8007cd0:	2300      	movs	r3, #0
 8007cd2:	60c3      	str	r3, [r0, #12]
 8007cd4:	4659      	mov	r1, fp
 8007cd6:	f002 fc37 	bl	800a548 <__mcmp>
 8007cda:	2800      	cmp	r0, #0
 8007cdc:	da60      	bge.n	8007da0 <_strtod_l+0x868>
 8007cde:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007ce0:	ea53 0308 	orrs.w	r3, r3, r8
 8007ce4:	f040 8084 	bne.w	8007df0 <_strtod_l+0x8b8>
 8007ce8:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8007cec:	2b00      	cmp	r3, #0
 8007cee:	d17f      	bne.n	8007df0 <_strtod_l+0x8b8>
 8007cf0:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8007cf4:	0d1b      	lsrs	r3, r3, #20
 8007cf6:	051b      	lsls	r3, r3, #20
 8007cf8:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8007cfc:	d978      	bls.n	8007df0 <_strtod_l+0x8b8>
 8007cfe:	696b      	ldr	r3, [r5, #20]
 8007d00:	b913      	cbnz	r3, 8007d08 <_strtod_l+0x7d0>
 8007d02:	692b      	ldr	r3, [r5, #16]
 8007d04:	2b01      	cmp	r3, #1
 8007d06:	dd73      	ble.n	8007df0 <_strtod_l+0x8b8>
 8007d08:	4629      	mov	r1, r5
 8007d0a:	2201      	movs	r2, #1
 8007d0c:	4620      	mov	r0, r4
 8007d0e:	f002 fbaf 	bl	800a470 <__lshift>
 8007d12:	4659      	mov	r1, fp
 8007d14:	4605      	mov	r5, r0
 8007d16:	f002 fc17 	bl	800a548 <__mcmp>
 8007d1a:	2800      	cmp	r0, #0
 8007d1c:	dd68      	ble.n	8007df0 <_strtod_l+0x8b8>
 8007d1e:	9904      	ldr	r1, [sp, #16]
 8007d20:	4a54      	ldr	r2, [pc, #336]	; (8007e74 <_strtod_l+0x93c>)
 8007d22:	464b      	mov	r3, r9
 8007d24:	2900      	cmp	r1, #0
 8007d26:	f000 8084 	beq.w	8007e32 <_strtod_l+0x8fa>
 8007d2a:	ea02 0109 	and.w	r1, r2, r9
 8007d2e:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8007d32:	dc7e      	bgt.n	8007e32 <_strtod_l+0x8fa>
 8007d34:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8007d38:	f77f aeb3 	ble.w	8007aa2 <_strtod_l+0x56a>
 8007d3c:	4b4e      	ldr	r3, [pc, #312]	; (8007e78 <_strtod_l+0x940>)
 8007d3e:	4640      	mov	r0, r8
 8007d40:	4649      	mov	r1, r9
 8007d42:	2200      	movs	r2, #0
 8007d44:	f7f8 fc62 	bl	800060c <__aeabi_dmul>
 8007d48:	4b4a      	ldr	r3, [pc, #296]	; (8007e74 <_strtod_l+0x93c>)
 8007d4a:	400b      	ands	r3, r1
 8007d4c:	4680      	mov	r8, r0
 8007d4e:	4689      	mov	r9, r1
 8007d50:	2b00      	cmp	r3, #0
 8007d52:	f47f ae3f 	bne.w	80079d4 <_strtod_l+0x49c>
 8007d56:	2322      	movs	r3, #34	; 0x22
 8007d58:	6023      	str	r3, [r4, #0]
 8007d5a:	e63b      	b.n	80079d4 <_strtod_l+0x49c>
 8007d5c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8007d60:	fa02 f303 	lsl.w	r3, r2, r3
 8007d64:	ea03 0808 	and.w	r8, r3, r8
 8007d68:	e6e8      	b.n	8007b3c <_strtod_l+0x604>
 8007d6a:	f1c6 467f 	rsb	r6, r6, #4278190080	; 0xff000000
 8007d6e:	f506 067f 	add.w	r6, r6, #16711680	; 0xff0000
 8007d72:	f506 467b 	add.w	r6, r6, #64256	; 0xfb00
 8007d76:	36e2      	adds	r6, #226	; 0xe2
 8007d78:	fa01 f306 	lsl.w	r3, r1, r6
 8007d7c:	e9cd 310d 	strd	r3, r1, [sp, #52]	; 0x34
 8007d80:	e748      	b.n	8007c14 <_strtod_l+0x6dc>
 8007d82:	2100      	movs	r1, #0
 8007d84:	2301      	movs	r3, #1
 8007d86:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
 8007d8a:	e743      	b.n	8007c14 <_strtod_l+0x6dc>
 8007d8c:	9916      	ldr	r1, [sp, #88]	; 0x58
 8007d8e:	4632      	mov	r2, r6
 8007d90:	4620      	mov	r0, r4
 8007d92:	f002 fb6d 	bl	800a470 <__lshift>
 8007d96:	9016      	str	r0, [sp, #88]	; 0x58
 8007d98:	2800      	cmp	r0, #0
 8007d9a:	f47f af6b 	bne.w	8007c74 <_strtod_l+0x73c>
 8007d9e:	e60f      	b.n	80079c0 <_strtod_l+0x488>
 8007da0:	46ca      	mov	sl, r9
 8007da2:	d171      	bne.n	8007e88 <_strtod_l+0x950>
 8007da4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8007da6:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8007daa:	b352      	cbz	r2, 8007e02 <_strtod_l+0x8ca>
 8007dac:	4a33      	ldr	r2, [pc, #204]	; (8007e7c <_strtod_l+0x944>)
 8007dae:	4293      	cmp	r3, r2
 8007db0:	d12a      	bne.n	8007e08 <_strtod_l+0x8d0>
 8007db2:	9b04      	ldr	r3, [sp, #16]
 8007db4:	4641      	mov	r1, r8
 8007db6:	b1fb      	cbz	r3, 8007df8 <_strtod_l+0x8c0>
 8007db8:	4b2e      	ldr	r3, [pc, #184]	; (8007e74 <_strtod_l+0x93c>)
 8007dba:	ea09 0303 	and.w	r3, r9, r3
 8007dbe:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8007dc2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8007dc6:	d81a      	bhi.n	8007dfe <_strtod_l+0x8c6>
 8007dc8:	0d1b      	lsrs	r3, r3, #20
 8007dca:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8007dce:	fa02 f303 	lsl.w	r3, r2, r3
 8007dd2:	4299      	cmp	r1, r3
 8007dd4:	d118      	bne.n	8007e08 <_strtod_l+0x8d0>
 8007dd6:	4b2a      	ldr	r3, [pc, #168]	; (8007e80 <_strtod_l+0x948>)
 8007dd8:	459a      	cmp	sl, r3
 8007dda:	d102      	bne.n	8007de2 <_strtod_l+0x8aa>
 8007ddc:	3101      	adds	r1, #1
 8007dde:	f43f adef 	beq.w	80079c0 <_strtod_l+0x488>
 8007de2:	4b24      	ldr	r3, [pc, #144]	; (8007e74 <_strtod_l+0x93c>)
 8007de4:	ea0a 0303 	and.w	r3, sl, r3
 8007de8:	f503 1980 	add.w	r9, r3, #1048576	; 0x100000
 8007dec:	f04f 0800 	mov.w	r8, #0
 8007df0:	9b04      	ldr	r3, [sp, #16]
 8007df2:	2b00      	cmp	r3, #0
 8007df4:	d1a2      	bne.n	8007d3c <_strtod_l+0x804>
 8007df6:	e5ed      	b.n	80079d4 <_strtod_l+0x49c>
 8007df8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8007dfc:	e7e9      	b.n	8007dd2 <_strtod_l+0x89a>
 8007dfe:	4613      	mov	r3, r2
 8007e00:	e7e7      	b.n	8007dd2 <_strtod_l+0x89a>
 8007e02:	ea53 0308 	orrs.w	r3, r3, r8
 8007e06:	d08a      	beq.n	8007d1e <_strtod_l+0x7e6>
 8007e08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007e0a:	b1e3      	cbz	r3, 8007e46 <_strtod_l+0x90e>
 8007e0c:	ea13 0f0a 	tst.w	r3, sl
 8007e10:	d0ee      	beq.n	8007df0 <_strtod_l+0x8b8>
 8007e12:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007e14:	9a04      	ldr	r2, [sp, #16]
 8007e16:	4640      	mov	r0, r8
 8007e18:	4649      	mov	r1, r9
 8007e1a:	b1c3      	cbz	r3, 8007e4e <_strtod_l+0x916>
 8007e1c:	f7ff fb6e 	bl	80074fc <sulp>
 8007e20:	4602      	mov	r2, r0
 8007e22:	460b      	mov	r3, r1
 8007e24:	ec51 0b18 	vmov	r0, r1, d8
 8007e28:	f7f8 fa3a 	bl	80002a0 <__adddf3>
 8007e2c:	4680      	mov	r8, r0
 8007e2e:	4689      	mov	r9, r1
 8007e30:	e7de      	b.n	8007df0 <_strtod_l+0x8b8>
 8007e32:	4013      	ands	r3, r2
 8007e34:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8007e38:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 8007e3c:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 8007e40:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 8007e44:	e7d4      	b.n	8007df0 <_strtod_l+0x8b8>
 8007e46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007e48:	ea13 0f08 	tst.w	r3, r8
 8007e4c:	e7e0      	b.n	8007e10 <_strtod_l+0x8d8>
 8007e4e:	f7ff fb55 	bl	80074fc <sulp>
 8007e52:	4602      	mov	r2, r0
 8007e54:	460b      	mov	r3, r1
 8007e56:	ec51 0b18 	vmov	r0, r1, d8
 8007e5a:	f7f8 fa1f 	bl	800029c <__aeabi_dsub>
 8007e5e:	2200      	movs	r2, #0
 8007e60:	2300      	movs	r3, #0
 8007e62:	4680      	mov	r8, r0
 8007e64:	4689      	mov	r9, r1
 8007e66:	f7f8 fe39 	bl	8000adc <__aeabi_dcmpeq>
 8007e6a:	2800      	cmp	r0, #0
 8007e6c:	d0c0      	beq.n	8007df0 <_strtod_l+0x8b8>
 8007e6e:	e618      	b.n	8007aa2 <_strtod_l+0x56a>
 8007e70:	fffffc02 	.word	0xfffffc02
 8007e74:	7ff00000 	.word	0x7ff00000
 8007e78:	39500000 	.word	0x39500000
 8007e7c:	000fffff 	.word	0x000fffff
 8007e80:	7fefffff 	.word	0x7fefffff
 8007e84:	0800bd70 	.word	0x0800bd70
 8007e88:	4659      	mov	r1, fp
 8007e8a:	4628      	mov	r0, r5
 8007e8c:	f002 fccc 	bl	800a828 <__ratio>
 8007e90:	ec57 6b10 	vmov	r6, r7, d0
 8007e94:	ee10 0a10 	vmov	r0, s0
 8007e98:	2200      	movs	r2, #0
 8007e9a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8007e9e:	4639      	mov	r1, r7
 8007ea0:	f7f8 fe30 	bl	8000b04 <__aeabi_dcmple>
 8007ea4:	2800      	cmp	r0, #0
 8007ea6:	d071      	beq.n	8007f8c <_strtod_l+0xa54>
 8007ea8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007eaa:	2b00      	cmp	r3, #0
 8007eac:	d17c      	bne.n	8007fa8 <_strtod_l+0xa70>
 8007eae:	f1b8 0f00 	cmp.w	r8, #0
 8007eb2:	d15a      	bne.n	8007f6a <_strtod_l+0xa32>
 8007eb4:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8007eb8:	2b00      	cmp	r3, #0
 8007eba:	d15d      	bne.n	8007f78 <_strtod_l+0xa40>
 8007ebc:	4b90      	ldr	r3, [pc, #576]	; (8008100 <_strtod_l+0xbc8>)
 8007ebe:	2200      	movs	r2, #0
 8007ec0:	4630      	mov	r0, r6
 8007ec2:	4639      	mov	r1, r7
 8007ec4:	f7f8 fe14 	bl	8000af0 <__aeabi_dcmplt>
 8007ec8:	2800      	cmp	r0, #0
 8007eca:	d15c      	bne.n	8007f86 <_strtod_l+0xa4e>
 8007ecc:	4630      	mov	r0, r6
 8007ece:	4639      	mov	r1, r7
 8007ed0:	4b8c      	ldr	r3, [pc, #560]	; (8008104 <_strtod_l+0xbcc>)
 8007ed2:	2200      	movs	r2, #0
 8007ed4:	f7f8 fb9a 	bl	800060c <__aeabi_dmul>
 8007ed8:	4606      	mov	r6, r0
 8007eda:	460f      	mov	r7, r1
 8007edc:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
 8007ee0:	9606      	str	r6, [sp, #24]
 8007ee2:	9307      	str	r3, [sp, #28]
 8007ee4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8007ee8:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8007eec:	4b86      	ldr	r3, [pc, #536]	; (8008108 <_strtod_l+0xbd0>)
 8007eee:	ea0a 0303 	and.w	r3, sl, r3
 8007ef2:	930d      	str	r3, [sp, #52]	; 0x34
 8007ef4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8007ef6:	4b85      	ldr	r3, [pc, #532]	; (800810c <_strtod_l+0xbd4>)
 8007ef8:	429a      	cmp	r2, r3
 8007efa:	f040 8090 	bne.w	800801e <_strtod_l+0xae6>
 8007efe:	f1aa 7954 	sub.w	r9, sl, #55574528	; 0x3500000
 8007f02:	ec49 8b10 	vmov	d0, r8, r9
 8007f06:	f002 fbc5 	bl	800a694 <__ulp>
 8007f0a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8007f0e:	ec51 0b10 	vmov	r0, r1, d0
 8007f12:	f7f8 fb7b 	bl	800060c <__aeabi_dmul>
 8007f16:	4642      	mov	r2, r8
 8007f18:	464b      	mov	r3, r9
 8007f1a:	f7f8 f9c1 	bl	80002a0 <__adddf3>
 8007f1e:	460b      	mov	r3, r1
 8007f20:	4979      	ldr	r1, [pc, #484]	; (8008108 <_strtod_l+0xbd0>)
 8007f22:	4a7b      	ldr	r2, [pc, #492]	; (8008110 <_strtod_l+0xbd8>)
 8007f24:	4019      	ands	r1, r3
 8007f26:	4291      	cmp	r1, r2
 8007f28:	4680      	mov	r8, r0
 8007f2a:	d944      	bls.n	8007fb6 <_strtod_l+0xa7e>
 8007f2c:	ee18 2a90 	vmov	r2, s17
 8007f30:	4b78      	ldr	r3, [pc, #480]	; (8008114 <_strtod_l+0xbdc>)
 8007f32:	429a      	cmp	r2, r3
 8007f34:	d104      	bne.n	8007f40 <_strtod_l+0xa08>
 8007f36:	ee18 3a10 	vmov	r3, s16
 8007f3a:	3301      	adds	r3, #1
 8007f3c:	f43f ad40 	beq.w	80079c0 <_strtod_l+0x488>
 8007f40:	f8df 91d0 	ldr.w	r9, [pc, #464]	; 8008114 <_strtod_l+0xbdc>
 8007f44:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 8007f48:	9916      	ldr	r1, [sp, #88]	; 0x58
 8007f4a:	4620      	mov	r0, r4
 8007f4c:	f002 f876 	bl	800a03c <_Bfree>
 8007f50:	9905      	ldr	r1, [sp, #20]
 8007f52:	4620      	mov	r0, r4
 8007f54:	f002 f872 	bl	800a03c <_Bfree>
 8007f58:	4659      	mov	r1, fp
 8007f5a:	4620      	mov	r0, r4
 8007f5c:	f002 f86e 	bl	800a03c <_Bfree>
 8007f60:	4629      	mov	r1, r5
 8007f62:	4620      	mov	r0, r4
 8007f64:	f002 f86a 	bl	800a03c <_Bfree>
 8007f68:	e609      	b.n	8007b7e <_strtod_l+0x646>
 8007f6a:	f1b8 0f01 	cmp.w	r8, #1
 8007f6e:	d103      	bne.n	8007f78 <_strtod_l+0xa40>
 8007f70:	f1b9 0f00 	cmp.w	r9, #0
 8007f74:	f43f ad95 	beq.w	8007aa2 <_strtod_l+0x56a>
 8007f78:	ed9f 7b55 	vldr	d7, [pc, #340]	; 80080d0 <_strtod_l+0xb98>
 8007f7c:	4f60      	ldr	r7, [pc, #384]	; (8008100 <_strtod_l+0xbc8>)
 8007f7e:	ed8d 7b06 	vstr	d7, [sp, #24]
 8007f82:	2600      	movs	r6, #0
 8007f84:	e7ae      	b.n	8007ee4 <_strtod_l+0x9ac>
 8007f86:	4f5f      	ldr	r7, [pc, #380]	; (8008104 <_strtod_l+0xbcc>)
 8007f88:	2600      	movs	r6, #0
 8007f8a:	e7a7      	b.n	8007edc <_strtod_l+0x9a4>
 8007f8c:	4b5d      	ldr	r3, [pc, #372]	; (8008104 <_strtod_l+0xbcc>)
 8007f8e:	4630      	mov	r0, r6
 8007f90:	4639      	mov	r1, r7
 8007f92:	2200      	movs	r2, #0
 8007f94:	f7f8 fb3a 	bl	800060c <__aeabi_dmul>
 8007f98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007f9a:	4606      	mov	r6, r0
 8007f9c:	460f      	mov	r7, r1
 8007f9e:	2b00      	cmp	r3, #0
 8007fa0:	d09c      	beq.n	8007edc <_strtod_l+0x9a4>
 8007fa2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8007fa6:	e79d      	b.n	8007ee4 <_strtod_l+0x9ac>
 8007fa8:	ed9f 7b4b 	vldr	d7, [pc, #300]	; 80080d8 <_strtod_l+0xba0>
 8007fac:	ed8d 7b06 	vstr	d7, [sp, #24]
 8007fb0:	ec57 6b17 	vmov	r6, r7, d7
 8007fb4:	e796      	b.n	8007ee4 <_strtod_l+0x9ac>
 8007fb6:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 8007fba:	9b04      	ldr	r3, [sp, #16]
 8007fbc:	46ca      	mov	sl, r9
 8007fbe:	2b00      	cmp	r3, #0
 8007fc0:	d1c2      	bne.n	8007f48 <_strtod_l+0xa10>
 8007fc2:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8007fc6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8007fc8:	0d1b      	lsrs	r3, r3, #20
 8007fca:	051b      	lsls	r3, r3, #20
 8007fcc:	429a      	cmp	r2, r3
 8007fce:	d1bb      	bne.n	8007f48 <_strtod_l+0xa10>
 8007fd0:	4630      	mov	r0, r6
 8007fd2:	4639      	mov	r1, r7
 8007fd4:	f7f8 fe2a 	bl	8000c2c <__aeabi_d2lz>
 8007fd8:	f7f8 faea 	bl	80005b0 <__aeabi_l2d>
 8007fdc:	4602      	mov	r2, r0
 8007fde:	460b      	mov	r3, r1
 8007fe0:	4630      	mov	r0, r6
 8007fe2:	4639      	mov	r1, r7
 8007fe4:	f7f8 f95a 	bl	800029c <__aeabi_dsub>
 8007fe8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8007fea:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8007fee:	ea43 0308 	orr.w	r3, r3, r8
 8007ff2:	4313      	orrs	r3, r2
 8007ff4:	4606      	mov	r6, r0
 8007ff6:	460f      	mov	r7, r1
 8007ff8:	d054      	beq.n	80080a4 <_strtod_l+0xb6c>
 8007ffa:	a339      	add	r3, pc, #228	; (adr r3, 80080e0 <_strtod_l+0xba8>)
 8007ffc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008000:	f7f8 fd76 	bl	8000af0 <__aeabi_dcmplt>
 8008004:	2800      	cmp	r0, #0
 8008006:	f47f ace5 	bne.w	80079d4 <_strtod_l+0x49c>
 800800a:	a337      	add	r3, pc, #220	; (adr r3, 80080e8 <_strtod_l+0xbb0>)
 800800c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008010:	4630      	mov	r0, r6
 8008012:	4639      	mov	r1, r7
 8008014:	f7f8 fd8a 	bl	8000b2c <__aeabi_dcmpgt>
 8008018:	2800      	cmp	r0, #0
 800801a:	d095      	beq.n	8007f48 <_strtod_l+0xa10>
 800801c:	e4da      	b.n	80079d4 <_strtod_l+0x49c>
 800801e:	9b04      	ldr	r3, [sp, #16]
 8008020:	b333      	cbz	r3, 8008070 <_strtod_l+0xb38>
 8008022:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008024:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8008028:	d822      	bhi.n	8008070 <_strtod_l+0xb38>
 800802a:	a331      	add	r3, pc, #196	; (adr r3, 80080f0 <_strtod_l+0xbb8>)
 800802c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008030:	4630      	mov	r0, r6
 8008032:	4639      	mov	r1, r7
 8008034:	f7f8 fd66 	bl	8000b04 <__aeabi_dcmple>
 8008038:	b1a0      	cbz	r0, 8008064 <_strtod_l+0xb2c>
 800803a:	4639      	mov	r1, r7
 800803c:	4630      	mov	r0, r6
 800803e:	f7f8 fdbd 	bl	8000bbc <__aeabi_d2uiz>
 8008042:	2801      	cmp	r0, #1
 8008044:	bf38      	it	cc
 8008046:	2001      	movcc	r0, #1
 8008048:	f7f8 fa66 	bl	8000518 <__aeabi_ui2d>
 800804c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800804e:	4606      	mov	r6, r0
 8008050:	460f      	mov	r7, r1
 8008052:	bb23      	cbnz	r3, 800809e <_strtod_l+0xb66>
 8008054:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8008058:	9010      	str	r0, [sp, #64]	; 0x40
 800805a:	9311      	str	r3, [sp, #68]	; 0x44
 800805c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8008060:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8008064:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8008066:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8008068:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 800806c:	1a9b      	subs	r3, r3, r2
 800806e:	930f      	str	r3, [sp, #60]	; 0x3c
 8008070:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8008074:	eeb0 0a48 	vmov.f32	s0, s16
 8008078:	eef0 0a68 	vmov.f32	s1, s17
 800807c:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
 8008080:	f002 fb08 	bl	800a694 <__ulp>
 8008084:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8008088:	ec53 2b10 	vmov	r2, r3, d0
 800808c:	f7f8 fabe 	bl	800060c <__aeabi_dmul>
 8008090:	ec53 2b18 	vmov	r2, r3, d8
 8008094:	f7f8 f904 	bl	80002a0 <__adddf3>
 8008098:	4680      	mov	r8, r0
 800809a:	4689      	mov	r9, r1
 800809c:	e78d      	b.n	8007fba <_strtod_l+0xa82>
 800809e:	e9cd 6710 	strd	r6, r7, [sp, #64]	; 0x40
 80080a2:	e7db      	b.n	800805c <_strtod_l+0xb24>
 80080a4:	a314      	add	r3, pc, #80	; (adr r3, 80080f8 <_strtod_l+0xbc0>)
 80080a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80080aa:	f7f8 fd21 	bl	8000af0 <__aeabi_dcmplt>
 80080ae:	e7b3      	b.n	8008018 <_strtod_l+0xae0>
 80080b0:	2300      	movs	r3, #0
 80080b2:	930a      	str	r3, [sp, #40]	; 0x28
 80080b4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80080b6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80080b8:	6013      	str	r3, [r2, #0]
 80080ba:	f7ff ba7c 	b.w	80075b6 <_strtod_l+0x7e>
 80080be:	2a65      	cmp	r2, #101	; 0x65
 80080c0:	f43f ab75 	beq.w	80077ae <_strtod_l+0x276>
 80080c4:	2a45      	cmp	r2, #69	; 0x45
 80080c6:	f43f ab72 	beq.w	80077ae <_strtod_l+0x276>
 80080ca:	2301      	movs	r3, #1
 80080cc:	f7ff bbaa 	b.w	8007824 <_strtod_l+0x2ec>
 80080d0:	00000000 	.word	0x00000000
 80080d4:	bff00000 	.word	0xbff00000
 80080d8:	00000000 	.word	0x00000000
 80080dc:	3ff00000 	.word	0x3ff00000
 80080e0:	94a03595 	.word	0x94a03595
 80080e4:	3fdfffff 	.word	0x3fdfffff
 80080e8:	35afe535 	.word	0x35afe535
 80080ec:	3fe00000 	.word	0x3fe00000
 80080f0:	ffc00000 	.word	0xffc00000
 80080f4:	41dfffff 	.word	0x41dfffff
 80080f8:	94a03595 	.word	0x94a03595
 80080fc:	3fcfffff 	.word	0x3fcfffff
 8008100:	3ff00000 	.word	0x3ff00000
 8008104:	3fe00000 	.word	0x3fe00000
 8008108:	7ff00000 	.word	0x7ff00000
 800810c:	7fe00000 	.word	0x7fe00000
 8008110:	7c9fffff 	.word	0x7c9fffff
 8008114:	7fefffff 	.word	0x7fefffff

08008118 <strtod>:
 8008118:	460a      	mov	r2, r1
 800811a:	4601      	mov	r1, r0
 800811c:	4802      	ldr	r0, [pc, #8]	; (8008128 <strtod+0x10>)
 800811e:	4b03      	ldr	r3, [pc, #12]	; (800812c <strtod+0x14>)
 8008120:	6800      	ldr	r0, [r0, #0]
 8008122:	f7ff ba09 	b.w	8007538 <_strtod_l>
 8008126:	bf00      	nop
 8008128:	200001ec 	.word	0x200001ec
 800812c:	20000034 	.word	0x20000034

08008130 <__utoa>:
 8008130:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008132:	4c1f      	ldr	r4, [pc, #124]	; (80081b0 <__utoa+0x80>)
 8008134:	b08b      	sub	sp, #44	; 0x2c
 8008136:	4605      	mov	r5, r0
 8008138:	460b      	mov	r3, r1
 800813a:	466e      	mov	r6, sp
 800813c:	f104 0c20 	add.w	ip, r4, #32
 8008140:	6820      	ldr	r0, [r4, #0]
 8008142:	6861      	ldr	r1, [r4, #4]
 8008144:	4637      	mov	r7, r6
 8008146:	c703      	stmia	r7!, {r0, r1}
 8008148:	3408      	adds	r4, #8
 800814a:	4564      	cmp	r4, ip
 800814c:	463e      	mov	r6, r7
 800814e:	d1f7      	bne.n	8008140 <__utoa+0x10>
 8008150:	7921      	ldrb	r1, [r4, #4]
 8008152:	7139      	strb	r1, [r7, #4]
 8008154:	1e91      	subs	r1, r2, #2
 8008156:	6820      	ldr	r0, [r4, #0]
 8008158:	6038      	str	r0, [r7, #0]
 800815a:	2922      	cmp	r1, #34	; 0x22
 800815c:	f04f 0100 	mov.w	r1, #0
 8008160:	d904      	bls.n	800816c <__utoa+0x3c>
 8008162:	7019      	strb	r1, [r3, #0]
 8008164:	460b      	mov	r3, r1
 8008166:	4618      	mov	r0, r3
 8008168:	b00b      	add	sp, #44	; 0x2c
 800816a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800816c:	1e58      	subs	r0, r3, #1
 800816e:	4684      	mov	ip, r0
 8008170:	fbb5 f7f2 	udiv	r7, r5, r2
 8008174:	fb02 5617 	mls	r6, r2, r7, r5
 8008178:	3628      	adds	r6, #40	; 0x28
 800817a:	446e      	add	r6, sp
 800817c:	460c      	mov	r4, r1
 800817e:	f816 6c28 	ldrb.w	r6, [r6, #-40]
 8008182:	f80c 6f01 	strb.w	r6, [ip, #1]!
 8008186:	462e      	mov	r6, r5
 8008188:	42b2      	cmp	r2, r6
 800818a:	f101 0101 	add.w	r1, r1, #1
 800818e:	463d      	mov	r5, r7
 8008190:	d9ee      	bls.n	8008170 <__utoa+0x40>
 8008192:	2200      	movs	r2, #0
 8008194:	545a      	strb	r2, [r3, r1]
 8008196:	1919      	adds	r1, r3, r4
 8008198:	1aa5      	subs	r5, r4, r2
 800819a:	42aa      	cmp	r2, r5
 800819c:	dae3      	bge.n	8008166 <__utoa+0x36>
 800819e:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 80081a2:	780e      	ldrb	r6, [r1, #0]
 80081a4:	7006      	strb	r6, [r0, #0]
 80081a6:	3201      	adds	r2, #1
 80081a8:	f801 5901 	strb.w	r5, [r1], #-1
 80081ac:	e7f4      	b.n	8008198 <__utoa+0x68>
 80081ae:	bf00      	nop
 80081b0:	0800bd98 	.word	0x0800bd98

080081b4 <_fwalk_sglue>:
 80081b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80081b8:	4607      	mov	r7, r0
 80081ba:	4688      	mov	r8, r1
 80081bc:	4614      	mov	r4, r2
 80081be:	2600      	movs	r6, #0
 80081c0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80081c4:	f1b9 0901 	subs.w	r9, r9, #1
 80081c8:	d505      	bpl.n	80081d6 <_fwalk_sglue+0x22>
 80081ca:	6824      	ldr	r4, [r4, #0]
 80081cc:	2c00      	cmp	r4, #0
 80081ce:	d1f7      	bne.n	80081c0 <_fwalk_sglue+0xc>
 80081d0:	4630      	mov	r0, r6
 80081d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80081d6:	89ab      	ldrh	r3, [r5, #12]
 80081d8:	2b01      	cmp	r3, #1
 80081da:	d907      	bls.n	80081ec <_fwalk_sglue+0x38>
 80081dc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80081e0:	3301      	adds	r3, #1
 80081e2:	d003      	beq.n	80081ec <_fwalk_sglue+0x38>
 80081e4:	4629      	mov	r1, r5
 80081e6:	4638      	mov	r0, r7
 80081e8:	47c0      	blx	r8
 80081ea:	4306      	orrs	r6, r0
 80081ec:	3568      	adds	r5, #104	; 0x68
 80081ee:	e7e9      	b.n	80081c4 <_fwalk_sglue+0x10>

080081f0 <iprintf>:
 80081f0:	b40f      	push	{r0, r1, r2, r3}
 80081f2:	b507      	push	{r0, r1, r2, lr}
 80081f4:	4906      	ldr	r1, [pc, #24]	; (8008210 <iprintf+0x20>)
 80081f6:	ab04      	add	r3, sp, #16
 80081f8:	6808      	ldr	r0, [r1, #0]
 80081fa:	f853 2b04 	ldr.w	r2, [r3], #4
 80081fe:	6881      	ldr	r1, [r0, #8]
 8008200:	9301      	str	r3, [sp, #4]
 8008202:	f001 fc4d 	bl	8009aa0 <_vfiprintf_r>
 8008206:	b003      	add	sp, #12
 8008208:	f85d eb04 	ldr.w	lr, [sp], #4
 800820c:	b004      	add	sp, #16
 800820e:	4770      	bx	lr
 8008210:	200001ec 	.word	0x200001ec

08008214 <strncmp>:
 8008214:	b510      	push	{r4, lr}
 8008216:	b16a      	cbz	r2, 8008234 <strncmp+0x20>
 8008218:	3901      	subs	r1, #1
 800821a:	1884      	adds	r4, r0, r2
 800821c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8008220:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8008224:	429a      	cmp	r2, r3
 8008226:	d103      	bne.n	8008230 <strncmp+0x1c>
 8008228:	42a0      	cmp	r0, r4
 800822a:	d001      	beq.n	8008230 <strncmp+0x1c>
 800822c:	2a00      	cmp	r2, #0
 800822e:	d1f5      	bne.n	800821c <strncmp+0x8>
 8008230:	1ad0      	subs	r0, r2, r3
 8008232:	bd10      	pop	{r4, pc}
 8008234:	4610      	mov	r0, r2
 8008236:	e7fc      	b.n	8008232 <strncmp+0x1e>

08008238 <strncpy>:
 8008238:	b510      	push	{r4, lr}
 800823a:	3901      	subs	r1, #1
 800823c:	4603      	mov	r3, r0
 800823e:	b132      	cbz	r2, 800824e <strncpy+0x16>
 8008240:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8008244:	f803 4b01 	strb.w	r4, [r3], #1
 8008248:	3a01      	subs	r2, #1
 800824a:	2c00      	cmp	r4, #0
 800824c:	d1f7      	bne.n	800823e <strncpy+0x6>
 800824e:	441a      	add	r2, r3
 8008250:	2100      	movs	r1, #0
 8008252:	4293      	cmp	r3, r2
 8008254:	d100      	bne.n	8008258 <strncpy+0x20>
 8008256:	bd10      	pop	{r4, pc}
 8008258:	f803 1b01 	strb.w	r1, [r3], #1
 800825c:	e7f9      	b.n	8008252 <strncpy+0x1a>
	...

08008260 <strtok>:
 8008260:	4b16      	ldr	r3, [pc, #88]	; (80082bc <strtok+0x5c>)
 8008262:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008264:	681e      	ldr	r6, [r3, #0]
 8008266:	6c74      	ldr	r4, [r6, #68]	; 0x44
 8008268:	4605      	mov	r5, r0
 800826a:	b9fc      	cbnz	r4, 80082ac <strtok+0x4c>
 800826c:	2050      	movs	r0, #80	; 0x50
 800826e:	9101      	str	r1, [sp, #4]
 8008270:	f001 fd30 	bl	8009cd4 <malloc>
 8008274:	9901      	ldr	r1, [sp, #4]
 8008276:	6470      	str	r0, [r6, #68]	; 0x44
 8008278:	4602      	mov	r2, r0
 800827a:	b920      	cbnz	r0, 8008286 <strtok+0x26>
 800827c:	4b10      	ldr	r3, [pc, #64]	; (80082c0 <strtok+0x60>)
 800827e:	4811      	ldr	r0, [pc, #68]	; (80082c4 <strtok+0x64>)
 8008280:	215b      	movs	r1, #91	; 0x5b
 8008282:	f000 f899 	bl	80083b8 <__assert_func>
 8008286:	e9c0 4400 	strd	r4, r4, [r0]
 800828a:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800828e:	e9c0 4404 	strd	r4, r4, [r0, #16]
 8008292:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 8008296:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 800829a:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 800829e:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 80082a2:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 80082a6:	6184      	str	r4, [r0, #24]
 80082a8:	7704      	strb	r4, [r0, #28]
 80082aa:	6244      	str	r4, [r0, #36]	; 0x24
 80082ac:	6c72      	ldr	r2, [r6, #68]	; 0x44
 80082ae:	2301      	movs	r3, #1
 80082b0:	4628      	mov	r0, r5
 80082b2:	b002      	add	sp, #8
 80082b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80082b8:	f000 b806 	b.w	80082c8 <__strtok_r>
 80082bc:	200001ec 	.word	0x200001ec
 80082c0:	0800bdbd 	.word	0x0800bdbd
 80082c4:	0800bdd4 	.word	0x0800bdd4

080082c8 <__strtok_r>:
 80082c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80082ca:	b908      	cbnz	r0, 80082d0 <__strtok_r+0x8>
 80082cc:	6810      	ldr	r0, [r2, #0]
 80082ce:	b188      	cbz	r0, 80082f4 <__strtok_r+0x2c>
 80082d0:	4604      	mov	r4, r0
 80082d2:	4620      	mov	r0, r4
 80082d4:	f814 5b01 	ldrb.w	r5, [r4], #1
 80082d8:	460f      	mov	r7, r1
 80082da:	f817 6b01 	ldrb.w	r6, [r7], #1
 80082de:	b91e      	cbnz	r6, 80082e8 <__strtok_r+0x20>
 80082e0:	b965      	cbnz	r5, 80082fc <__strtok_r+0x34>
 80082e2:	6015      	str	r5, [r2, #0]
 80082e4:	4628      	mov	r0, r5
 80082e6:	e005      	b.n	80082f4 <__strtok_r+0x2c>
 80082e8:	42b5      	cmp	r5, r6
 80082ea:	d1f6      	bne.n	80082da <__strtok_r+0x12>
 80082ec:	2b00      	cmp	r3, #0
 80082ee:	d1f0      	bne.n	80082d2 <__strtok_r+0xa>
 80082f0:	6014      	str	r4, [r2, #0]
 80082f2:	7003      	strb	r3, [r0, #0]
 80082f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80082f6:	461c      	mov	r4, r3
 80082f8:	e00c      	b.n	8008314 <__strtok_r+0x4c>
 80082fa:	b915      	cbnz	r5, 8008302 <__strtok_r+0x3a>
 80082fc:	f814 3b01 	ldrb.w	r3, [r4], #1
 8008300:	460e      	mov	r6, r1
 8008302:	f816 5b01 	ldrb.w	r5, [r6], #1
 8008306:	42ab      	cmp	r3, r5
 8008308:	d1f7      	bne.n	80082fa <__strtok_r+0x32>
 800830a:	2b00      	cmp	r3, #0
 800830c:	d0f3      	beq.n	80082f6 <__strtok_r+0x2e>
 800830e:	2300      	movs	r3, #0
 8008310:	f804 3c01 	strb.w	r3, [r4, #-1]
 8008314:	6014      	str	r4, [r2, #0]
 8008316:	e7ed      	b.n	80082f4 <__strtok_r+0x2c>

08008318 <memset>:
 8008318:	4402      	add	r2, r0
 800831a:	4603      	mov	r3, r0
 800831c:	4293      	cmp	r3, r2
 800831e:	d100      	bne.n	8008322 <memset+0xa>
 8008320:	4770      	bx	lr
 8008322:	f803 1b01 	strb.w	r1, [r3], #1
 8008326:	e7f9      	b.n	800831c <memset+0x4>

08008328 <_localeconv_r>:
 8008328:	4800      	ldr	r0, [pc, #0]	; (800832c <_localeconv_r+0x4>)
 800832a:	4770      	bx	lr
 800832c:	20000124 	.word	0x20000124

08008330 <__errno>:
 8008330:	4b01      	ldr	r3, [pc, #4]	; (8008338 <__errno+0x8>)
 8008332:	6818      	ldr	r0, [r3, #0]
 8008334:	4770      	bx	lr
 8008336:	bf00      	nop
 8008338:	200001ec 	.word	0x200001ec

0800833c <__libc_init_array>:
 800833c:	b570      	push	{r4, r5, r6, lr}
 800833e:	4d0d      	ldr	r5, [pc, #52]	; (8008374 <__libc_init_array+0x38>)
 8008340:	4c0d      	ldr	r4, [pc, #52]	; (8008378 <__libc_init_array+0x3c>)
 8008342:	1b64      	subs	r4, r4, r5
 8008344:	10a4      	asrs	r4, r4, #2
 8008346:	2600      	movs	r6, #0
 8008348:	42a6      	cmp	r6, r4
 800834a:	d109      	bne.n	8008360 <__libc_init_array+0x24>
 800834c:	4d0b      	ldr	r5, [pc, #44]	; (800837c <__libc_init_array+0x40>)
 800834e:	4c0c      	ldr	r4, [pc, #48]	; (8008380 <__libc_init_array+0x44>)
 8008350:	f002 fdd6 	bl	800af00 <_init>
 8008354:	1b64      	subs	r4, r4, r5
 8008356:	10a4      	asrs	r4, r4, #2
 8008358:	2600      	movs	r6, #0
 800835a:	42a6      	cmp	r6, r4
 800835c:	d105      	bne.n	800836a <__libc_init_array+0x2e>
 800835e:	bd70      	pop	{r4, r5, r6, pc}
 8008360:	f855 3b04 	ldr.w	r3, [r5], #4
 8008364:	4798      	blx	r3
 8008366:	3601      	adds	r6, #1
 8008368:	e7ee      	b.n	8008348 <__libc_init_array+0xc>
 800836a:	f855 3b04 	ldr.w	r3, [r5], #4
 800836e:	4798      	blx	r3
 8008370:	3601      	adds	r6, #1
 8008372:	e7f2      	b.n	800835a <__libc_init_array+0x1e>
 8008374:	0800c1bc 	.word	0x0800c1bc
 8008378:	0800c1bc 	.word	0x0800c1bc
 800837c:	0800c1bc 	.word	0x0800c1bc
 8008380:	0800c1c0 	.word	0x0800c1c0

08008384 <__retarget_lock_acquire_recursive>:
 8008384:	4770      	bx	lr

08008386 <__retarget_lock_release_recursive>:
 8008386:	4770      	bx	lr

08008388 <memcpy>:
 8008388:	440a      	add	r2, r1
 800838a:	4291      	cmp	r1, r2
 800838c:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8008390:	d100      	bne.n	8008394 <memcpy+0xc>
 8008392:	4770      	bx	lr
 8008394:	b510      	push	{r4, lr}
 8008396:	f811 4b01 	ldrb.w	r4, [r1], #1
 800839a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800839e:	4291      	cmp	r1, r2
 80083a0:	d1f9      	bne.n	8008396 <memcpy+0xe>
 80083a2:	bd10      	pop	{r4, pc}
 80083a4:	0000      	movs	r0, r0
	...

080083a8 <nan>:
 80083a8:	ed9f 0b01 	vldr	d0, [pc, #4]	; 80083b0 <nan+0x8>
 80083ac:	4770      	bx	lr
 80083ae:	bf00      	nop
 80083b0:	00000000 	.word	0x00000000
 80083b4:	7ff80000 	.word	0x7ff80000

080083b8 <__assert_func>:
 80083b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80083ba:	4614      	mov	r4, r2
 80083bc:	461a      	mov	r2, r3
 80083be:	4b09      	ldr	r3, [pc, #36]	; (80083e4 <__assert_func+0x2c>)
 80083c0:	681b      	ldr	r3, [r3, #0]
 80083c2:	4605      	mov	r5, r0
 80083c4:	68d8      	ldr	r0, [r3, #12]
 80083c6:	b14c      	cbz	r4, 80083dc <__assert_func+0x24>
 80083c8:	4b07      	ldr	r3, [pc, #28]	; (80083e8 <__assert_func+0x30>)
 80083ca:	9100      	str	r1, [sp, #0]
 80083cc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80083d0:	4906      	ldr	r1, [pc, #24]	; (80083ec <__assert_func+0x34>)
 80083d2:	462b      	mov	r3, r5
 80083d4:	f002 fae2 	bl	800a99c <fiprintf>
 80083d8:	f002 fcb8 	bl	800ad4c <abort>
 80083dc:	4b04      	ldr	r3, [pc, #16]	; (80083f0 <__assert_func+0x38>)
 80083de:	461c      	mov	r4, r3
 80083e0:	e7f3      	b.n	80083ca <__assert_func+0x12>
 80083e2:	bf00      	nop
 80083e4:	200001ec 	.word	0x200001ec
 80083e8:	0800bf37 	.word	0x0800bf37
 80083ec:	0800bf44 	.word	0x0800bf44
 80083f0:	0800bf72 	.word	0x0800bf72

080083f4 <quorem>:
 80083f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80083f8:	6903      	ldr	r3, [r0, #16]
 80083fa:	690c      	ldr	r4, [r1, #16]
 80083fc:	42a3      	cmp	r3, r4
 80083fe:	4607      	mov	r7, r0
 8008400:	db7e      	blt.n	8008500 <quorem+0x10c>
 8008402:	3c01      	subs	r4, #1
 8008404:	f101 0814 	add.w	r8, r1, #20
 8008408:	f100 0514 	add.w	r5, r0, #20
 800840c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8008410:	9301      	str	r3, [sp, #4]
 8008412:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8008416:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800841a:	3301      	adds	r3, #1
 800841c:	429a      	cmp	r2, r3
 800841e:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8008422:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8008426:	fbb2 f6f3 	udiv	r6, r2, r3
 800842a:	d331      	bcc.n	8008490 <quorem+0x9c>
 800842c:	f04f 0e00 	mov.w	lr, #0
 8008430:	4640      	mov	r0, r8
 8008432:	46ac      	mov	ip, r5
 8008434:	46f2      	mov	sl, lr
 8008436:	f850 2b04 	ldr.w	r2, [r0], #4
 800843a:	b293      	uxth	r3, r2
 800843c:	fb06 e303 	mla	r3, r6, r3, lr
 8008440:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8008444:	0c1a      	lsrs	r2, r3, #16
 8008446:	b29b      	uxth	r3, r3
 8008448:	ebaa 0303 	sub.w	r3, sl, r3
 800844c:	f8dc a000 	ldr.w	sl, [ip]
 8008450:	fa13 f38a 	uxtah	r3, r3, sl
 8008454:	fb06 220e 	mla	r2, r6, lr, r2
 8008458:	9300      	str	r3, [sp, #0]
 800845a:	9b00      	ldr	r3, [sp, #0]
 800845c:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8008460:	b292      	uxth	r2, r2
 8008462:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8008466:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800846a:	f8bd 3000 	ldrh.w	r3, [sp]
 800846e:	4581      	cmp	r9, r0
 8008470:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8008474:	f84c 3b04 	str.w	r3, [ip], #4
 8008478:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800847c:	d2db      	bcs.n	8008436 <quorem+0x42>
 800847e:	f855 300b 	ldr.w	r3, [r5, fp]
 8008482:	b92b      	cbnz	r3, 8008490 <quorem+0x9c>
 8008484:	9b01      	ldr	r3, [sp, #4]
 8008486:	3b04      	subs	r3, #4
 8008488:	429d      	cmp	r5, r3
 800848a:	461a      	mov	r2, r3
 800848c:	d32c      	bcc.n	80084e8 <quorem+0xf4>
 800848e:	613c      	str	r4, [r7, #16]
 8008490:	4638      	mov	r0, r7
 8008492:	f002 f859 	bl	800a548 <__mcmp>
 8008496:	2800      	cmp	r0, #0
 8008498:	db22      	blt.n	80084e0 <quorem+0xec>
 800849a:	3601      	adds	r6, #1
 800849c:	4629      	mov	r1, r5
 800849e:	2000      	movs	r0, #0
 80084a0:	f858 2b04 	ldr.w	r2, [r8], #4
 80084a4:	f8d1 c000 	ldr.w	ip, [r1]
 80084a8:	b293      	uxth	r3, r2
 80084aa:	1ac3      	subs	r3, r0, r3
 80084ac:	0c12      	lsrs	r2, r2, #16
 80084ae:	fa13 f38c 	uxtah	r3, r3, ip
 80084b2:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 80084b6:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80084ba:	b29b      	uxth	r3, r3
 80084bc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80084c0:	45c1      	cmp	r9, r8
 80084c2:	f841 3b04 	str.w	r3, [r1], #4
 80084c6:	ea4f 4022 	mov.w	r0, r2, asr #16
 80084ca:	d2e9      	bcs.n	80084a0 <quorem+0xac>
 80084cc:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80084d0:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80084d4:	b922      	cbnz	r2, 80084e0 <quorem+0xec>
 80084d6:	3b04      	subs	r3, #4
 80084d8:	429d      	cmp	r5, r3
 80084da:	461a      	mov	r2, r3
 80084dc:	d30a      	bcc.n	80084f4 <quorem+0x100>
 80084de:	613c      	str	r4, [r7, #16]
 80084e0:	4630      	mov	r0, r6
 80084e2:	b003      	add	sp, #12
 80084e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80084e8:	6812      	ldr	r2, [r2, #0]
 80084ea:	3b04      	subs	r3, #4
 80084ec:	2a00      	cmp	r2, #0
 80084ee:	d1ce      	bne.n	800848e <quorem+0x9a>
 80084f0:	3c01      	subs	r4, #1
 80084f2:	e7c9      	b.n	8008488 <quorem+0x94>
 80084f4:	6812      	ldr	r2, [r2, #0]
 80084f6:	3b04      	subs	r3, #4
 80084f8:	2a00      	cmp	r2, #0
 80084fa:	d1f0      	bne.n	80084de <quorem+0xea>
 80084fc:	3c01      	subs	r4, #1
 80084fe:	e7eb      	b.n	80084d8 <quorem+0xe4>
 8008500:	2000      	movs	r0, #0
 8008502:	e7ee      	b.n	80084e2 <quorem+0xee>
 8008504:	0000      	movs	r0, r0
	...

08008508 <_dtoa_r>:
 8008508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800850c:	ed2d 8b04 	vpush	{d8-d9}
 8008510:	69c5      	ldr	r5, [r0, #28]
 8008512:	b093      	sub	sp, #76	; 0x4c
 8008514:	ed8d 0b02 	vstr	d0, [sp, #8]
 8008518:	ec57 6b10 	vmov	r6, r7, d0
 800851c:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8008520:	9107      	str	r1, [sp, #28]
 8008522:	4604      	mov	r4, r0
 8008524:	920a      	str	r2, [sp, #40]	; 0x28
 8008526:	930d      	str	r3, [sp, #52]	; 0x34
 8008528:	b975      	cbnz	r5, 8008548 <_dtoa_r+0x40>
 800852a:	2010      	movs	r0, #16
 800852c:	f001 fbd2 	bl	8009cd4 <malloc>
 8008530:	4602      	mov	r2, r0
 8008532:	61e0      	str	r0, [r4, #28]
 8008534:	b920      	cbnz	r0, 8008540 <_dtoa_r+0x38>
 8008536:	4bae      	ldr	r3, [pc, #696]	; (80087f0 <_dtoa_r+0x2e8>)
 8008538:	21ef      	movs	r1, #239	; 0xef
 800853a:	48ae      	ldr	r0, [pc, #696]	; (80087f4 <_dtoa_r+0x2ec>)
 800853c:	f7ff ff3c 	bl	80083b8 <__assert_func>
 8008540:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8008544:	6005      	str	r5, [r0, #0]
 8008546:	60c5      	str	r5, [r0, #12]
 8008548:	69e3      	ldr	r3, [r4, #28]
 800854a:	6819      	ldr	r1, [r3, #0]
 800854c:	b151      	cbz	r1, 8008564 <_dtoa_r+0x5c>
 800854e:	685a      	ldr	r2, [r3, #4]
 8008550:	604a      	str	r2, [r1, #4]
 8008552:	2301      	movs	r3, #1
 8008554:	4093      	lsls	r3, r2
 8008556:	608b      	str	r3, [r1, #8]
 8008558:	4620      	mov	r0, r4
 800855a:	f001 fd6f 	bl	800a03c <_Bfree>
 800855e:	69e3      	ldr	r3, [r4, #28]
 8008560:	2200      	movs	r2, #0
 8008562:	601a      	str	r2, [r3, #0]
 8008564:	1e3b      	subs	r3, r7, #0
 8008566:	bfbb      	ittet	lt
 8008568:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800856c:	9303      	strlt	r3, [sp, #12]
 800856e:	2300      	movge	r3, #0
 8008570:	2201      	movlt	r2, #1
 8008572:	bfac      	ite	ge
 8008574:	f8c8 3000 	strge.w	r3, [r8]
 8008578:	f8c8 2000 	strlt.w	r2, [r8]
 800857c:	4b9e      	ldr	r3, [pc, #632]	; (80087f8 <_dtoa_r+0x2f0>)
 800857e:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8008582:	ea33 0308 	bics.w	r3, r3, r8
 8008586:	d11b      	bne.n	80085c0 <_dtoa_r+0xb8>
 8008588:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800858a:	f242 730f 	movw	r3, #9999	; 0x270f
 800858e:	6013      	str	r3, [r2, #0]
 8008590:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8008594:	4333      	orrs	r3, r6
 8008596:	f000 8593 	beq.w	80090c0 <_dtoa_r+0xbb8>
 800859a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800859c:	b963      	cbnz	r3, 80085b8 <_dtoa_r+0xb0>
 800859e:	4b97      	ldr	r3, [pc, #604]	; (80087fc <_dtoa_r+0x2f4>)
 80085a0:	e027      	b.n	80085f2 <_dtoa_r+0xea>
 80085a2:	4b97      	ldr	r3, [pc, #604]	; (8008800 <_dtoa_r+0x2f8>)
 80085a4:	9300      	str	r3, [sp, #0]
 80085a6:	3308      	adds	r3, #8
 80085a8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80085aa:	6013      	str	r3, [r2, #0]
 80085ac:	9800      	ldr	r0, [sp, #0]
 80085ae:	b013      	add	sp, #76	; 0x4c
 80085b0:	ecbd 8b04 	vpop	{d8-d9}
 80085b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80085b8:	4b90      	ldr	r3, [pc, #576]	; (80087fc <_dtoa_r+0x2f4>)
 80085ba:	9300      	str	r3, [sp, #0]
 80085bc:	3303      	adds	r3, #3
 80085be:	e7f3      	b.n	80085a8 <_dtoa_r+0xa0>
 80085c0:	ed9d 7b02 	vldr	d7, [sp, #8]
 80085c4:	2200      	movs	r2, #0
 80085c6:	ec51 0b17 	vmov	r0, r1, d7
 80085ca:	eeb0 8a47 	vmov.f32	s16, s14
 80085ce:	eef0 8a67 	vmov.f32	s17, s15
 80085d2:	2300      	movs	r3, #0
 80085d4:	f7f8 fa82 	bl	8000adc <__aeabi_dcmpeq>
 80085d8:	4681      	mov	r9, r0
 80085da:	b160      	cbz	r0, 80085f6 <_dtoa_r+0xee>
 80085dc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80085de:	2301      	movs	r3, #1
 80085e0:	6013      	str	r3, [r2, #0]
 80085e2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80085e4:	2b00      	cmp	r3, #0
 80085e6:	f000 8568 	beq.w	80090ba <_dtoa_r+0xbb2>
 80085ea:	4b86      	ldr	r3, [pc, #536]	; (8008804 <_dtoa_r+0x2fc>)
 80085ec:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80085ee:	6013      	str	r3, [r2, #0]
 80085f0:	3b01      	subs	r3, #1
 80085f2:	9300      	str	r3, [sp, #0]
 80085f4:	e7da      	b.n	80085ac <_dtoa_r+0xa4>
 80085f6:	aa10      	add	r2, sp, #64	; 0x40
 80085f8:	a911      	add	r1, sp, #68	; 0x44
 80085fa:	4620      	mov	r0, r4
 80085fc:	eeb0 0a48 	vmov.f32	s0, s16
 8008600:	eef0 0a68 	vmov.f32	s1, s17
 8008604:	f002 f8b6 	bl	800a774 <__d2b>
 8008608:	f3c8 550a 	ubfx	r5, r8, #20, #11
 800860c:	4682      	mov	sl, r0
 800860e:	2d00      	cmp	r5, #0
 8008610:	d07f      	beq.n	8008712 <_dtoa_r+0x20a>
 8008612:	ee18 3a90 	vmov	r3, s17
 8008616:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800861a:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 800861e:	ec51 0b18 	vmov	r0, r1, d8
 8008622:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8008626:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800862a:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800862e:	4619      	mov	r1, r3
 8008630:	2200      	movs	r2, #0
 8008632:	4b75      	ldr	r3, [pc, #468]	; (8008808 <_dtoa_r+0x300>)
 8008634:	f7f7 fe32 	bl	800029c <__aeabi_dsub>
 8008638:	a367      	add	r3, pc, #412	; (adr r3, 80087d8 <_dtoa_r+0x2d0>)
 800863a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800863e:	f7f7 ffe5 	bl	800060c <__aeabi_dmul>
 8008642:	a367      	add	r3, pc, #412	; (adr r3, 80087e0 <_dtoa_r+0x2d8>)
 8008644:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008648:	f7f7 fe2a 	bl	80002a0 <__adddf3>
 800864c:	4606      	mov	r6, r0
 800864e:	4628      	mov	r0, r5
 8008650:	460f      	mov	r7, r1
 8008652:	f7f7 ff71 	bl	8000538 <__aeabi_i2d>
 8008656:	a364      	add	r3, pc, #400	; (adr r3, 80087e8 <_dtoa_r+0x2e0>)
 8008658:	e9d3 2300 	ldrd	r2, r3, [r3]
 800865c:	f7f7 ffd6 	bl	800060c <__aeabi_dmul>
 8008660:	4602      	mov	r2, r0
 8008662:	460b      	mov	r3, r1
 8008664:	4630      	mov	r0, r6
 8008666:	4639      	mov	r1, r7
 8008668:	f7f7 fe1a 	bl	80002a0 <__adddf3>
 800866c:	4606      	mov	r6, r0
 800866e:	460f      	mov	r7, r1
 8008670:	f7f8 fa7c 	bl	8000b6c <__aeabi_d2iz>
 8008674:	2200      	movs	r2, #0
 8008676:	4683      	mov	fp, r0
 8008678:	2300      	movs	r3, #0
 800867a:	4630      	mov	r0, r6
 800867c:	4639      	mov	r1, r7
 800867e:	f7f8 fa37 	bl	8000af0 <__aeabi_dcmplt>
 8008682:	b148      	cbz	r0, 8008698 <_dtoa_r+0x190>
 8008684:	4658      	mov	r0, fp
 8008686:	f7f7 ff57 	bl	8000538 <__aeabi_i2d>
 800868a:	4632      	mov	r2, r6
 800868c:	463b      	mov	r3, r7
 800868e:	f7f8 fa25 	bl	8000adc <__aeabi_dcmpeq>
 8008692:	b908      	cbnz	r0, 8008698 <_dtoa_r+0x190>
 8008694:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8008698:	f1bb 0f16 	cmp.w	fp, #22
 800869c:	d857      	bhi.n	800874e <_dtoa_r+0x246>
 800869e:	4b5b      	ldr	r3, [pc, #364]	; (800880c <_dtoa_r+0x304>)
 80086a0:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 80086a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80086a8:	ec51 0b18 	vmov	r0, r1, d8
 80086ac:	f7f8 fa20 	bl	8000af0 <__aeabi_dcmplt>
 80086b0:	2800      	cmp	r0, #0
 80086b2:	d04e      	beq.n	8008752 <_dtoa_r+0x24a>
 80086b4:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 80086b8:	2300      	movs	r3, #0
 80086ba:	930c      	str	r3, [sp, #48]	; 0x30
 80086bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80086be:	1b5b      	subs	r3, r3, r5
 80086c0:	1e5a      	subs	r2, r3, #1
 80086c2:	bf45      	ittet	mi
 80086c4:	f1c3 0301 	rsbmi	r3, r3, #1
 80086c8:	9305      	strmi	r3, [sp, #20]
 80086ca:	2300      	movpl	r3, #0
 80086cc:	2300      	movmi	r3, #0
 80086ce:	9206      	str	r2, [sp, #24]
 80086d0:	bf54      	ite	pl
 80086d2:	9305      	strpl	r3, [sp, #20]
 80086d4:	9306      	strmi	r3, [sp, #24]
 80086d6:	f1bb 0f00 	cmp.w	fp, #0
 80086da:	db3c      	blt.n	8008756 <_dtoa_r+0x24e>
 80086dc:	9b06      	ldr	r3, [sp, #24]
 80086de:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 80086e2:	445b      	add	r3, fp
 80086e4:	9306      	str	r3, [sp, #24]
 80086e6:	2300      	movs	r3, #0
 80086e8:	9308      	str	r3, [sp, #32]
 80086ea:	9b07      	ldr	r3, [sp, #28]
 80086ec:	2b09      	cmp	r3, #9
 80086ee:	d868      	bhi.n	80087c2 <_dtoa_r+0x2ba>
 80086f0:	2b05      	cmp	r3, #5
 80086f2:	bfc4      	itt	gt
 80086f4:	3b04      	subgt	r3, #4
 80086f6:	9307      	strgt	r3, [sp, #28]
 80086f8:	9b07      	ldr	r3, [sp, #28]
 80086fa:	f1a3 0302 	sub.w	r3, r3, #2
 80086fe:	bfcc      	ite	gt
 8008700:	2500      	movgt	r5, #0
 8008702:	2501      	movle	r5, #1
 8008704:	2b03      	cmp	r3, #3
 8008706:	f200 8085 	bhi.w	8008814 <_dtoa_r+0x30c>
 800870a:	e8df f003 	tbb	[pc, r3]
 800870e:	3b2e      	.short	0x3b2e
 8008710:	5839      	.short	0x5839
 8008712:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8008716:	441d      	add	r5, r3
 8008718:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800871c:	2b20      	cmp	r3, #32
 800871e:	bfc1      	itttt	gt
 8008720:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8008724:	fa08 f803 	lslgt.w	r8, r8, r3
 8008728:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 800872c:	fa26 f303 	lsrgt.w	r3, r6, r3
 8008730:	bfd6      	itet	le
 8008732:	f1c3 0320 	rsble	r3, r3, #32
 8008736:	ea48 0003 	orrgt.w	r0, r8, r3
 800873a:	fa06 f003 	lslle.w	r0, r6, r3
 800873e:	f7f7 feeb 	bl	8000518 <__aeabi_ui2d>
 8008742:	2201      	movs	r2, #1
 8008744:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 8008748:	3d01      	subs	r5, #1
 800874a:	920e      	str	r2, [sp, #56]	; 0x38
 800874c:	e76f      	b.n	800862e <_dtoa_r+0x126>
 800874e:	2301      	movs	r3, #1
 8008750:	e7b3      	b.n	80086ba <_dtoa_r+0x1b2>
 8008752:	900c      	str	r0, [sp, #48]	; 0x30
 8008754:	e7b2      	b.n	80086bc <_dtoa_r+0x1b4>
 8008756:	9b05      	ldr	r3, [sp, #20]
 8008758:	eba3 030b 	sub.w	r3, r3, fp
 800875c:	9305      	str	r3, [sp, #20]
 800875e:	f1cb 0300 	rsb	r3, fp, #0
 8008762:	9308      	str	r3, [sp, #32]
 8008764:	2300      	movs	r3, #0
 8008766:	930b      	str	r3, [sp, #44]	; 0x2c
 8008768:	e7bf      	b.n	80086ea <_dtoa_r+0x1e2>
 800876a:	2300      	movs	r3, #0
 800876c:	9309      	str	r3, [sp, #36]	; 0x24
 800876e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008770:	2b00      	cmp	r3, #0
 8008772:	dc52      	bgt.n	800881a <_dtoa_r+0x312>
 8008774:	2301      	movs	r3, #1
 8008776:	9301      	str	r3, [sp, #4]
 8008778:	9304      	str	r3, [sp, #16]
 800877a:	461a      	mov	r2, r3
 800877c:	920a      	str	r2, [sp, #40]	; 0x28
 800877e:	e00b      	b.n	8008798 <_dtoa_r+0x290>
 8008780:	2301      	movs	r3, #1
 8008782:	e7f3      	b.n	800876c <_dtoa_r+0x264>
 8008784:	2300      	movs	r3, #0
 8008786:	9309      	str	r3, [sp, #36]	; 0x24
 8008788:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800878a:	445b      	add	r3, fp
 800878c:	9301      	str	r3, [sp, #4]
 800878e:	3301      	adds	r3, #1
 8008790:	2b01      	cmp	r3, #1
 8008792:	9304      	str	r3, [sp, #16]
 8008794:	bfb8      	it	lt
 8008796:	2301      	movlt	r3, #1
 8008798:	69e0      	ldr	r0, [r4, #28]
 800879a:	2100      	movs	r1, #0
 800879c:	2204      	movs	r2, #4
 800879e:	f102 0614 	add.w	r6, r2, #20
 80087a2:	429e      	cmp	r6, r3
 80087a4:	d93d      	bls.n	8008822 <_dtoa_r+0x31a>
 80087a6:	6041      	str	r1, [r0, #4]
 80087a8:	4620      	mov	r0, r4
 80087aa:	f001 fc07 	bl	8009fbc <_Balloc>
 80087ae:	9000      	str	r0, [sp, #0]
 80087b0:	2800      	cmp	r0, #0
 80087b2:	d139      	bne.n	8008828 <_dtoa_r+0x320>
 80087b4:	4b16      	ldr	r3, [pc, #88]	; (8008810 <_dtoa_r+0x308>)
 80087b6:	4602      	mov	r2, r0
 80087b8:	f240 11af 	movw	r1, #431	; 0x1af
 80087bc:	e6bd      	b.n	800853a <_dtoa_r+0x32>
 80087be:	2301      	movs	r3, #1
 80087c0:	e7e1      	b.n	8008786 <_dtoa_r+0x27e>
 80087c2:	2501      	movs	r5, #1
 80087c4:	2300      	movs	r3, #0
 80087c6:	9307      	str	r3, [sp, #28]
 80087c8:	9509      	str	r5, [sp, #36]	; 0x24
 80087ca:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80087ce:	9301      	str	r3, [sp, #4]
 80087d0:	9304      	str	r3, [sp, #16]
 80087d2:	2200      	movs	r2, #0
 80087d4:	2312      	movs	r3, #18
 80087d6:	e7d1      	b.n	800877c <_dtoa_r+0x274>
 80087d8:	636f4361 	.word	0x636f4361
 80087dc:	3fd287a7 	.word	0x3fd287a7
 80087e0:	8b60c8b3 	.word	0x8b60c8b3
 80087e4:	3fc68a28 	.word	0x3fc68a28
 80087e8:	509f79fb 	.word	0x509f79fb
 80087ec:	3fd34413 	.word	0x3fd34413
 80087f0:	0800bdbd 	.word	0x0800bdbd
 80087f4:	0800bf80 	.word	0x0800bf80
 80087f8:	7ff00000 	.word	0x7ff00000
 80087fc:	0800bf7c 	.word	0x0800bf7c
 8008800:	0800bf73 	.word	0x0800bf73
 8008804:	0800bd21 	.word	0x0800bd21
 8008808:	3ff80000 	.word	0x3ff80000
 800880c:	0800c0e0 	.word	0x0800c0e0
 8008810:	0800bfd8 	.word	0x0800bfd8
 8008814:	2301      	movs	r3, #1
 8008816:	9309      	str	r3, [sp, #36]	; 0x24
 8008818:	e7d7      	b.n	80087ca <_dtoa_r+0x2c2>
 800881a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800881c:	9301      	str	r3, [sp, #4]
 800881e:	9304      	str	r3, [sp, #16]
 8008820:	e7ba      	b.n	8008798 <_dtoa_r+0x290>
 8008822:	3101      	adds	r1, #1
 8008824:	0052      	lsls	r2, r2, #1
 8008826:	e7ba      	b.n	800879e <_dtoa_r+0x296>
 8008828:	69e3      	ldr	r3, [r4, #28]
 800882a:	9a00      	ldr	r2, [sp, #0]
 800882c:	601a      	str	r2, [r3, #0]
 800882e:	9b04      	ldr	r3, [sp, #16]
 8008830:	2b0e      	cmp	r3, #14
 8008832:	f200 80a8 	bhi.w	8008986 <_dtoa_r+0x47e>
 8008836:	2d00      	cmp	r5, #0
 8008838:	f000 80a5 	beq.w	8008986 <_dtoa_r+0x47e>
 800883c:	f1bb 0f00 	cmp.w	fp, #0
 8008840:	dd38      	ble.n	80088b4 <_dtoa_r+0x3ac>
 8008842:	4bc0      	ldr	r3, [pc, #768]	; (8008b44 <_dtoa_r+0x63c>)
 8008844:	f00b 020f 	and.w	r2, fp, #15
 8008848:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800884c:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8008850:	e9d3 6700 	ldrd	r6, r7, [r3]
 8008854:	ea4f 182b 	mov.w	r8, fp, asr #4
 8008858:	d019      	beq.n	800888e <_dtoa_r+0x386>
 800885a:	4bbb      	ldr	r3, [pc, #748]	; (8008b48 <_dtoa_r+0x640>)
 800885c:	ec51 0b18 	vmov	r0, r1, d8
 8008860:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8008864:	f7f7 fffc 	bl	8000860 <__aeabi_ddiv>
 8008868:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800886c:	f008 080f 	and.w	r8, r8, #15
 8008870:	2503      	movs	r5, #3
 8008872:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 8008b48 <_dtoa_r+0x640>
 8008876:	f1b8 0f00 	cmp.w	r8, #0
 800887a:	d10a      	bne.n	8008892 <_dtoa_r+0x38a>
 800887c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008880:	4632      	mov	r2, r6
 8008882:	463b      	mov	r3, r7
 8008884:	f7f7 ffec 	bl	8000860 <__aeabi_ddiv>
 8008888:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800888c:	e02b      	b.n	80088e6 <_dtoa_r+0x3de>
 800888e:	2502      	movs	r5, #2
 8008890:	e7ef      	b.n	8008872 <_dtoa_r+0x36a>
 8008892:	f018 0f01 	tst.w	r8, #1
 8008896:	d008      	beq.n	80088aa <_dtoa_r+0x3a2>
 8008898:	4630      	mov	r0, r6
 800889a:	4639      	mov	r1, r7
 800889c:	e9d9 2300 	ldrd	r2, r3, [r9]
 80088a0:	f7f7 feb4 	bl	800060c <__aeabi_dmul>
 80088a4:	3501      	adds	r5, #1
 80088a6:	4606      	mov	r6, r0
 80088a8:	460f      	mov	r7, r1
 80088aa:	ea4f 0868 	mov.w	r8, r8, asr #1
 80088ae:	f109 0908 	add.w	r9, r9, #8
 80088b2:	e7e0      	b.n	8008876 <_dtoa_r+0x36e>
 80088b4:	f000 809f 	beq.w	80089f6 <_dtoa_r+0x4ee>
 80088b8:	f1cb 0600 	rsb	r6, fp, #0
 80088bc:	4ba1      	ldr	r3, [pc, #644]	; (8008b44 <_dtoa_r+0x63c>)
 80088be:	4fa2      	ldr	r7, [pc, #648]	; (8008b48 <_dtoa_r+0x640>)
 80088c0:	f006 020f 	and.w	r2, r6, #15
 80088c4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80088c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80088cc:	ec51 0b18 	vmov	r0, r1, d8
 80088d0:	f7f7 fe9c 	bl	800060c <__aeabi_dmul>
 80088d4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80088d8:	1136      	asrs	r6, r6, #4
 80088da:	2300      	movs	r3, #0
 80088dc:	2502      	movs	r5, #2
 80088de:	2e00      	cmp	r6, #0
 80088e0:	d17e      	bne.n	80089e0 <_dtoa_r+0x4d8>
 80088e2:	2b00      	cmp	r3, #0
 80088e4:	d1d0      	bne.n	8008888 <_dtoa_r+0x380>
 80088e6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80088e8:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 80088ec:	2b00      	cmp	r3, #0
 80088ee:	f000 8084 	beq.w	80089fa <_dtoa_r+0x4f2>
 80088f2:	4b96      	ldr	r3, [pc, #600]	; (8008b4c <_dtoa_r+0x644>)
 80088f4:	2200      	movs	r2, #0
 80088f6:	4640      	mov	r0, r8
 80088f8:	4649      	mov	r1, r9
 80088fa:	f7f8 f8f9 	bl	8000af0 <__aeabi_dcmplt>
 80088fe:	2800      	cmp	r0, #0
 8008900:	d07b      	beq.n	80089fa <_dtoa_r+0x4f2>
 8008902:	9b04      	ldr	r3, [sp, #16]
 8008904:	2b00      	cmp	r3, #0
 8008906:	d078      	beq.n	80089fa <_dtoa_r+0x4f2>
 8008908:	9b01      	ldr	r3, [sp, #4]
 800890a:	2b00      	cmp	r3, #0
 800890c:	dd39      	ble.n	8008982 <_dtoa_r+0x47a>
 800890e:	4b90      	ldr	r3, [pc, #576]	; (8008b50 <_dtoa_r+0x648>)
 8008910:	2200      	movs	r2, #0
 8008912:	4640      	mov	r0, r8
 8008914:	4649      	mov	r1, r9
 8008916:	f7f7 fe79 	bl	800060c <__aeabi_dmul>
 800891a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800891e:	9e01      	ldr	r6, [sp, #4]
 8008920:	f10b 37ff 	add.w	r7, fp, #4294967295	; 0xffffffff
 8008924:	3501      	adds	r5, #1
 8008926:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 800892a:	4628      	mov	r0, r5
 800892c:	f7f7 fe04 	bl	8000538 <__aeabi_i2d>
 8008930:	4642      	mov	r2, r8
 8008932:	464b      	mov	r3, r9
 8008934:	f7f7 fe6a 	bl	800060c <__aeabi_dmul>
 8008938:	4b86      	ldr	r3, [pc, #536]	; (8008b54 <_dtoa_r+0x64c>)
 800893a:	2200      	movs	r2, #0
 800893c:	f7f7 fcb0 	bl	80002a0 <__adddf3>
 8008940:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 8008944:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008948:	9303      	str	r3, [sp, #12]
 800894a:	2e00      	cmp	r6, #0
 800894c:	d158      	bne.n	8008a00 <_dtoa_r+0x4f8>
 800894e:	4b82      	ldr	r3, [pc, #520]	; (8008b58 <_dtoa_r+0x650>)
 8008950:	2200      	movs	r2, #0
 8008952:	4640      	mov	r0, r8
 8008954:	4649      	mov	r1, r9
 8008956:	f7f7 fca1 	bl	800029c <__aeabi_dsub>
 800895a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800895e:	4680      	mov	r8, r0
 8008960:	4689      	mov	r9, r1
 8008962:	f7f8 f8e3 	bl	8000b2c <__aeabi_dcmpgt>
 8008966:	2800      	cmp	r0, #0
 8008968:	f040 8296 	bne.w	8008e98 <_dtoa_r+0x990>
 800896c:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8008970:	4640      	mov	r0, r8
 8008972:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8008976:	4649      	mov	r1, r9
 8008978:	f7f8 f8ba 	bl	8000af0 <__aeabi_dcmplt>
 800897c:	2800      	cmp	r0, #0
 800897e:	f040 8289 	bne.w	8008e94 <_dtoa_r+0x98c>
 8008982:	ed8d 8b02 	vstr	d8, [sp, #8]
 8008986:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8008988:	2b00      	cmp	r3, #0
 800898a:	f2c0 814e 	blt.w	8008c2a <_dtoa_r+0x722>
 800898e:	f1bb 0f0e 	cmp.w	fp, #14
 8008992:	f300 814a 	bgt.w	8008c2a <_dtoa_r+0x722>
 8008996:	4b6b      	ldr	r3, [pc, #428]	; (8008b44 <_dtoa_r+0x63c>)
 8008998:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800899c:	e9d3 8900 	ldrd	r8, r9, [r3]
 80089a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80089a2:	2b00      	cmp	r3, #0
 80089a4:	f280 80dc 	bge.w	8008b60 <_dtoa_r+0x658>
 80089a8:	9b04      	ldr	r3, [sp, #16]
 80089aa:	2b00      	cmp	r3, #0
 80089ac:	f300 80d8 	bgt.w	8008b60 <_dtoa_r+0x658>
 80089b0:	f040 826f 	bne.w	8008e92 <_dtoa_r+0x98a>
 80089b4:	4b68      	ldr	r3, [pc, #416]	; (8008b58 <_dtoa_r+0x650>)
 80089b6:	2200      	movs	r2, #0
 80089b8:	4640      	mov	r0, r8
 80089ba:	4649      	mov	r1, r9
 80089bc:	f7f7 fe26 	bl	800060c <__aeabi_dmul>
 80089c0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80089c4:	f7f8 f8a8 	bl	8000b18 <__aeabi_dcmpge>
 80089c8:	9e04      	ldr	r6, [sp, #16]
 80089ca:	4637      	mov	r7, r6
 80089cc:	2800      	cmp	r0, #0
 80089ce:	f040 8245 	bne.w	8008e5c <_dtoa_r+0x954>
 80089d2:	9d00      	ldr	r5, [sp, #0]
 80089d4:	2331      	movs	r3, #49	; 0x31
 80089d6:	f805 3b01 	strb.w	r3, [r5], #1
 80089da:	f10b 0b01 	add.w	fp, fp, #1
 80089de:	e241      	b.n	8008e64 <_dtoa_r+0x95c>
 80089e0:	07f2      	lsls	r2, r6, #31
 80089e2:	d505      	bpl.n	80089f0 <_dtoa_r+0x4e8>
 80089e4:	e9d7 2300 	ldrd	r2, r3, [r7]
 80089e8:	f7f7 fe10 	bl	800060c <__aeabi_dmul>
 80089ec:	3501      	adds	r5, #1
 80089ee:	2301      	movs	r3, #1
 80089f0:	1076      	asrs	r6, r6, #1
 80089f2:	3708      	adds	r7, #8
 80089f4:	e773      	b.n	80088de <_dtoa_r+0x3d6>
 80089f6:	2502      	movs	r5, #2
 80089f8:	e775      	b.n	80088e6 <_dtoa_r+0x3de>
 80089fa:	9e04      	ldr	r6, [sp, #16]
 80089fc:	465f      	mov	r7, fp
 80089fe:	e792      	b.n	8008926 <_dtoa_r+0x41e>
 8008a00:	9900      	ldr	r1, [sp, #0]
 8008a02:	4b50      	ldr	r3, [pc, #320]	; (8008b44 <_dtoa_r+0x63c>)
 8008a04:	ed9d 7b02 	vldr	d7, [sp, #8]
 8008a08:	4431      	add	r1, r6
 8008a0a:	9102      	str	r1, [sp, #8]
 8008a0c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8008a0e:	eeb0 9a47 	vmov.f32	s18, s14
 8008a12:	eef0 9a67 	vmov.f32	s19, s15
 8008a16:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8008a1a:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8008a1e:	2900      	cmp	r1, #0
 8008a20:	d044      	beq.n	8008aac <_dtoa_r+0x5a4>
 8008a22:	494e      	ldr	r1, [pc, #312]	; (8008b5c <_dtoa_r+0x654>)
 8008a24:	2000      	movs	r0, #0
 8008a26:	f7f7 ff1b 	bl	8000860 <__aeabi_ddiv>
 8008a2a:	ec53 2b19 	vmov	r2, r3, d9
 8008a2e:	f7f7 fc35 	bl	800029c <__aeabi_dsub>
 8008a32:	9d00      	ldr	r5, [sp, #0]
 8008a34:	ec41 0b19 	vmov	d9, r0, r1
 8008a38:	4649      	mov	r1, r9
 8008a3a:	4640      	mov	r0, r8
 8008a3c:	f7f8 f896 	bl	8000b6c <__aeabi_d2iz>
 8008a40:	4606      	mov	r6, r0
 8008a42:	f7f7 fd79 	bl	8000538 <__aeabi_i2d>
 8008a46:	4602      	mov	r2, r0
 8008a48:	460b      	mov	r3, r1
 8008a4a:	4640      	mov	r0, r8
 8008a4c:	4649      	mov	r1, r9
 8008a4e:	f7f7 fc25 	bl	800029c <__aeabi_dsub>
 8008a52:	3630      	adds	r6, #48	; 0x30
 8008a54:	f805 6b01 	strb.w	r6, [r5], #1
 8008a58:	ec53 2b19 	vmov	r2, r3, d9
 8008a5c:	4680      	mov	r8, r0
 8008a5e:	4689      	mov	r9, r1
 8008a60:	f7f8 f846 	bl	8000af0 <__aeabi_dcmplt>
 8008a64:	2800      	cmp	r0, #0
 8008a66:	d164      	bne.n	8008b32 <_dtoa_r+0x62a>
 8008a68:	4642      	mov	r2, r8
 8008a6a:	464b      	mov	r3, r9
 8008a6c:	4937      	ldr	r1, [pc, #220]	; (8008b4c <_dtoa_r+0x644>)
 8008a6e:	2000      	movs	r0, #0
 8008a70:	f7f7 fc14 	bl	800029c <__aeabi_dsub>
 8008a74:	ec53 2b19 	vmov	r2, r3, d9
 8008a78:	f7f8 f83a 	bl	8000af0 <__aeabi_dcmplt>
 8008a7c:	2800      	cmp	r0, #0
 8008a7e:	f040 80b6 	bne.w	8008bee <_dtoa_r+0x6e6>
 8008a82:	9b02      	ldr	r3, [sp, #8]
 8008a84:	429d      	cmp	r5, r3
 8008a86:	f43f af7c 	beq.w	8008982 <_dtoa_r+0x47a>
 8008a8a:	4b31      	ldr	r3, [pc, #196]	; (8008b50 <_dtoa_r+0x648>)
 8008a8c:	ec51 0b19 	vmov	r0, r1, d9
 8008a90:	2200      	movs	r2, #0
 8008a92:	f7f7 fdbb 	bl	800060c <__aeabi_dmul>
 8008a96:	4b2e      	ldr	r3, [pc, #184]	; (8008b50 <_dtoa_r+0x648>)
 8008a98:	ec41 0b19 	vmov	d9, r0, r1
 8008a9c:	2200      	movs	r2, #0
 8008a9e:	4640      	mov	r0, r8
 8008aa0:	4649      	mov	r1, r9
 8008aa2:	f7f7 fdb3 	bl	800060c <__aeabi_dmul>
 8008aa6:	4680      	mov	r8, r0
 8008aa8:	4689      	mov	r9, r1
 8008aaa:	e7c5      	b.n	8008a38 <_dtoa_r+0x530>
 8008aac:	ec51 0b17 	vmov	r0, r1, d7
 8008ab0:	f7f7 fdac 	bl	800060c <__aeabi_dmul>
 8008ab4:	9b02      	ldr	r3, [sp, #8]
 8008ab6:	9d00      	ldr	r5, [sp, #0]
 8008ab8:	930f      	str	r3, [sp, #60]	; 0x3c
 8008aba:	ec41 0b19 	vmov	d9, r0, r1
 8008abe:	4649      	mov	r1, r9
 8008ac0:	4640      	mov	r0, r8
 8008ac2:	f7f8 f853 	bl	8000b6c <__aeabi_d2iz>
 8008ac6:	4606      	mov	r6, r0
 8008ac8:	f7f7 fd36 	bl	8000538 <__aeabi_i2d>
 8008acc:	3630      	adds	r6, #48	; 0x30
 8008ace:	4602      	mov	r2, r0
 8008ad0:	460b      	mov	r3, r1
 8008ad2:	4640      	mov	r0, r8
 8008ad4:	4649      	mov	r1, r9
 8008ad6:	f7f7 fbe1 	bl	800029c <__aeabi_dsub>
 8008ada:	f805 6b01 	strb.w	r6, [r5], #1
 8008ade:	9b02      	ldr	r3, [sp, #8]
 8008ae0:	429d      	cmp	r5, r3
 8008ae2:	4680      	mov	r8, r0
 8008ae4:	4689      	mov	r9, r1
 8008ae6:	f04f 0200 	mov.w	r2, #0
 8008aea:	d124      	bne.n	8008b36 <_dtoa_r+0x62e>
 8008aec:	4b1b      	ldr	r3, [pc, #108]	; (8008b5c <_dtoa_r+0x654>)
 8008aee:	ec51 0b19 	vmov	r0, r1, d9
 8008af2:	f7f7 fbd5 	bl	80002a0 <__adddf3>
 8008af6:	4602      	mov	r2, r0
 8008af8:	460b      	mov	r3, r1
 8008afa:	4640      	mov	r0, r8
 8008afc:	4649      	mov	r1, r9
 8008afe:	f7f8 f815 	bl	8000b2c <__aeabi_dcmpgt>
 8008b02:	2800      	cmp	r0, #0
 8008b04:	d173      	bne.n	8008bee <_dtoa_r+0x6e6>
 8008b06:	ec53 2b19 	vmov	r2, r3, d9
 8008b0a:	4914      	ldr	r1, [pc, #80]	; (8008b5c <_dtoa_r+0x654>)
 8008b0c:	2000      	movs	r0, #0
 8008b0e:	f7f7 fbc5 	bl	800029c <__aeabi_dsub>
 8008b12:	4602      	mov	r2, r0
 8008b14:	460b      	mov	r3, r1
 8008b16:	4640      	mov	r0, r8
 8008b18:	4649      	mov	r1, r9
 8008b1a:	f7f7 ffe9 	bl	8000af0 <__aeabi_dcmplt>
 8008b1e:	2800      	cmp	r0, #0
 8008b20:	f43f af2f 	beq.w	8008982 <_dtoa_r+0x47a>
 8008b24:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8008b26:	1e6b      	subs	r3, r5, #1
 8008b28:	930f      	str	r3, [sp, #60]	; 0x3c
 8008b2a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8008b2e:	2b30      	cmp	r3, #48	; 0x30
 8008b30:	d0f8      	beq.n	8008b24 <_dtoa_r+0x61c>
 8008b32:	46bb      	mov	fp, r7
 8008b34:	e04a      	b.n	8008bcc <_dtoa_r+0x6c4>
 8008b36:	4b06      	ldr	r3, [pc, #24]	; (8008b50 <_dtoa_r+0x648>)
 8008b38:	f7f7 fd68 	bl	800060c <__aeabi_dmul>
 8008b3c:	4680      	mov	r8, r0
 8008b3e:	4689      	mov	r9, r1
 8008b40:	e7bd      	b.n	8008abe <_dtoa_r+0x5b6>
 8008b42:	bf00      	nop
 8008b44:	0800c0e0 	.word	0x0800c0e0
 8008b48:	0800c0b8 	.word	0x0800c0b8
 8008b4c:	3ff00000 	.word	0x3ff00000
 8008b50:	40240000 	.word	0x40240000
 8008b54:	401c0000 	.word	0x401c0000
 8008b58:	40140000 	.word	0x40140000
 8008b5c:	3fe00000 	.word	0x3fe00000
 8008b60:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8008b64:	9d00      	ldr	r5, [sp, #0]
 8008b66:	4642      	mov	r2, r8
 8008b68:	464b      	mov	r3, r9
 8008b6a:	4630      	mov	r0, r6
 8008b6c:	4639      	mov	r1, r7
 8008b6e:	f7f7 fe77 	bl	8000860 <__aeabi_ddiv>
 8008b72:	f7f7 fffb 	bl	8000b6c <__aeabi_d2iz>
 8008b76:	9001      	str	r0, [sp, #4]
 8008b78:	f7f7 fcde 	bl	8000538 <__aeabi_i2d>
 8008b7c:	4642      	mov	r2, r8
 8008b7e:	464b      	mov	r3, r9
 8008b80:	f7f7 fd44 	bl	800060c <__aeabi_dmul>
 8008b84:	4602      	mov	r2, r0
 8008b86:	460b      	mov	r3, r1
 8008b88:	4630      	mov	r0, r6
 8008b8a:	4639      	mov	r1, r7
 8008b8c:	f7f7 fb86 	bl	800029c <__aeabi_dsub>
 8008b90:	9e01      	ldr	r6, [sp, #4]
 8008b92:	9f04      	ldr	r7, [sp, #16]
 8008b94:	3630      	adds	r6, #48	; 0x30
 8008b96:	f805 6b01 	strb.w	r6, [r5], #1
 8008b9a:	9e00      	ldr	r6, [sp, #0]
 8008b9c:	1bae      	subs	r6, r5, r6
 8008b9e:	42b7      	cmp	r7, r6
 8008ba0:	4602      	mov	r2, r0
 8008ba2:	460b      	mov	r3, r1
 8008ba4:	d134      	bne.n	8008c10 <_dtoa_r+0x708>
 8008ba6:	f7f7 fb7b 	bl	80002a0 <__adddf3>
 8008baa:	4642      	mov	r2, r8
 8008bac:	464b      	mov	r3, r9
 8008bae:	4606      	mov	r6, r0
 8008bb0:	460f      	mov	r7, r1
 8008bb2:	f7f7 ffbb 	bl	8000b2c <__aeabi_dcmpgt>
 8008bb6:	b9c8      	cbnz	r0, 8008bec <_dtoa_r+0x6e4>
 8008bb8:	4642      	mov	r2, r8
 8008bba:	464b      	mov	r3, r9
 8008bbc:	4630      	mov	r0, r6
 8008bbe:	4639      	mov	r1, r7
 8008bc0:	f7f7 ff8c 	bl	8000adc <__aeabi_dcmpeq>
 8008bc4:	b110      	cbz	r0, 8008bcc <_dtoa_r+0x6c4>
 8008bc6:	9b01      	ldr	r3, [sp, #4]
 8008bc8:	07db      	lsls	r3, r3, #31
 8008bca:	d40f      	bmi.n	8008bec <_dtoa_r+0x6e4>
 8008bcc:	4651      	mov	r1, sl
 8008bce:	4620      	mov	r0, r4
 8008bd0:	f001 fa34 	bl	800a03c <_Bfree>
 8008bd4:	2300      	movs	r3, #0
 8008bd6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8008bd8:	702b      	strb	r3, [r5, #0]
 8008bda:	f10b 0301 	add.w	r3, fp, #1
 8008bde:	6013      	str	r3, [r2, #0]
 8008be0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8008be2:	2b00      	cmp	r3, #0
 8008be4:	f43f ace2 	beq.w	80085ac <_dtoa_r+0xa4>
 8008be8:	601d      	str	r5, [r3, #0]
 8008bea:	e4df      	b.n	80085ac <_dtoa_r+0xa4>
 8008bec:	465f      	mov	r7, fp
 8008bee:	462b      	mov	r3, r5
 8008bf0:	461d      	mov	r5, r3
 8008bf2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8008bf6:	2a39      	cmp	r2, #57	; 0x39
 8008bf8:	d106      	bne.n	8008c08 <_dtoa_r+0x700>
 8008bfa:	9a00      	ldr	r2, [sp, #0]
 8008bfc:	429a      	cmp	r2, r3
 8008bfe:	d1f7      	bne.n	8008bf0 <_dtoa_r+0x6e8>
 8008c00:	9900      	ldr	r1, [sp, #0]
 8008c02:	2230      	movs	r2, #48	; 0x30
 8008c04:	3701      	adds	r7, #1
 8008c06:	700a      	strb	r2, [r1, #0]
 8008c08:	781a      	ldrb	r2, [r3, #0]
 8008c0a:	3201      	adds	r2, #1
 8008c0c:	701a      	strb	r2, [r3, #0]
 8008c0e:	e790      	b.n	8008b32 <_dtoa_r+0x62a>
 8008c10:	4ba3      	ldr	r3, [pc, #652]	; (8008ea0 <_dtoa_r+0x998>)
 8008c12:	2200      	movs	r2, #0
 8008c14:	f7f7 fcfa 	bl	800060c <__aeabi_dmul>
 8008c18:	2200      	movs	r2, #0
 8008c1a:	2300      	movs	r3, #0
 8008c1c:	4606      	mov	r6, r0
 8008c1e:	460f      	mov	r7, r1
 8008c20:	f7f7 ff5c 	bl	8000adc <__aeabi_dcmpeq>
 8008c24:	2800      	cmp	r0, #0
 8008c26:	d09e      	beq.n	8008b66 <_dtoa_r+0x65e>
 8008c28:	e7d0      	b.n	8008bcc <_dtoa_r+0x6c4>
 8008c2a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008c2c:	2a00      	cmp	r2, #0
 8008c2e:	f000 80ca 	beq.w	8008dc6 <_dtoa_r+0x8be>
 8008c32:	9a07      	ldr	r2, [sp, #28]
 8008c34:	2a01      	cmp	r2, #1
 8008c36:	f300 80ad 	bgt.w	8008d94 <_dtoa_r+0x88c>
 8008c3a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8008c3c:	2a00      	cmp	r2, #0
 8008c3e:	f000 80a5 	beq.w	8008d8c <_dtoa_r+0x884>
 8008c42:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8008c46:	9e08      	ldr	r6, [sp, #32]
 8008c48:	9d05      	ldr	r5, [sp, #20]
 8008c4a:	9a05      	ldr	r2, [sp, #20]
 8008c4c:	441a      	add	r2, r3
 8008c4e:	9205      	str	r2, [sp, #20]
 8008c50:	9a06      	ldr	r2, [sp, #24]
 8008c52:	2101      	movs	r1, #1
 8008c54:	441a      	add	r2, r3
 8008c56:	4620      	mov	r0, r4
 8008c58:	9206      	str	r2, [sp, #24]
 8008c5a:	f001 faef 	bl	800a23c <__i2b>
 8008c5e:	4607      	mov	r7, r0
 8008c60:	b165      	cbz	r5, 8008c7c <_dtoa_r+0x774>
 8008c62:	9b06      	ldr	r3, [sp, #24]
 8008c64:	2b00      	cmp	r3, #0
 8008c66:	dd09      	ble.n	8008c7c <_dtoa_r+0x774>
 8008c68:	42ab      	cmp	r3, r5
 8008c6a:	9a05      	ldr	r2, [sp, #20]
 8008c6c:	bfa8      	it	ge
 8008c6e:	462b      	movge	r3, r5
 8008c70:	1ad2      	subs	r2, r2, r3
 8008c72:	9205      	str	r2, [sp, #20]
 8008c74:	9a06      	ldr	r2, [sp, #24]
 8008c76:	1aed      	subs	r5, r5, r3
 8008c78:	1ad3      	subs	r3, r2, r3
 8008c7a:	9306      	str	r3, [sp, #24]
 8008c7c:	9b08      	ldr	r3, [sp, #32]
 8008c7e:	b1f3      	cbz	r3, 8008cbe <_dtoa_r+0x7b6>
 8008c80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008c82:	2b00      	cmp	r3, #0
 8008c84:	f000 80a3 	beq.w	8008dce <_dtoa_r+0x8c6>
 8008c88:	2e00      	cmp	r6, #0
 8008c8a:	dd10      	ble.n	8008cae <_dtoa_r+0x7a6>
 8008c8c:	4639      	mov	r1, r7
 8008c8e:	4632      	mov	r2, r6
 8008c90:	4620      	mov	r0, r4
 8008c92:	f001 fb93 	bl	800a3bc <__pow5mult>
 8008c96:	4652      	mov	r2, sl
 8008c98:	4601      	mov	r1, r0
 8008c9a:	4607      	mov	r7, r0
 8008c9c:	4620      	mov	r0, r4
 8008c9e:	f001 fae3 	bl	800a268 <__multiply>
 8008ca2:	4651      	mov	r1, sl
 8008ca4:	4680      	mov	r8, r0
 8008ca6:	4620      	mov	r0, r4
 8008ca8:	f001 f9c8 	bl	800a03c <_Bfree>
 8008cac:	46c2      	mov	sl, r8
 8008cae:	9b08      	ldr	r3, [sp, #32]
 8008cb0:	1b9a      	subs	r2, r3, r6
 8008cb2:	d004      	beq.n	8008cbe <_dtoa_r+0x7b6>
 8008cb4:	4651      	mov	r1, sl
 8008cb6:	4620      	mov	r0, r4
 8008cb8:	f001 fb80 	bl	800a3bc <__pow5mult>
 8008cbc:	4682      	mov	sl, r0
 8008cbe:	2101      	movs	r1, #1
 8008cc0:	4620      	mov	r0, r4
 8008cc2:	f001 fabb 	bl	800a23c <__i2b>
 8008cc6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008cc8:	2b00      	cmp	r3, #0
 8008cca:	4606      	mov	r6, r0
 8008ccc:	f340 8081 	ble.w	8008dd2 <_dtoa_r+0x8ca>
 8008cd0:	461a      	mov	r2, r3
 8008cd2:	4601      	mov	r1, r0
 8008cd4:	4620      	mov	r0, r4
 8008cd6:	f001 fb71 	bl	800a3bc <__pow5mult>
 8008cda:	9b07      	ldr	r3, [sp, #28]
 8008cdc:	2b01      	cmp	r3, #1
 8008cde:	4606      	mov	r6, r0
 8008ce0:	dd7a      	ble.n	8008dd8 <_dtoa_r+0x8d0>
 8008ce2:	f04f 0800 	mov.w	r8, #0
 8008ce6:	6933      	ldr	r3, [r6, #16]
 8008ce8:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8008cec:	6918      	ldr	r0, [r3, #16]
 8008cee:	f001 fa57 	bl	800a1a0 <__hi0bits>
 8008cf2:	f1c0 0020 	rsb	r0, r0, #32
 8008cf6:	9b06      	ldr	r3, [sp, #24]
 8008cf8:	4418      	add	r0, r3
 8008cfa:	f010 001f 	ands.w	r0, r0, #31
 8008cfe:	f000 8094 	beq.w	8008e2a <_dtoa_r+0x922>
 8008d02:	f1c0 0320 	rsb	r3, r0, #32
 8008d06:	2b04      	cmp	r3, #4
 8008d08:	f340 8085 	ble.w	8008e16 <_dtoa_r+0x90e>
 8008d0c:	9b05      	ldr	r3, [sp, #20]
 8008d0e:	f1c0 001c 	rsb	r0, r0, #28
 8008d12:	4403      	add	r3, r0
 8008d14:	9305      	str	r3, [sp, #20]
 8008d16:	9b06      	ldr	r3, [sp, #24]
 8008d18:	4403      	add	r3, r0
 8008d1a:	4405      	add	r5, r0
 8008d1c:	9306      	str	r3, [sp, #24]
 8008d1e:	9b05      	ldr	r3, [sp, #20]
 8008d20:	2b00      	cmp	r3, #0
 8008d22:	dd05      	ble.n	8008d30 <_dtoa_r+0x828>
 8008d24:	4651      	mov	r1, sl
 8008d26:	461a      	mov	r2, r3
 8008d28:	4620      	mov	r0, r4
 8008d2a:	f001 fba1 	bl	800a470 <__lshift>
 8008d2e:	4682      	mov	sl, r0
 8008d30:	9b06      	ldr	r3, [sp, #24]
 8008d32:	2b00      	cmp	r3, #0
 8008d34:	dd05      	ble.n	8008d42 <_dtoa_r+0x83a>
 8008d36:	4631      	mov	r1, r6
 8008d38:	461a      	mov	r2, r3
 8008d3a:	4620      	mov	r0, r4
 8008d3c:	f001 fb98 	bl	800a470 <__lshift>
 8008d40:	4606      	mov	r6, r0
 8008d42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008d44:	2b00      	cmp	r3, #0
 8008d46:	d072      	beq.n	8008e2e <_dtoa_r+0x926>
 8008d48:	4631      	mov	r1, r6
 8008d4a:	4650      	mov	r0, sl
 8008d4c:	f001 fbfc 	bl	800a548 <__mcmp>
 8008d50:	2800      	cmp	r0, #0
 8008d52:	da6c      	bge.n	8008e2e <_dtoa_r+0x926>
 8008d54:	2300      	movs	r3, #0
 8008d56:	4651      	mov	r1, sl
 8008d58:	220a      	movs	r2, #10
 8008d5a:	4620      	mov	r0, r4
 8008d5c:	f001 f990 	bl	800a080 <__multadd>
 8008d60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008d62:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8008d66:	4682      	mov	sl, r0
 8008d68:	2b00      	cmp	r3, #0
 8008d6a:	f000 81b0 	beq.w	80090ce <_dtoa_r+0xbc6>
 8008d6e:	2300      	movs	r3, #0
 8008d70:	4639      	mov	r1, r7
 8008d72:	220a      	movs	r2, #10
 8008d74:	4620      	mov	r0, r4
 8008d76:	f001 f983 	bl	800a080 <__multadd>
 8008d7a:	9b01      	ldr	r3, [sp, #4]
 8008d7c:	2b00      	cmp	r3, #0
 8008d7e:	4607      	mov	r7, r0
 8008d80:	f300 8096 	bgt.w	8008eb0 <_dtoa_r+0x9a8>
 8008d84:	9b07      	ldr	r3, [sp, #28]
 8008d86:	2b02      	cmp	r3, #2
 8008d88:	dc59      	bgt.n	8008e3e <_dtoa_r+0x936>
 8008d8a:	e091      	b.n	8008eb0 <_dtoa_r+0x9a8>
 8008d8c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008d8e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8008d92:	e758      	b.n	8008c46 <_dtoa_r+0x73e>
 8008d94:	9b04      	ldr	r3, [sp, #16]
 8008d96:	1e5e      	subs	r6, r3, #1
 8008d98:	9b08      	ldr	r3, [sp, #32]
 8008d9a:	42b3      	cmp	r3, r6
 8008d9c:	bfbf      	itttt	lt
 8008d9e:	9b08      	ldrlt	r3, [sp, #32]
 8008da0:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 8008da2:	9608      	strlt	r6, [sp, #32]
 8008da4:	1af3      	sublt	r3, r6, r3
 8008da6:	bfb4      	ite	lt
 8008da8:	18d2      	addlt	r2, r2, r3
 8008daa:	1b9e      	subge	r6, r3, r6
 8008dac:	9b04      	ldr	r3, [sp, #16]
 8008dae:	bfbc      	itt	lt
 8008db0:	920b      	strlt	r2, [sp, #44]	; 0x2c
 8008db2:	2600      	movlt	r6, #0
 8008db4:	2b00      	cmp	r3, #0
 8008db6:	bfb7      	itett	lt
 8008db8:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 8008dbc:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 8008dc0:	1a9d      	sublt	r5, r3, r2
 8008dc2:	2300      	movlt	r3, #0
 8008dc4:	e741      	b.n	8008c4a <_dtoa_r+0x742>
 8008dc6:	9e08      	ldr	r6, [sp, #32]
 8008dc8:	9d05      	ldr	r5, [sp, #20]
 8008dca:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8008dcc:	e748      	b.n	8008c60 <_dtoa_r+0x758>
 8008dce:	9a08      	ldr	r2, [sp, #32]
 8008dd0:	e770      	b.n	8008cb4 <_dtoa_r+0x7ac>
 8008dd2:	9b07      	ldr	r3, [sp, #28]
 8008dd4:	2b01      	cmp	r3, #1
 8008dd6:	dc19      	bgt.n	8008e0c <_dtoa_r+0x904>
 8008dd8:	9b02      	ldr	r3, [sp, #8]
 8008dda:	b9bb      	cbnz	r3, 8008e0c <_dtoa_r+0x904>
 8008ddc:	9b03      	ldr	r3, [sp, #12]
 8008dde:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8008de2:	b99b      	cbnz	r3, 8008e0c <_dtoa_r+0x904>
 8008de4:	9b03      	ldr	r3, [sp, #12]
 8008de6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8008dea:	0d1b      	lsrs	r3, r3, #20
 8008dec:	051b      	lsls	r3, r3, #20
 8008dee:	b183      	cbz	r3, 8008e12 <_dtoa_r+0x90a>
 8008df0:	9b05      	ldr	r3, [sp, #20]
 8008df2:	3301      	adds	r3, #1
 8008df4:	9305      	str	r3, [sp, #20]
 8008df6:	9b06      	ldr	r3, [sp, #24]
 8008df8:	3301      	adds	r3, #1
 8008dfa:	9306      	str	r3, [sp, #24]
 8008dfc:	f04f 0801 	mov.w	r8, #1
 8008e00:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008e02:	2b00      	cmp	r3, #0
 8008e04:	f47f af6f 	bne.w	8008ce6 <_dtoa_r+0x7de>
 8008e08:	2001      	movs	r0, #1
 8008e0a:	e774      	b.n	8008cf6 <_dtoa_r+0x7ee>
 8008e0c:	f04f 0800 	mov.w	r8, #0
 8008e10:	e7f6      	b.n	8008e00 <_dtoa_r+0x8f8>
 8008e12:	4698      	mov	r8, r3
 8008e14:	e7f4      	b.n	8008e00 <_dtoa_r+0x8f8>
 8008e16:	d082      	beq.n	8008d1e <_dtoa_r+0x816>
 8008e18:	9a05      	ldr	r2, [sp, #20]
 8008e1a:	331c      	adds	r3, #28
 8008e1c:	441a      	add	r2, r3
 8008e1e:	9205      	str	r2, [sp, #20]
 8008e20:	9a06      	ldr	r2, [sp, #24]
 8008e22:	441a      	add	r2, r3
 8008e24:	441d      	add	r5, r3
 8008e26:	9206      	str	r2, [sp, #24]
 8008e28:	e779      	b.n	8008d1e <_dtoa_r+0x816>
 8008e2a:	4603      	mov	r3, r0
 8008e2c:	e7f4      	b.n	8008e18 <_dtoa_r+0x910>
 8008e2e:	9b04      	ldr	r3, [sp, #16]
 8008e30:	2b00      	cmp	r3, #0
 8008e32:	dc37      	bgt.n	8008ea4 <_dtoa_r+0x99c>
 8008e34:	9b07      	ldr	r3, [sp, #28]
 8008e36:	2b02      	cmp	r3, #2
 8008e38:	dd34      	ble.n	8008ea4 <_dtoa_r+0x99c>
 8008e3a:	9b04      	ldr	r3, [sp, #16]
 8008e3c:	9301      	str	r3, [sp, #4]
 8008e3e:	9b01      	ldr	r3, [sp, #4]
 8008e40:	b963      	cbnz	r3, 8008e5c <_dtoa_r+0x954>
 8008e42:	4631      	mov	r1, r6
 8008e44:	2205      	movs	r2, #5
 8008e46:	4620      	mov	r0, r4
 8008e48:	f001 f91a 	bl	800a080 <__multadd>
 8008e4c:	4601      	mov	r1, r0
 8008e4e:	4606      	mov	r6, r0
 8008e50:	4650      	mov	r0, sl
 8008e52:	f001 fb79 	bl	800a548 <__mcmp>
 8008e56:	2800      	cmp	r0, #0
 8008e58:	f73f adbb 	bgt.w	80089d2 <_dtoa_r+0x4ca>
 8008e5c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008e5e:	9d00      	ldr	r5, [sp, #0]
 8008e60:	ea6f 0b03 	mvn.w	fp, r3
 8008e64:	f04f 0800 	mov.w	r8, #0
 8008e68:	4631      	mov	r1, r6
 8008e6a:	4620      	mov	r0, r4
 8008e6c:	f001 f8e6 	bl	800a03c <_Bfree>
 8008e70:	2f00      	cmp	r7, #0
 8008e72:	f43f aeab 	beq.w	8008bcc <_dtoa_r+0x6c4>
 8008e76:	f1b8 0f00 	cmp.w	r8, #0
 8008e7a:	d005      	beq.n	8008e88 <_dtoa_r+0x980>
 8008e7c:	45b8      	cmp	r8, r7
 8008e7e:	d003      	beq.n	8008e88 <_dtoa_r+0x980>
 8008e80:	4641      	mov	r1, r8
 8008e82:	4620      	mov	r0, r4
 8008e84:	f001 f8da 	bl	800a03c <_Bfree>
 8008e88:	4639      	mov	r1, r7
 8008e8a:	4620      	mov	r0, r4
 8008e8c:	f001 f8d6 	bl	800a03c <_Bfree>
 8008e90:	e69c      	b.n	8008bcc <_dtoa_r+0x6c4>
 8008e92:	2600      	movs	r6, #0
 8008e94:	4637      	mov	r7, r6
 8008e96:	e7e1      	b.n	8008e5c <_dtoa_r+0x954>
 8008e98:	46bb      	mov	fp, r7
 8008e9a:	4637      	mov	r7, r6
 8008e9c:	e599      	b.n	80089d2 <_dtoa_r+0x4ca>
 8008e9e:	bf00      	nop
 8008ea0:	40240000 	.word	0x40240000
 8008ea4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008ea6:	2b00      	cmp	r3, #0
 8008ea8:	f000 80c8 	beq.w	800903c <_dtoa_r+0xb34>
 8008eac:	9b04      	ldr	r3, [sp, #16]
 8008eae:	9301      	str	r3, [sp, #4]
 8008eb0:	2d00      	cmp	r5, #0
 8008eb2:	dd05      	ble.n	8008ec0 <_dtoa_r+0x9b8>
 8008eb4:	4639      	mov	r1, r7
 8008eb6:	462a      	mov	r2, r5
 8008eb8:	4620      	mov	r0, r4
 8008eba:	f001 fad9 	bl	800a470 <__lshift>
 8008ebe:	4607      	mov	r7, r0
 8008ec0:	f1b8 0f00 	cmp.w	r8, #0
 8008ec4:	d05b      	beq.n	8008f7e <_dtoa_r+0xa76>
 8008ec6:	6879      	ldr	r1, [r7, #4]
 8008ec8:	4620      	mov	r0, r4
 8008eca:	f001 f877 	bl	8009fbc <_Balloc>
 8008ece:	4605      	mov	r5, r0
 8008ed0:	b928      	cbnz	r0, 8008ede <_dtoa_r+0x9d6>
 8008ed2:	4b83      	ldr	r3, [pc, #524]	; (80090e0 <_dtoa_r+0xbd8>)
 8008ed4:	4602      	mov	r2, r0
 8008ed6:	f240 21ef 	movw	r1, #751	; 0x2ef
 8008eda:	f7ff bb2e 	b.w	800853a <_dtoa_r+0x32>
 8008ede:	693a      	ldr	r2, [r7, #16]
 8008ee0:	3202      	adds	r2, #2
 8008ee2:	0092      	lsls	r2, r2, #2
 8008ee4:	f107 010c 	add.w	r1, r7, #12
 8008ee8:	300c      	adds	r0, #12
 8008eea:	f7ff fa4d 	bl	8008388 <memcpy>
 8008eee:	2201      	movs	r2, #1
 8008ef0:	4629      	mov	r1, r5
 8008ef2:	4620      	mov	r0, r4
 8008ef4:	f001 fabc 	bl	800a470 <__lshift>
 8008ef8:	9b00      	ldr	r3, [sp, #0]
 8008efa:	3301      	adds	r3, #1
 8008efc:	9304      	str	r3, [sp, #16]
 8008efe:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008f02:	4413      	add	r3, r2
 8008f04:	9308      	str	r3, [sp, #32]
 8008f06:	9b02      	ldr	r3, [sp, #8]
 8008f08:	f003 0301 	and.w	r3, r3, #1
 8008f0c:	46b8      	mov	r8, r7
 8008f0e:	9306      	str	r3, [sp, #24]
 8008f10:	4607      	mov	r7, r0
 8008f12:	9b04      	ldr	r3, [sp, #16]
 8008f14:	4631      	mov	r1, r6
 8008f16:	3b01      	subs	r3, #1
 8008f18:	4650      	mov	r0, sl
 8008f1a:	9301      	str	r3, [sp, #4]
 8008f1c:	f7ff fa6a 	bl	80083f4 <quorem>
 8008f20:	4641      	mov	r1, r8
 8008f22:	9002      	str	r0, [sp, #8]
 8008f24:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8008f28:	4650      	mov	r0, sl
 8008f2a:	f001 fb0d 	bl	800a548 <__mcmp>
 8008f2e:	463a      	mov	r2, r7
 8008f30:	9005      	str	r0, [sp, #20]
 8008f32:	4631      	mov	r1, r6
 8008f34:	4620      	mov	r0, r4
 8008f36:	f001 fb23 	bl	800a580 <__mdiff>
 8008f3a:	68c2      	ldr	r2, [r0, #12]
 8008f3c:	4605      	mov	r5, r0
 8008f3e:	bb02      	cbnz	r2, 8008f82 <_dtoa_r+0xa7a>
 8008f40:	4601      	mov	r1, r0
 8008f42:	4650      	mov	r0, sl
 8008f44:	f001 fb00 	bl	800a548 <__mcmp>
 8008f48:	4602      	mov	r2, r0
 8008f4a:	4629      	mov	r1, r5
 8008f4c:	4620      	mov	r0, r4
 8008f4e:	9209      	str	r2, [sp, #36]	; 0x24
 8008f50:	f001 f874 	bl	800a03c <_Bfree>
 8008f54:	9b07      	ldr	r3, [sp, #28]
 8008f56:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008f58:	9d04      	ldr	r5, [sp, #16]
 8008f5a:	ea43 0102 	orr.w	r1, r3, r2
 8008f5e:	9b06      	ldr	r3, [sp, #24]
 8008f60:	4319      	orrs	r1, r3
 8008f62:	d110      	bne.n	8008f86 <_dtoa_r+0xa7e>
 8008f64:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8008f68:	d029      	beq.n	8008fbe <_dtoa_r+0xab6>
 8008f6a:	9b05      	ldr	r3, [sp, #20]
 8008f6c:	2b00      	cmp	r3, #0
 8008f6e:	dd02      	ble.n	8008f76 <_dtoa_r+0xa6e>
 8008f70:	9b02      	ldr	r3, [sp, #8]
 8008f72:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8008f76:	9b01      	ldr	r3, [sp, #4]
 8008f78:	f883 9000 	strb.w	r9, [r3]
 8008f7c:	e774      	b.n	8008e68 <_dtoa_r+0x960>
 8008f7e:	4638      	mov	r0, r7
 8008f80:	e7ba      	b.n	8008ef8 <_dtoa_r+0x9f0>
 8008f82:	2201      	movs	r2, #1
 8008f84:	e7e1      	b.n	8008f4a <_dtoa_r+0xa42>
 8008f86:	9b05      	ldr	r3, [sp, #20]
 8008f88:	2b00      	cmp	r3, #0
 8008f8a:	db04      	blt.n	8008f96 <_dtoa_r+0xa8e>
 8008f8c:	9907      	ldr	r1, [sp, #28]
 8008f8e:	430b      	orrs	r3, r1
 8008f90:	9906      	ldr	r1, [sp, #24]
 8008f92:	430b      	orrs	r3, r1
 8008f94:	d120      	bne.n	8008fd8 <_dtoa_r+0xad0>
 8008f96:	2a00      	cmp	r2, #0
 8008f98:	dded      	ble.n	8008f76 <_dtoa_r+0xa6e>
 8008f9a:	4651      	mov	r1, sl
 8008f9c:	2201      	movs	r2, #1
 8008f9e:	4620      	mov	r0, r4
 8008fa0:	f001 fa66 	bl	800a470 <__lshift>
 8008fa4:	4631      	mov	r1, r6
 8008fa6:	4682      	mov	sl, r0
 8008fa8:	f001 face 	bl	800a548 <__mcmp>
 8008fac:	2800      	cmp	r0, #0
 8008fae:	dc03      	bgt.n	8008fb8 <_dtoa_r+0xab0>
 8008fb0:	d1e1      	bne.n	8008f76 <_dtoa_r+0xa6e>
 8008fb2:	f019 0f01 	tst.w	r9, #1
 8008fb6:	d0de      	beq.n	8008f76 <_dtoa_r+0xa6e>
 8008fb8:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8008fbc:	d1d8      	bne.n	8008f70 <_dtoa_r+0xa68>
 8008fbe:	9a01      	ldr	r2, [sp, #4]
 8008fc0:	2339      	movs	r3, #57	; 0x39
 8008fc2:	7013      	strb	r3, [r2, #0]
 8008fc4:	462b      	mov	r3, r5
 8008fc6:	461d      	mov	r5, r3
 8008fc8:	3b01      	subs	r3, #1
 8008fca:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8008fce:	2a39      	cmp	r2, #57	; 0x39
 8008fd0:	d06c      	beq.n	80090ac <_dtoa_r+0xba4>
 8008fd2:	3201      	adds	r2, #1
 8008fd4:	701a      	strb	r2, [r3, #0]
 8008fd6:	e747      	b.n	8008e68 <_dtoa_r+0x960>
 8008fd8:	2a00      	cmp	r2, #0
 8008fda:	dd07      	ble.n	8008fec <_dtoa_r+0xae4>
 8008fdc:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8008fe0:	d0ed      	beq.n	8008fbe <_dtoa_r+0xab6>
 8008fe2:	9a01      	ldr	r2, [sp, #4]
 8008fe4:	f109 0301 	add.w	r3, r9, #1
 8008fe8:	7013      	strb	r3, [r2, #0]
 8008fea:	e73d      	b.n	8008e68 <_dtoa_r+0x960>
 8008fec:	9b04      	ldr	r3, [sp, #16]
 8008fee:	9a08      	ldr	r2, [sp, #32]
 8008ff0:	f803 9c01 	strb.w	r9, [r3, #-1]
 8008ff4:	4293      	cmp	r3, r2
 8008ff6:	d043      	beq.n	8009080 <_dtoa_r+0xb78>
 8008ff8:	4651      	mov	r1, sl
 8008ffa:	2300      	movs	r3, #0
 8008ffc:	220a      	movs	r2, #10
 8008ffe:	4620      	mov	r0, r4
 8009000:	f001 f83e 	bl	800a080 <__multadd>
 8009004:	45b8      	cmp	r8, r7
 8009006:	4682      	mov	sl, r0
 8009008:	f04f 0300 	mov.w	r3, #0
 800900c:	f04f 020a 	mov.w	r2, #10
 8009010:	4641      	mov	r1, r8
 8009012:	4620      	mov	r0, r4
 8009014:	d107      	bne.n	8009026 <_dtoa_r+0xb1e>
 8009016:	f001 f833 	bl	800a080 <__multadd>
 800901a:	4680      	mov	r8, r0
 800901c:	4607      	mov	r7, r0
 800901e:	9b04      	ldr	r3, [sp, #16]
 8009020:	3301      	adds	r3, #1
 8009022:	9304      	str	r3, [sp, #16]
 8009024:	e775      	b.n	8008f12 <_dtoa_r+0xa0a>
 8009026:	f001 f82b 	bl	800a080 <__multadd>
 800902a:	4639      	mov	r1, r7
 800902c:	4680      	mov	r8, r0
 800902e:	2300      	movs	r3, #0
 8009030:	220a      	movs	r2, #10
 8009032:	4620      	mov	r0, r4
 8009034:	f001 f824 	bl	800a080 <__multadd>
 8009038:	4607      	mov	r7, r0
 800903a:	e7f0      	b.n	800901e <_dtoa_r+0xb16>
 800903c:	9b04      	ldr	r3, [sp, #16]
 800903e:	9301      	str	r3, [sp, #4]
 8009040:	9d00      	ldr	r5, [sp, #0]
 8009042:	4631      	mov	r1, r6
 8009044:	4650      	mov	r0, sl
 8009046:	f7ff f9d5 	bl	80083f4 <quorem>
 800904a:	f100 0930 	add.w	r9, r0, #48	; 0x30
 800904e:	9b00      	ldr	r3, [sp, #0]
 8009050:	f805 9b01 	strb.w	r9, [r5], #1
 8009054:	1aea      	subs	r2, r5, r3
 8009056:	9b01      	ldr	r3, [sp, #4]
 8009058:	4293      	cmp	r3, r2
 800905a:	dd07      	ble.n	800906c <_dtoa_r+0xb64>
 800905c:	4651      	mov	r1, sl
 800905e:	2300      	movs	r3, #0
 8009060:	220a      	movs	r2, #10
 8009062:	4620      	mov	r0, r4
 8009064:	f001 f80c 	bl	800a080 <__multadd>
 8009068:	4682      	mov	sl, r0
 800906a:	e7ea      	b.n	8009042 <_dtoa_r+0xb3a>
 800906c:	9b01      	ldr	r3, [sp, #4]
 800906e:	2b00      	cmp	r3, #0
 8009070:	bfc8      	it	gt
 8009072:	461d      	movgt	r5, r3
 8009074:	9b00      	ldr	r3, [sp, #0]
 8009076:	bfd8      	it	le
 8009078:	2501      	movle	r5, #1
 800907a:	441d      	add	r5, r3
 800907c:	f04f 0800 	mov.w	r8, #0
 8009080:	4651      	mov	r1, sl
 8009082:	2201      	movs	r2, #1
 8009084:	4620      	mov	r0, r4
 8009086:	f001 f9f3 	bl	800a470 <__lshift>
 800908a:	4631      	mov	r1, r6
 800908c:	4682      	mov	sl, r0
 800908e:	f001 fa5b 	bl	800a548 <__mcmp>
 8009092:	2800      	cmp	r0, #0
 8009094:	dc96      	bgt.n	8008fc4 <_dtoa_r+0xabc>
 8009096:	d102      	bne.n	800909e <_dtoa_r+0xb96>
 8009098:	f019 0f01 	tst.w	r9, #1
 800909c:	d192      	bne.n	8008fc4 <_dtoa_r+0xabc>
 800909e:	462b      	mov	r3, r5
 80090a0:	461d      	mov	r5, r3
 80090a2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80090a6:	2a30      	cmp	r2, #48	; 0x30
 80090a8:	d0fa      	beq.n	80090a0 <_dtoa_r+0xb98>
 80090aa:	e6dd      	b.n	8008e68 <_dtoa_r+0x960>
 80090ac:	9a00      	ldr	r2, [sp, #0]
 80090ae:	429a      	cmp	r2, r3
 80090b0:	d189      	bne.n	8008fc6 <_dtoa_r+0xabe>
 80090b2:	f10b 0b01 	add.w	fp, fp, #1
 80090b6:	2331      	movs	r3, #49	; 0x31
 80090b8:	e796      	b.n	8008fe8 <_dtoa_r+0xae0>
 80090ba:	4b0a      	ldr	r3, [pc, #40]	; (80090e4 <_dtoa_r+0xbdc>)
 80090bc:	f7ff ba99 	b.w	80085f2 <_dtoa_r+0xea>
 80090c0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80090c2:	2b00      	cmp	r3, #0
 80090c4:	f47f aa6d 	bne.w	80085a2 <_dtoa_r+0x9a>
 80090c8:	4b07      	ldr	r3, [pc, #28]	; (80090e8 <_dtoa_r+0xbe0>)
 80090ca:	f7ff ba92 	b.w	80085f2 <_dtoa_r+0xea>
 80090ce:	9b01      	ldr	r3, [sp, #4]
 80090d0:	2b00      	cmp	r3, #0
 80090d2:	dcb5      	bgt.n	8009040 <_dtoa_r+0xb38>
 80090d4:	9b07      	ldr	r3, [sp, #28]
 80090d6:	2b02      	cmp	r3, #2
 80090d8:	f73f aeb1 	bgt.w	8008e3e <_dtoa_r+0x936>
 80090dc:	e7b0      	b.n	8009040 <_dtoa_r+0xb38>
 80090de:	bf00      	nop
 80090e0:	0800bfd8 	.word	0x0800bfd8
 80090e4:	0800bd20 	.word	0x0800bd20
 80090e8:	0800bf73 	.word	0x0800bf73

080090ec <rshift>:
 80090ec:	6903      	ldr	r3, [r0, #16]
 80090ee:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 80090f2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80090f6:	ea4f 1261 	mov.w	r2, r1, asr #5
 80090fa:	f100 0414 	add.w	r4, r0, #20
 80090fe:	dd45      	ble.n	800918c <rshift+0xa0>
 8009100:	f011 011f 	ands.w	r1, r1, #31
 8009104:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8009108:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800910c:	d10c      	bne.n	8009128 <rshift+0x3c>
 800910e:	f100 0710 	add.w	r7, r0, #16
 8009112:	4629      	mov	r1, r5
 8009114:	42b1      	cmp	r1, r6
 8009116:	d334      	bcc.n	8009182 <rshift+0x96>
 8009118:	1a9b      	subs	r3, r3, r2
 800911a:	009b      	lsls	r3, r3, #2
 800911c:	1eea      	subs	r2, r5, #3
 800911e:	4296      	cmp	r6, r2
 8009120:	bf38      	it	cc
 8009122:	2300      	movcc	r3, #0
 8009124:	4423      	add	r3, r4
 8009126:	e015      	b.n	8009154 <rshift+0x68>
 8009128:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800912c:	f1c1 0820 	rsb	r8, r1, #32
 8009130:	40cf      	lsrs	r7, r1
 8009132:	f105 0e04 	add.w	lr, r5, #4
 8009136:	46a1      	mov	r9, r4
 8009138:	4576      	cmp	r6, lr
 800913a:	46f4      	mov	ip, lr
 800913c:	d815      	bhi.n	800916a <rshift+0x7e>
 800913e:	1a9a      	subs	r2, r3, r2
 8009140:	0092      	lsls	r2, r2, #2
 8009142:	3a04      	subs	r2, #4
 8009144:	3501      	adds	r5, #1
 8009146:	42ae      	cmp	r6, r5
 8009148:	bf38      	it	cc
 800914a:	2200      	movcc	r2, #0
 800914c:	18a3      	adds	r3, r4, r2
 800914e:	50a7      	str	r7, [r4, r2]
 8009150:	b107      	cbz	r7, 8009154 <rshift+0x68>
 8009152:	3304      	adds	r3, #4
 8009154:	1b1a      	subs	r2, r3, r4
 8009156:	42a3      	cmp	r3, r4
 8009158:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800915c:	bf08      	it	eq
 800915e:	2300      	moveq	r3, #0
 8009160:	6102      	str	r2, [r0, #16]
 8009162:	bf08      	it	eq
 8009164:	6143      	streq	r3, [r0, #20]
 8009166:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800916a:	f8dc c000 	ldr.w	ip, [ip]
 800916e:	fa0c fc08 	lsl.w	ip, ip, r8
 8009172:	ea4c 0707 	orr.w	r7, ip, r7
 8009176:	f849 7b04 	str.w	r7, [r9], #4
 800917a:	f85e 7b04 	ldr.w	r7, [lr], #4
 800917e:	40cf      	lsrs	r7, r1
 8009180:	e7da      	b.n	8009138 <rshift+0x4c>
 8009182:	f851 cb04 	ldr.w	ip, [r1], #4
 8009186:	f847 cf04 	str.w	ip, [r7, #4]!
 800918a:	e7c3      	b.n	8009114 <rshift+0x28>
 800918c:	4623      	mov	r3, r4
 800918e:	e7e1      	b.n	8009154 <rshift+0x68>

08009190 <__hexdig_fun>:
 8009190:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8009194:	2b09      	cmp	r3, #9
 8009196:	d802      	bhi.n	800919e <__hexdig_fun+0xe>
 8009198:	3820      	subs	r0, #32
 800919a:	b2c0      	uxtb	r0, r0
 800919c:	4770      	bx	lr
 800919e:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 80091a2:	2b05      	cmp	r3, #5
 80091a4:	d801      	bhi.n	80091aa <__hexdig_fun+0x1a>
 80091a6:	3847      	subs	r0, #71	; 0x47
 80091a8:	e7f7      	b.n	800919a <__hexdig_fun+0xa>
 80091aa:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 80091ae:	2b05      	cmp	r3, #5
 80091b0:	d801      	bhi.n	80091b6 <__hexdig_fun+0x26>
 80091b2:	3827      	subs	r0, #39	; 0x27
 80091b4:	e7f1      	b.n	800919a <__hexdig_fun+0xa>
 80091b6:	2000      	movs	r0, #0
 80091b8:	4770      	bx	lr
	...

080091bc <__gethex>:
 80091bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80091c0:	4617      	mov	r7, r2
 80091c2:	680a      	ldr	r2, [r1, #0]
 80091c4:	b085      	sub	sp, #20
 80091c6:	f102 0b02 	add.w	fp, r2, #2
 80091ca:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 80091ce:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 80091d2:	4681      	mov	r9, r0
 80091d4:	468a      	mov	sl, r1
 80091d6:	9302      	str	r3, [sp, #8]
 80091d8:	32fe      	adds	r2, #254	; 0xfe
 80091da:	eb02 030b 	add.w	r3, r2, fp
 80091de:	46d8      	mov	r8, fp
 80091e0:	f81b 0b01 	ldrb.w	r0, [fp], #1
 80091e4:	9301      	str	r3, [sp, #4]
 80091e6:	2830      	cmp	r0, #48	; 0x30
 80091e8:	d0f7      	beq.n	80091da <__gethex+0x1e>
 80091ea:	f7ff ffd1 	bl	8009190 <__hexdig_fun>
 80091ee:	4604      	mov	r4, r0
 80091f0:	2800      	cmp	r0, #0
 80091f2:	d138      	bne.n	8009266 <__gethex+0xaa>
 80091f4:	49a7      	ldr	r1, [pc, #668]	; (8009494 <__gethex+0x2d8>)
 80091f6:	2201      	movs	r2, #1
 80091f8:	4640      	mov	r0, r8
 80091fa:	f7ff f80b 	bl	8008214 <strncmp>
 80091fe:	4606      	mov	r6, r0
 8009200:	2800      	cmp	r0, #0
 8009202:	d169      	bne.n	80092d8 <__gethex+0x11c>
 8009204:	f898 0001 	ldrb.w	r0, [r8, #1]
 8009208:	465d      	mov	r5, fp
 800920a:	f7ff ffc1 	bl	8009190 <__hexdig_fun>
 800920e:	2800      	cmp	r0, #0
 8009210:	d064      	beq.n	80092dc <__gethex+0x120>
 8009212:	465a      	mov	r2, fp
 8009214:	7810      	ldrb	r0, [r2, #0]
 8009216:	2830      	cmp	r0, #48	; 0x30
 8009218:	4690      	mov	r8, r2
 800921a:	f102 0201 	add.w	r2, r2, #1
 800921e:	d0f9      	beq.n	8009214 <__gethex+0x58>
 8009220:	f7ff ffb6 	bl	8009190 <__hexdig_fun>
 8009224:	2301      	movs	r3, #1
 8009226:	fab0 f480 	clz	r4, r0
 800922a:	0964      	lsrs	r4, r4, #5
 800922c:	465e      	mov	r6, fp
 800922e:	9301      	str	r3, [sp, #4]
 8009230:	4642      	mov	r2, r8
 8009232:	4615      	mov	r5, r2
 8009234:	3201      	adds	r2, #1
 8009236:	7828      	ldrb	r0, [r5, #0]
 8009238:	f7ff ffaa 	bl	8009190 <__hexdig_fun>
 800923c:	2800      	cmp	r0, #0
 800923e:	d1f8      	bne.n	8009232 <__gethex+0x76>
 8009240:	4994      	ldr	r1, [pc, #592]	; (8009494 <__gethex+0x2d8>)
 8009242:	2201      	movs	r2, #1
 8009244:	4628      	mov	r0, r5
 8009246:	f7fe ffe5 	bl	8008214 <strncmp>
 800924a:	b978      	cbnz	r0, 800926c <__gethex+0xb0>
 800924c:	b946      	cbnz	r6, 8009260 <__gethex+0xa4>
 800924e:	1c6e      	adds	r6, r5, #1
 8009250:	4632      	mov	r2, r6
 8009252:	4615      	mov	r5, r2
 8009254:	3201      	adds	r2, #1
 8009256:	7828      	ldrb	r0, [r5, #0]
 8009258:	f7ff ff9a 	bl	8009190 <__hexdig_fun>
 800925c:	2800      	cmp	r0, #0
 800925e:	d1f8      	bne.n	8009252 <__gethex+0x96>
 8009260:	1b73      	subs	r3, r6, r5
 8009262:	009e      	lsls	r6, r3, #2
 8009264:	e004      	b.n	8009270 <__gethex+0xb4>
 8009266:	2400      	movs	r4, #0
 8009268:	4626      	mov	r6, r4
 800926a:	e7e1      	b.n	8009230 <__gethex+0x74>
 800926c:	2e00      	cmp	r6, #0
 800926e:	d1f7      	bne.n	8009260 <__gethex+0xa4>
 8009270:	782b      	ldrb	r3, [r5, #0]
 8009272:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8009276:	2b50      	cmp	r3, #80	; 0x50
 8009278:	d13d      	bne.n	80092f6 <__gethex+0x13a>
 800927a:	786b      	ldrb	r3, [r5, #1]
 800927c:	2b2b      	cmp	r3, #43	; 0x2b
 800927e:	d02f      	beq.n	80092e0 <__gethex+0x124>
 8009280:	2b2d      	cmp	r3, #45	; 0x2d
 8009282:	d031      	beq.n	80092e8 <__gethex+0x12c>
 8009284:	1c69      	adds	r1, r5, #1
 8009286:	f04f 0b00 	mov.w	fp, #0
 800928a:	7808      	ldrb	r0, [r1, #0]
 800928c:	f7ff ff80 	bl	8009190 <__hexdig_fun>
 8009290:	1e42      	subs	r2, r0, #1
 8009292:	b2d2      	uxtb	r2, r2
 8009294:	2a18      	cmp	r2, #24
 8009296:	d82e      	bhi.n	80092f6 <__gethex+0x13a>
 8009298:	f1a0 0210 	sub.w	r2, r0, #16
 800929c:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80092a0:	f7ff ff76 	bl	8009190 <__hexdig_fun>
 80092a4:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 80092a8:	fa5f fc8c 	uxtb.w	ip, ip
 80092ac:	f1bc 0f18 	cmp.w	ip, #24
 80092b0:	d91d      	bls.n	80092ee <__gethex+0x132>
 80092b2:	f1bb 0f00 	cmp.w	fp, #0
 80092b6:	d000      	beq.n	80092ba <__gethex+0xfe>
 80092b8:	4252      	negs	r2, r2
 80092ba:	4416      	add	r6, r2
 80092bc:	f8ca 1000 	str.w	r1, [sl]
 80092c0:	b1dc      	cbz	r4, 80092fa <__gethex+0x13e>
 80092c2:	9b01      	ldr	r3, [sp, #4]
 80092c4:	2b00      	cmp	r3, #0
 80092c6:	bf14      	ite	ne
 80092c8:	f04f 0800 	movne.w	r8, #0
 80092cc:	f04f 0806 	moveq.w	r8, #6
 80092d0:	4640      	mov	r0, r8
 80092d2:	b005      	add	sp, #20
 80092d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80092d8:	4645      	mov	r5, r8
 80092da:	4626      	mov	r6, r4
 80092dc:	2401      	movs	r4, #1
 80092de:	e7c7      	b.n	8009270 <__gethex+0xb4>
 80092e0:	f04f 0b00 	mov.w	fp, #0
 80092e4:	1ca9      	adds	r1, r5, #2
 80092e6:	e7d0      	b.n	800928a <__gethex+0xce>
 80092e8:	f04f 0b01 	mov.w	fp, #1
 80092ec:	e7fa      	b.n	80092e4 <__gethex+0x128>
 80092ee:	230a      	movs	r3, #10
 80092f0:	fb03 0002 	mla	r0, r3, r2, r0
 80092f4:	e7d0      	b.n	8009298 <__gethex+0xdc>
 80092f6:	4629      	mov	r1, r5
 80092f8:	e7e0      	b.n	80092bc <__gethex+0x100>
 80092fa:	eba5 0308 	sub.w	r3, r5, r8
 80092fe:	3b01      	subs	r3, #1
 8009300:	4621      	mov	r1, r4
 8009302:	2b07      	cmp	r3, #7
 8009304:	dc0a      	bgt.n	800931c <__gethex+0x160>
 8009306:	4648      	mov	r0, r9
 8009308:	f000 fe58 	bl	8009fbc <_Balloc>
 800930c:	4604      	mov	r4, r0
 800930e:	b940      	cbnz	r0, 8009322 <__gethex+0x166>
 8009310:	4b61      	ldr	r3, [pc, #388]	; (8009498 <__gethex+0x2dc>)
 8009312:	4602      	mov	r2, r0
 8009314:	21e4      	movs	r1, #228	; 0xe4
 8009316:	4861      	ldr	r0, [pc, #388]	; (800949c <__gethex+0x2e0>)
 8009318:	f7ff f84e 	bl	80083b8 <__assert_func>
 800931c:	3101      	adds	r1, #1
 800931e:	105b      	asrs	r3, r3, #1
 8009320:	e7ef      	b.n	8009302 <__gethex+0x146>
 8009322:	f100 0a14 	add.w	sl, r0, #20
 8009326:	2300      	movs	r3, #0
 8009328:	495a      	ldr	r1, [pc, #360]	; (8009494 <__gethex+0x2d8>)
 800932a:	f8cd a004 	str.w	sl, [sp, #4]
 800932e:	469b      	mov	fp, r3
 8009330:	45a8      	cmp	r8, r5
 8009332:	d342      	bcc.n	80093ba <__gethex+0x1fe>
 8009334:	9801      	ldr	r0, [sp, #4]
 8009336:	f840 bb04 	str.w	fp, [r0], #4
 800933a:	eba0 000a 	sub.w	r0, r0, sl
 800933e:	1080      	asrs	r0, r0, #2
 8009340:	6120      	str	r0, [r4, #16]
 8009342:	ea4f 1840 	mov.w	r8, r0, lsl #5
 8009346:	4658      	mov	r0, fp
 8009348:	f000 ff2a 	bl	800a1a0 <__hi0bits>
 800934c:	683d      	ldr	r5, [r7, #0]
 800934e:	eba8 0000 	sub.w	r0, r8, r0
 8009352:	42a8      	cmp	r0, r5
 8009354:	dd59      	ble.n	800940a <__gethex+0x24e>
 8009356:	eba0 0805 	sub.w	r8, r0, r5
 800935a:	4641      	mov	r1, r8
 800935c:	4620      	mov	r0, r4
 800935e:	f001 fab9 	bl	800a8d4 <__any_on>
 8009362:	4683      	mov	fp, r0
 8009364:	b1b8      	cbz	r0, 8009396 <__gethex+0x1da>
 8009366:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
 800936a:	1159      	asrs	r1, r3, #5
 800936c:	f003 021f 	and.w	r2, r3, #31
 8009370:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8009374:	f04f 0b01 	mov.w	fp, #1
 8009378:	fa0b f202 	lsl.w	r2, fp, r2
 800937c:	420a      	tst	r2, r1
 800937e:	d00a      	beq.n	8009396 <__gethex+0x1da>
 8009380:	455b      	cmp	r3, fp
 8009382:	dd06      	ble.n	8009392 <__gethex+0x1d6>
 8009384:	f1a8 0102 	sub.w	r1, r8, #2
 8009388:	4620      	mov	r0, r4
 800938a:	f001 faa3 	bl	800a8d4 <__any_on>
 800938e:	2800      	cmp	r0, #0
 8009390:	d138      	bne.n	8009404 <__gethex+0x248>
 8009392:	f04f 0b02 	mov.w	fp, #2
 8009396:	4641      	mov	r1, r8
 8009398:	4620      	mov	r0, r4
 800939a:	f7ff fea7 	bl	80090ec <rshift>
 800939e:	4446      	add	r6, r8
 80093a0:	68bb      	ldr	r3, [r7, #8]
 80093a2:	42b3      	cmp	r3, r6
 80093a4:	da41      	bge.n	800942a <__gethex+0x26e>
 80093a6:	4621      	mov	r1, r4
 80093a8:	4648      	mov	r0, r9
 80093aa:	f000 fe47 	bl	800a03c <_Bfree>
 80093ae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80093b0:	2300      	movs	r3, #0
 80093b2:	6013      	str	r3, [r2, #0]
 80093b4:	f04f 08a3 	mov.w	r8, #163	; 0xa3
 80093b8:	e78a      	b.n	80092d0 <__gethex+0x114>
 80093ba:	f815 2d01 	ldrb.w	r2, [r5, #-1]!
 80093be:	2a2e      	cmp	r2, #46	; 0x2e
 80093c0:	d014      	beq.n	80093ec <__gethex+0x230>
 80093c2:	2b20      	cmp	r3, #32
 80093c4:	d106      	bne.n	80093d4 <__gethex+0x218>
 80093c6:	9b01      	ldr	r3, [sp, #4]
 80093c8:	f843 bb04 	str.w	fp, [r3], #4
 80093cc:	f04f 0b00 	mov.w	fp, #0
 80093d0:	9301      	str	r3, [sp, #4]
 80093d2:	465b      	mov	r3, fp
 80093d4:	7828      	ldrb	r0, [r5, #0]
 80093d6:	9303      	str	r3, [sp, #12]
 80093d8:	f7ff feda 	bl	8009190 <__hexdig_fun>
 80093dc:	9b03      	ldr	r3, [sp, #12]
 80093de:	f000 000f 	and.w	r0, r0, #15
 80093e2:	4098      	lsls	r0, r3
 80093e4:	ea4b 0b00 	orr.w	fp, fp, r0
 80093e8:	3304      	adds	r3, #4
 80093ea:	e7a1      	b.n	8009330 <__gethex+0x174>
 80093ec:	45a8      	cmp	r8, r5
 80093ee:	d8e8      	bhi.n	80093c2 <__gethex+0x206>
 80093f0:	2201      	movs	r2, #1
 80093f2:	4628      	mov	r0, r5
 80093f4:	9303      	str	r3, [sp, #12]
 80093f6:	f7fe ff0d 	bl	8008214 <strncmp>
 80093fa:	4926      	ldr	r1, [pc, #152]	; (8009494 <__gethex+0x2d8>)
 80093fc:	9b03      	ldr	r3, [sp, #12]
 80093fe:	2800      	cmp	r0, #0
 8009400:	d1df      	bne.n	80093c2 <__gethex+0x206>
 8009402:	e795      	b.n	8009330 <__gethex+0x174>
 8009404:	f04f 0b03 	mov.w	fp, #3
 8009408:	e7c5      	b.n	8009396 <__gethex+0x1da>
 800940a:	da0b      	bge.n	8009424 <__gethex+0x268>
 800940c:	eba5 0800 	sub.w	r8, r5, r0
 8009410:	4621      	mov	r1, r4
 8009412:	4642      	mov	r2, r8
 8009414:	4648      	mov	r0, r9
 8009416:	f001 f82b 	bl	800a470 <__lshift>
 800941a:	eba6 0608 	sub.w	r6, r6, r8
 800941e:	4604      	mov	r4, r0
 8009420:	f100 0a14 	add.w	sl, r0, #20
 8009424:	f04f 0b00 	mov.w	fp, #0
 8009428:	e7ba      	b.n	80093a0 <__gethex+0x1e4>
 800942a:	687b      	ldr	r3, [r7, #4]
 800942c:	42b3      	cmp	r3, r6
 800942e:	dd73      	ble.n	8009518 <__gethex+0x35c>
 8009430:	1b9e      	subs	r6, r3, r6
 8009432:	42b5      	cmp	r5, r6
 8009434:	dc34      	bgt.n	80094a0 <__gethex+0x2e4>
 8009436:	68fb      	ldr	r3, [r7, #12]
 8009438:	2b02      	cmp	r3, #2
 800943a:	d023      	beq.n	8009484 <__gethex+0x2c8>
 800943c:	2b03      	cmp	r3, #3
 800943e:	d025      	beq.n	800948c <__gethex+0x2d0>
 8009440:	2b01      	cmp	r3, #1
 8009442:	d115      	bne.n	8009470 <__gethex+0x2b4>
 8009444:	42b5      	cmp	r5, r6
 8009446:	d113      	bne.n	8009470 <__gethex+0x2b4>
 8009448:	2d01      	cmp	r5, #1
 800944a:	d10b      	bne.n	8009464 <__gethex+0x2a8>
 800944c:	9a02      	ldr	r2, [sp, #8]
 800944e:	687b      	ldr	r3, [r7, #4]
 8009450:	6013      	str	r3, [r2, #0]
 8009452:	2301      	movs	r3, #1
 8009454:	6123      	str	r3, [r4, #16]
 8009456:	f8ca 3000 	str.w	r3, [sl]
 800945a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800945c:	f04f 0862 	mov.w	r8, #98	; 0x62
 8009460:	601c      	str	r4, [r3, #0]
 8009462:	e735      	b.n	80092d0 <__gethex+0x114>
 8009464:	1e69      	subs	r1, r5, #1
 8009466:	4620      	mov	r0, r4
 8009468:	f001 fa34 	bl	800a8d4 <__any_on>
 800946c:	2800      	cmp	r0, #0
 800946e:	d1ed      	bne.n	800944c <__gethex+0x290>
 8009470:	4621      	mov	r1, r4
 8009472:	4648      	mov	r0, r9
 8009474:	f000 fde2 	bl	800a03c <_Bfree>
 8009478:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800947a:	2300      	movs	r3, #0
 800947c:	6013      	str	r3, [r2, #0]
 800947e:	f04f 0850 	mov.w	r8, #80	; 0x50
 8009482:	e725      	b.n	80092d0 <__gethex+0x114>
 8009484:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8009486:	2b00      	cmp	r3, #0
 8009488:	d1f2      	bne.n	8009470 <__gethex+0x2b4>
 800948a:	e7df      	b.n	800944c <__gethex+0x290>
 800948c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800948e:	2b00      	cmp	r3, #0
 8009490:	d1dc      	bne.n	800944c <__gethex+0x290>
 8009492:	e7ed      	b.n	8009470 <__gethex+0x2b4>
 8009494:	0800bd44 	.word	0x0800bd44
 8009498:	0800bfd8 	.word	0x0800bfd8
 800949c:	0800bfe9 	.word	0x0800bfe9
 80094a0:	f106 38ff 	add.w	r8, r6, #4294967295	; 0xffffffff
 80094a4:	f1bb 0f00 	cmp.w	fp, #0
 80094a8:	d133      	bne.n	8009512 <__gethex+0x356>
 80094aa:	f1b8 0f00 	cmp.w	r8, #0
 80094ae:	d004      	beq.n	80094ba <__gethex+0x2fe>
 80094b0:	4641      	mov	r1, r8
 80094b2:	4620      	mov	r0, r4
 80094b4:	f001 fa0e 	bl	800a8d4 <__any_on>
 80094b8:	4683      	mov	fp, r0
 80094ba:	ea4f 1268 	mov.w	r2, r8, asr #5
 80094be:	2301      	movs	r3, #1
 80094c0:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 80094c4:	f008 081f 	and.w	r8, r8, #31
 80094c8:	fa03 f308 	lsl.w	r3, r3, r8
 80094cc:	4213      	tst	r3, r2
 80094ce:	4631      	mov	r1, r6
 80094d0:	4620      	mov	r0, r4
 80094d2:	bf18      	it	ne
 80094d4:	f04b 0b02 	orrne.w	fp, fp, #2
 80094d8:	1bad      	subs	r5, r5, r6
 80094da:	f7ff fe07 	bl	80090ec <rshift>
 80094de:	687e      	ldr	r6, [r7, #4]
 80094e0:	f04f 0802 	mov.w	r8, #2
 80094e4:	f1bb 0f00 	cmp.w	fp, #0
 80094e8:	d04a      	beq.n	8009580 <__gethex+0x3c4>
 80094ea:	68fb      	ldr	r3, [r7, #12]
 80094ec:	2b02      	cmp	r3, #2
 80094ee:	d016      	beq.n	800951e <__gethex+0x362>
 80094f0:	2b03      	cmp	r3, #3
 80094f2:	d018      	beq.n	8009526 <__gethex+0x36a>
 80094f4:	2b01      	cmp	r3, #1
 80094f6:	d109      	bne.n	800950c <__gethex+0x350>
 80094f8:	f01b 0f02 	tst.w	fp, #2
 80094fc:	d006      	beq.n	800950c <__gethex+0x350>
 80094fe:	f8da 3000 	ldr.w	r3, [sl]
 8009502:	ea4b 0b03 	orr.w	fp, fp, r3
 8009506:	f01b 0f01 	tst.w	fp, #1
 800950a:	d10f      	bne.n	800952c <__gethex+0x370>
 800950c:	f048 0810 	orr.w	r8, r8, #16
 8009510:	e036      	b.n	8009580 <__gethex+0x3c4>
 8009512:	f04f 0b01 	mov.w	fp, #1
 8009516:	e7d0      	b.n	80094ba <__gethex+0x2fe>
 8009518:	f04f 0801 	mov.w	r8, #1
 800951c:	e7e2      	b.n	80094e4 <__gethex+0x328>
 800951e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8009520:	f1c3 0301 	rsb	r3, r3, #1
 8009524:	930f      	str	r3, [sp, #60]	; 0x3c
 8009526:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8009528:	2b00      	cmp	r3, #0
 800952a:	d0ef      	beq.n	800950c <__gethex+0x350>
 800952c:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8009530:	f104 0214 	add.w	r2, r4, #20
 8009534:	ea4f 038b 	mov.w	r3, fp, lsl #2
 8009538:	9301      	str	r3, [sp, #4]
 800953a:	eb02 008b 	add.w	r0, r2, fp, lsl #2
 800953e:	2300      	movs	r3, #0
 8009540:	4694      	mov	ip, r2
 8009542:	f852 1b04 	ldr.w	r1, [r2], #4
 8009546:	f1b1 3fff 	cmp.w	r1, #4294967295	; 0xffffffff
 800954a:	d01e      	beq.n	800958a <__gethex+0x3ce>
 800954c:	3101      	adds	r1, #1
 800954e:	f8cc 1000 	str.w	r1, [ip]
 8009552:	f1b8 0f02 	cmp.w	r8, #2
 8009556:	f104 0214 	add.w	r2, r4, #20
 800955a:	d13d      	bne.n	80095d8 <__gethex+0x41c>
 800955c:	683b      	ldr	r3, [r7, #0]
 800955e:	3b01      	subs	r3, #1
 8009560:	42ab      	cmp	r3, r5
 8009562:	d10b      	bne.n	800957c <__gethex+0x3c0>
 8009564:	1169      	asrs	r1, r5, #5
 8009566:	2301      	movs	r3, #1
 8009568:	f005 051f 	and.w	r5, r5, #31
 800956c:	fa03 f505 	lsl.w	r5, r3, r5
 8009570:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8009574:	421d      	tst	r5, r3
 8009576:	bf18      	it	ne
 8009578:	f04f 0801 	movne.w	r8, #1
 800957c:	f048 0820 	orr.w	r8, r8, #32
 8009580:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009582:	601c      	str	r4, [r3, #0]
 8009584:	9b02      	ldr	r3, [sp, #8]
 8009586:	601e      	str	r6, [r3, #0]
 8009588:	e6a2      	b.n	80092d0 <__gethex+0x114>
 800958a:	4290      	cmp	r0, r2
 800958c:	f842 3c04 	str.w	r3, [r2, #-4]
 8009590:	d8d6      	bhi.n	8009540 <__gethex+0x384>
 8009592:	68a2      	ldr	r2, [r4, #8]
 8009594:	4593      	cmp	fp, r2
 8009596:	db17      	blt.n	80095c8 <__gethex+0x40c>
 8009598:	6861      	ldr	r1, [r4, #4]
 800959a:	4648      	mov	r0, r9
 800959c:	3101      	adds	r1, #1
 800959e:	f000 fd0d 	bl	8009fbc <_Balloc>
 80095a2:	4682      	mov	sl, r0
 80095a4:	b918      	cbnz	r0, 80095ae <__gethex+0x3f2>
 80095a6:	4b1b      	ldr	r3, [pc, #108]	; (8009614 <__gethex+0x458>)
 80095a8:	4602      	mov	r2, r0
 80095aa:	2184      	movs	r1, #132	; 0x84
 80095ac:	e6b3      	b.n	8009316 <__gethex+0x15a>
 80095ae:	6922      	ldr	r2, [r4, #16]
 80095b0:	3202      	adds	r2, #2
 80095b2:	f104 010c 	add.w	r1, r4, #12
 80095b6:	0092      	lsls	r2, r2, #2
 80095b8:	300c      	adds	r0, #12
 80095ba:	f7fe fee5 	bl	8008388 <memcpy>
 80095be:	4621      	mov	r1, r4
 80095c0:	4648      	mov	r0, r9
 80095c2:	f000 fd3b 	bl	800a03c <_Bfree>
 80095c6:	4654      	mov	r4, sl
 80095c8:	6922      	ldr	r2, [r4, #16]
 80095ca:	1c51      	adds	r1, r2, #1
 80095cc:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80095d0:	6121      	str	r1, [r4, #16]
 80095d2:	2101      	movs	r1, #1
 80095d4:	6151      	str	r1, [r2, #20]
 80095d6:	e7bc      	b.n	8009552 <__gethex+0x396>
 80095d8:	6921      	ldr	r1, [r4, #16]
 80095da:	4559      	cmp	r1, fp
 80095dc:	dd0b      	ble.n	80095f6 <__gethex+0x43a>
 80095de:	2101      	movs	r1, #1
 80095e0:	4620      	mov	r0, r4
 80095e2:	f7ff fd83 	bl	80090ec <rshift>
 80095e6:	68bb      	ldr	r3, [r7, #8]
 80095e8:	3601      	adds	r6, #1
 80095ea:	42b3      	cmp	r3, r6
 80095ec:	f6ff aedb 	blt.w	80093a6 <__gethex+0x1ea>
 80095f0:	f04f 0801 	mov.w	r8, #1
 80095f4:	e7c2      	b.n	800957c <__gethex+0x3c0>
 80095f6:	f015 051f 	ands.w	r5, r5, #31
 80095fa:	d0f9      	beq.n	80095f0 <__gethex+0x434>
 80095fc:	9b01      	ldr	r3, [sp, #4]
 80095fe:	441a      	add	r2, r3
 8009600:	f1c5 0520 	rsb	r5, r5, #32
 8009604:	f852 0c04 	ldr.w	r0, [r2, #-4]
 8009608:	f000 fdca 	bl	800a1a0 <__hi0bits>
 800960c:	42a8      	cmp	r0, r5
 800960e:	dbe6      	blt.n	80095de <__gethex+0x422>
 8009610:	e7ee      	b.n	80095f0 <__gethex+0x434>
 8009612:	bf00      	nop
 8009614:	0800bfd8 	.word	0x0800bfd8

08009618 <L_shift>:
 8009618:	f1c2 0208 	rsb	r2, r2, #8
 800961c:	0092      	lsls	r2, r2, #2
 800961e:	b570      	push	{r4, r5, r6, lr}
 8009620:	f1c2 0620 	rsb	r6, r2, #32
 8009624:	6843      	ldr	r3, [r0, #4]
 8009626:	6804      	ldr	r4, [r0, #0]
 8009628:	fa03 f506 	lsl.w	r5, r3, r6
 800962c:	432c      	orrs	r4, r5
 800962e:	40d3      	lsrs	r3, r2
 8009630:	6004      	str	r4, [r0, #0]
 8009632:	f840 3f04 	str.w	r3, [r0, #4]!
 8009636:	4288      	cmp	r0, r1
 8009638:	d3f4      	bcc.n	8009624 <L_shift+0xc>
 800963a:	bd70      	pop	{r4, r5, r6, pc}

0800963c <__match>:
 800963c:	b530      	push	{r4, r5, lr}
 800963e:	6803      	ldr	r3, [r0, #0]
 8009640:	3301      	adds	r3, #1
 8009642:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009646:	b914      	cbnz	r4, 800964e <__match+0x12>
 8009648:	6003      	str	r3, [r0, #0]
 800964a:	2001      	movs	r0, #1
 800964c:	bd30      	pop	{r4, r5, pc}
 800964e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009652:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8009656:	2d19      	cmp	r5, #25
 8009658:	bf98      	it	ls
 800965a:	3220      	addls	r2, #32
 800965c:	42a2      	cmp	r2, r4
 800965e:	d0f0      	beq.n	8009642 <__match+0x6>
 8009660:	2000      	movs	r0, #0
 8009662:	e7f3      	b.n	800964c <__match+0x10>

08009664 <__hexnan>:
 8009664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009668:	680b      	ldr	r3, [r1, #0]
 800966a:	6801      	ldr	r1, [r0, #0]
 800966c:	115e      	asrs	r6, r3, #5
 800966e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8009672:	f013 031f 	ands.w	r3, r3, #31
 8009676:	b087      	sub	sp, #28
 8009678:	bf18      	it	ne
 800967a:	3604      	addne	r6, #4
 800967c:	2500      	movs	r5, #0
 800967e:	1f37      	subs	r7, r6, #4
 8009680:	4682      	mov	sl, r0
 8009682:	4690      	mov	r8, r2
 8009684:	9301      	str	r3, [sp, #4]
 8009686:	f846 5c04 	str.w	r5, [r6, #-4]
 800968a:	46b9      	mov	r9, r7
 800968c:	463c      	mov	r4, r7
 800968e:	9502      	str	r5, [sp, #8]
 8009690:	46ab      	mov	fp, r5
 8009692:	784a      	ldrb	r2, [r1, #1]
 8009694:	1c4b      	adds	r3, r1, #1
 8009696:	9303      	str	r3, [sp, #12]
 8009698:	b342      	cbz	r2, 80096ec <__hexnan+0x88>
 800969a:	4610      	mov	r0, r2
 800969c:	9105      	str	r1, [sp, #20]
 800969e:	9204      	str	r2, [sp, #16]
 80096a0:	f7ff fd76 	bl	8009190 <__hexdig_fun>
 80096a4:	2800      	cmp	r0, #0
 80096a6:	d14f      	bne.n	8009748 <__hexnan+0xe4>
 80096a8:	9a04      	ldr	r2, [sp, #16]
 80096aa:	9905      	ldr	r1, [sp, #20]
 80096ac:	2a20      	cmp	r2, #32
 80096ae:	d818      	bhi.n	80096e2 <__hexnan+0x7e>
 80096b0:	9b02      	ldr	r3, [sp, #8]
 80096b2:	459b      	cmp	fp, r3
 80096b4:	dd13      	ble.n	80096de <__hexnan+0x7a>
 80096b6:	454c      	cmp	r4, r9
 80096b8:	d206      	bcs.n	80096c8 <__hexnan+0x64>
 80096ba:	2d07      	cmp	r5, #7
 80096bc:	dc04      	bgt.n	80096c8 <__hexnan+0x64>
 80096be:	462a      	mov	r2, r5
 80096c0:	4649      	mov	r1, r9
 80096c2:	4620      	mov	r0, r4
 80096c4:	f7ff ffa8 	bl	8009618 <L_shift>
 80096c8:	4544      	cmp	r4, r8
 80096ca:	d950      	bls.n	800976e <__hexnan+0x10a>
 80096cc:	2300      	movs	r3, #0
 80096ce:	f1a4 0904 	sub.w	r9, r4, #4
 80096d2:	f844 3c04 	str.w	r3, [r4, #-4]
 80096d6:	f8cd b008 	str.w	fp, [sp, #8]
 80096da:	464c      	mov	r4, r9
 80096dc:	461d      	mov	r5, r3
 80096de:	9903      	ldr	r1, [sp, #12]
 80096e0:	e7d7      	b.n	8009692 <__hexnan+0x2e>
 80096e2:	2a29      	cmp	r2, #41	; 0x29
 80096e4:	d155      	bne.n	8009792 <__hexnan+0x12e>
 80096e6:	3102      	adds	r1, #2
 80096e8:	f8ca 1000 	str.w	r1, [sl]
 80096ec:	f1bb 0f00 	cmp.w	fp, #0
 80096f0:	d04f      	beq.n	8009792 <__hexnan+0x12e>
 80096f2:	454c      	cmp	r4, r9
 80096f4:	d206      	bcs.n	8009704 <__hexnan+0xa0>
 80096f6:	2d07      	cmp	r5, #7
 80096f8:	dc04      	bgt.n	8009704 <__hexnan+0xa0>
 80096fa:	462a      	mov	r2, r5
 80096fc:	4649      	mov	r1, r9
 80096fe:	4620      	mov	r0, r4
 8009700:	f7ff ff8a 	bl	8009618 <L_shift>
 8009704:	4544      	cmp	r4, r8
 8009706:	d934      	bls.n	8009772 <__hexnan+0x10e>
 8009708:	f1a8 0204 	sub.w	r2, r8, #4
 800970c:	4623      	mov	r3, r4
 800970e:	f853 1b04 	ldr.w	r1, [r3], #4
 8009712:	f842 1f04 	str.w	r1, [r2, #4]!
 8009716:	429f      	cmp	r7, r3
 8009718:	d2f9      	bcs.n	800970e <__hexnan+0xaa>
 800971a:	1b3b      	subs	r3, r7, r4
 800971c:	f023 0303 	bic.w	r3, r3, #3
 8009720:	3304      	adds	r3, #4
 8009722:	3e03      	subs	r6, #3
 8009724:	3401      	adds	r4, #1
 8009726:	42a6      	cmp	r6, r4
 8009728:	bf38      	it	cc
 800972a:	2304      	movcc	r3, #4
 800972c:	4443      	add	r3, r8
 800972e:	2200      	movs	r2, #0
 8009730:	f843 2b04 	str.w	r2, [r3], #4
 8009734:	429f      	cmp	r7, r3
 8009736:	d2fb      	bcs.n	8009730 <__hexnan+0xcc>
 8009738:	683b      	ldr	r3, [r7, #0]
 800973a:	b91b      	cbnz	r3, 8009744 <__hexnan+0xe0>
 800973c:	4547      	cmp	r7, r8
 800973e:	d126      	bne.n	800978e <__hexnan+0x12a>
 8009740:	2301      	movs	r3, #1
 8009742:	603b      	str	r3, [r7, #0]
 8009744:	2005      	movs	r0, #5
 8009746:	e025      	b.n	8009794 <__hexnan+0x130>
 8009748:	3501      	adds	r5, #1
 800974a:	2d08      	cmp	r5, #8
 800974c:	f10b 0b01 	add.w	fp, fp, #1
 8009750:	dd06      	ble.n	8009760 <__hexnan+0xfc>
 8009752:	4544      	cmp	r4, r8
 8009754:	d9c3      	bls.n	80096de <__hexnan+0x7a>
 8009756:	2300      	movs	r3, #0
 8009758:	f844 3c04 	str.w	r3, [r4, #-4]
 800975c:	2501      	movs	r5, #1
 800975e:	3c04      	subs	r4, #4
 8009760:	6822      	ldr	r2, [r4, #0]
 8009762:	f000 000f 	and.w	r0, r0, #15
 8009766:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 800976a:	6020      	str	r0, [r4, #0]
 800976c:	e7b7      	b.n	80096de <__hexnan+0x7a>
 800976e:	2508      	movs	r5, #8
 8009770:	e7b5      	b.n	80096de <__hexnan+0x7a>
 8009772:	9b01      	ldr	r3, [sp, #4]
 8009774:	2b00      	cmp	r3, #0
 8009776:	d0df      	beq.n	8009738 <__hexnan+0xd4>
 8009778:	f1c3 0320 	rsb	r3, r3, #32
 800977c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8009780:	40da      	lsrs	r2, r3
 8009782:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8009786:	4013      	ands	r3, r2
 8009788:	f846 3c04 	str.w	r3, [r6, #-4]
 800978c:	e7d4      	b.n	8009738 <__hexnan+0xd4>
 800978e:	3f04      	subs	r7, #4
 8009790:	e7d2      	b.n	8009738 <__hexnan+0xd4>
 8009792:	2004      	movs	r0, #4
 8009794:	b007      	add	sp, #28
 8009796:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800979a <__ssputs_r>:
 800979a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800979e:	688e      	ldr	r6, [r1, #8]
 80097a0:	461f      	mov	r7, r3
 80097a2:	42be      	cmp	r6, r7
 80097a4:	680b      	ldr	r3, [r1, #0]
 80097a6:	4682      	mov	sl, r0
 80097a8:	460c      	mov	r4, r1
 80097aa:	4690      	mov	r8, r2
 80097ac:	d82c      	bhi.n	8009808 <__ssputs_r+0x6e>
 80097ae:	898a      	ldrh	r2, [r1, #12]
 80097b0:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80097b4:	d026      	beq.n	8009804 <__ssputs_r+0x6a>
 80097b6:	6965      	ldr	r5, [r4, #20]
 80097b8:	6909      	ldr	r1, [r1, #16]
 80097ba:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80097be:	eba3 0901 	sub.w	r9, r3, r1
 80097c2:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80097c6:	1c7b      	adds	r3, r7, #1
 80097c8:	444b      	add	r3, r9
 80097ca:	106d      	asrs	r5, r5, #1
 80097cc:	429d      	cmp	r5, r3
 80097ce:	bf38      	it	cc
 80097d0:	461d      	movcc	r5, r3
 80097d2:	0553      	lsls	r3, r2, #21
 80097d4:	d527      	bpl.n	8009826 <__ssputs_r+0x8c>
 80097d6:	4629      	mov	r1, r5
 80097d8:	f000 faa4 	bl	8009d24 <_malloc_r>
 80097dc:	4606      	mov	r6, r0
 80097de:	b360      	cbz	r0, 800983a <__ssputs_r+0xa0>
 80097e0:	6921      	ldr	r1, [r4, #16]
 80097e2:	464a      	mov	r2, r9
 80097e4:	f7fe fdd0 	bl	8008388 <memcpy>
 80097e8:	89a3      	ldrh	r3, [r4, #12]
 80097ea:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80097ee:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80097f2:	81a3      	strh	r3, [r4, #12]
 80097f4:	6126      	str	r6, [r4, #16]
 80097f6:	6165      	str	r5, [r4, #20]
 80097f8:	444e      	add	r6, r9
 80097fa:	eba5 0509 	sub.w	r5, r5, r9
 80097fe:	6026      	str	r6, [r4, #0]
 8009800:	60a5      	str	r5, [r4, #8]
 8009802:	463e      	mov	r6, r7
 8009804:	42be      	cmp	r6, r7
 8009806:	d900      	bls.n	800980a <__ssputs_r+0x70>
 8009808:	463e      	mov	r6, r7
 800980a:	6820      	ldr	r0, [r4, #0]
 800980c:	4632      	mov	r2, r6
 800980e:	4641      	mov	r1, r8
 8009810:	f001 fa09 	bl	800ac26 <memmove>
 8009814:	68a3      	ldr	r3, [r4, #8]
 8009816:	1b9b      	subs	r3, r3, r6
 8009818:	60a3      	str	r3, [r4, #8]
 800981a:	6823      	ldr	r3, [r4, #0]
 800981c:	4433      	add	r3, r6
 800981e:	6023      	str	r3, [r4, #0]
 8009820:	2000      	movs	r0, #0
 8009822:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009826:	462a      	mov	r2, r5
 8009828:	f001 f8ca 	bl	800a9c0 <_realloc_r>
 800982c:	4606      	mov	r6, r0
 800982e:	2800      	cmp	r0, #0
 8009830:	d1e0      	bne.n	80097f4 <__ssputs_r+0x5a>
 8009832:	6921      	ldr	r1, [r4, #16]
 8009834:	4650      	mov	r0, sl
 8009836:	f001 faa7 	bl	800ad88 <_free_r>
 800983a:	230c      	movs	r3, #12
 800983c:	f8ca 3000 	str.w	r3, [sl]
 8009840:	89a3      	ldrh	r3, [r4, #12]
 8009842:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009846:	81a3      	strh	r3, [r4, #12]
 8009848:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800984c:	e7e9      	b.n	8009822 <__ssputs_r+0x88>
	...

08009850 <_svfiprintf_r>:
 8009850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009854:	4698      	mov	r8, r3
 8009856:	898b      	ldrh	r3, [r1, #12]
 8009858:	061b      	lsls	r3, r3, #24
 800985a:	b09d      	sub	sp, #116	; 0x74
 800985c:	4607      	mov	r7, r0
 800985e:	460d      	mov	r5, r1
 8009860:	4614      	mov	r4, r2
 8009862:	d50e      	bpl.n	8009882 <_svfiprintf_r+0x32>
 8009864:	690b      	ldr	r3, [r1, #16]
 8009866:	b963      	cbnz	r3, 8009882 <_svfiprintf_r+0x32>
 8009868:	2140      	movs	r1, #64	; 0x40
 800986a:	f000 fa5b 	bl	8009d24 <_malloc_r>
 800986e:	6028      	str	r0, [r5, #0]
 8009870:	6128      	str	r0, [r5, #16]
 8009872:	b920      	cbnz	r0, 800987e <_svfiprintf_r+0x2e>
 8009874:	230c      	movs	r3, #12
 8009876:	603b      	str	r3, [r7, #0]
 8009878:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800987c:	e0d0      	b.n	8009a20 <_svfiprintf_r+0x1d0>
 800987e:	2340      	movs	r3, #64	; 0x40
 8009880:	616b      	str	r3, [r5, #20]
 8009882:	2300      	movs	r3, #0
 8009884:	9309      	str	r3, [sp, #36]	; 0x24
 8009886:	2320      	movs	r3, #32
 8009888:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800988c:	f8cd 800c 	str.w	r8, [sp, #12]
 8009890:	2330      	movs	r3, #48	; 0x30
 8009892:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8009a38 <_svfiprintf_r+0x1e8>
 8009896:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800989a:	f04f 0901 	mov.w	r9, #1
 800989e:	4623      	mov	r3, r4
 80098a0:	469a      	mov	sl, r3
 80098a2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80098a6:	b10a      	cbz	r2, 80098ac <_svfiprintf_r+0x5c>
 80098a8:	2a25      	cmp	r2, #37	; 0x25
 80098aa:	d1f9      	bne.n	80098a0 <_svfiprintf_r+0x50>
 80098ac:	ebba 0b04 	subs.w	fp, sl, r4
 80098b0:	d00b      	beq.n	80098ca <_svfiprintf_r+0x7a>
 80098b2:	465b      	mov	r3, fp
 80098b4:	4622      	mov	r2, r4
 80098b6:	4629      	mov	r1, r5
 80098b8:	4638      	mov	r0, r7
 80098ba:	f7ff ff6e 	bl	800979a <__ssputs_r>
 80098be:	3001      	adds	r0, #1
 80098c0:	f000 80a9 	beq.w	8009a16 <_svfiprintf_r+0x1c6>
 80098c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80098c6:	445a      	add	r2, fp
 80098c8:	9209      	str	r2, [sp, #36]	; 0x24
 80098ca:	f89a 3000 	ldrb.w	r3, [sl]
 80098ce:	2b00      	cmp	r3, #0
 80098d0:	f000 80a1 	beq.w	8009a16 <_svfiprintf_r+0x1c6>
 80098d4:	2300      	movs	r3, #0
 80098d6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80098da:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80098de:	f10a 0a01 	add.w	sl, sl, #1
 80098e2:	9304      	str	r3, [sp, #16]
 80098e4:	9307      	str	r3, [sp, #28]
 80098e6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80098ea:	931a      	str	r3, [sp, #104]	; 0x68
 80098ec:	4654      	mov	r4, sl
 80098ee:	2205      	movs	r2, #5
 80098f0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80098f4:	4850      	ldr	r0, [pc, #320]	; (8009a38 <_svfiprintf_r+0x1e8>)
 80098f6:	f7f6 fc6b 	bl	80001d0 <memchr>
 80098fa:	9a04      	ldr	r2, [sp, #16]
 80098fc:	b9d8      	cbnz	r0, 8009936 <_svfiprintf_r+0xe6>
 80098fe:	06d0      	lsls	r0, r2, #27
 8009900:	bf44      	itt	mi
 8009902:	2320      	movmi	r3, #32
 8009904:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8009908:	0711      	lsls	r1, r2, #28
 800990a:	bf44      	itt	mi
 800990c:	232b      	movmi	r3, #43	; 0x2b
 800990e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8009912:	f89a 3000 	ldrb.w	r3, [sl]
 8009916:	2b2a      	cmp	r3, #42	; 0x2a
 8009918:	d015      	beq.n	8009946 <_svfiprintf_r+0xf6>
 800991a:	9a07      	ldr	r2, [sp, #28]
 800991c:	4654      	mov	r4, sl
 800991e:	2000      	movs	r0, #0
 8009920:	f04f 0c0a 	mov.w	ip, #10
 8009924:	4621      	mov	r1, r4
 8009926:	f811 3b01 	ldrb.w	r3, [r1], #1
 800992a:	3b30      	subs	r3, #48	; 0x30
 800992c:	2b09      	cmp	r3, #9
 800992e:	d94d      	bls.n	80099cc <_svfiprintf_r+0x17c>
 8009930:	b1b0      	cbz	r0, 8009960 <_svfiprintf_r+0x110>
 8009932:	9207      	str	r2, [sp, #28]
 8009934:	e014      	b.n	8009960 <_svfiprintf_r+0x110>
 8009936:	eba0 0308 	sub.w	r3, r0, r8
 800993a:	fa09 f303 	lsl.w	r3, r9, r3
 800993e:	4313      	orrs	r3, r2
 8009940:	9304      	str	r3, [sp, #16]
 8009942:	46a2      	mov	sl, r4
 8009944:	e7d2      	b.n	80098ec <_svfiprintf_r+0x9c>
 8009946:	9b03      	ldr	r3, [sp, #12]
 8009948:	1d19      	adds	r1, r3, #4
 800994a:	681b      	ldr	r3, [r3, #0]
 800994c:	9103      	str	r1, [sp, #12]
 800994e:	2b00      	cmp	r3, #0
 8009950:	bfbb      	ittet	lt
 8009952:	425b      	neglt	r3, r3
 8009954:	f042 0202 	orrlt.w	r2, r2, #2
 8009958:	9307      	strge	r3, [sp, #28]
 800995a:	9307      	strlt	r3, [sp, #28]
 800995c:	bfb8      	it	lt
 800995e:	9204      	strlt	r2, [sp, #16]
 8009960:	7823      	ldrb	r3, [r4, #0]
 8009962:	2b2e      	cmp	r3, #46	; 0x2e
 8009964:	d10c      	bne.n	8009980 <_svfiprintf_r+0x130>
 8009966:	7863      	ldrb	r3, [r4, #1]
 8009968:	2b2a      	cmp	r3, #42	; 0x2a
 800996a:	d134      	bne.n	80099d6 <_svfiprintf_r+0x186>
 800996c:	9b03      	ldr	r3, [sp, #12]
 800996e:	1d1a      	adds	r2, r3, #4
 8009970:	681b      	ldr	r3, [r3, #0]
 8009972:	9203      	str	r2, [sp, #12]
 8009974:	2b00      	cmp	r3, #0
 8009976:	bfb8      	it	lt
 8009978:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800997c:	3402      	adds	r4, #2
 800997e:	9305      	str	r3, [sp, #20]
 8009980:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8009a48 <_svfiprintf_r+0x1f8>
 8009984:	7821      	ldrb	r1, [r4, #0]
 8009986:	2203      	movs	r2, #3
 8009988:	4650      	mov	r0, sl
 800998a:	f7f6 fc21 	bl	80001d0 <memchr>
 800998e:	b138      	cbz	r0, 80099a0 <_svfiprintf_r+0x150>
 8009990:	9b04      	ldr	r3, [sp, #16]
 8009992:	eba0 000a 	sub.w	r0, r0, sl
 8009996:	2240      	movs	r2, #64	; 0x40
 8009998:	4082      	lsls	r2, r0
 800999a:	4313      	orrs	r3, r2
 800999c:	3401      	adds	r4, #1
 800999e:	9304      	str	r3, [sp, #16]
 80099a0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80099a4:	4825      	ldr	r0, [pc, #148]	; (8009a3c <_svfiprintf_r+0x1ec>)
 80099a6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80099aa:	2206      	movs	r2, #6
 80099ac:	f7f6 fc10 	bl	80001d0 <memchr>
 80099b0:	2800      	cmp	r0, #0
 80099b2:	d038      	beq.n	8009a26 <_svfiprintf_r+0x1d6>
 80099b4:	4b22      	ldr	r3, [pc, #136]	; (8009a40 <_svfiprintf_r+0x1f0>)
 80099b6:	bb1b      	cbnz	r3, 8009a00 <_svfiprintf_r+0x1b0>
 80099b8:	9b03      	ldr	r3, [sp, #12]
 80099ba:	3307      	adds	r3, #7
 80099bc:	f023 0307 	bic.w	r3, r3, #7
 80099c0:	3308      	adds	r3, #8
 80099c2:	9303      	str	r3, [sp, #12]
 80099c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80099c6:	4433      	add	r3, r6
 80099c8:	9309      	str	r3, [sp, #36]	; 0x24
 80099ca:	e768      	b.n	800989e <_svfiprintf_r+0x4e>
 80099cc:	fb0c 3202 	mla	r2, ip, r2, r3
 80099d0:	460c      	mov	r4, r1
 80099d2:	2001      	movs	r0, #1
 80099d4:	e7a6      	b.n	8009924 <_svfiprintf_r+0xd4>
 80099d6:	2300      	movs	r3, #0
 80099d8:	3401      	adds	r4, #1
 80099da:	9305      	str	r3, [sp, #20]
 80099dc:	4619      	mov	r1, r3
 80099de:	f04f 0c0a 	mov.w	ip, #10
 80099e2:	4620      	mov	r0, r4
 80099e4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80099e8:	3a30      	subs	r2, #48	; 0x30
 80099ea:	2a09      	cmp	r2, #9
 80099ec:	d903      	bls.n	80099f6 <_svfiprintf_r+0x1a6>
 80099ee:	2b00      	cmp	r3, #0
 80099f0:	d0c6      	beq.n	8009980 <_svfiprintf_r+0x130>
 80099f2:	9105      	str	r1, [sp, #20]
 80099f4:	e7c4      	b.n	8009980 <_svfiprintf_r+0x130>
 80099f6:	fb0c 2101 	mla	r1, ip, r1, r2
 80099fa:	4604      	mov	r4, r0
 80099fc:	2301      	movs	r3, #1
 80099fe:	e7f0      	b.n	80099e2 <_svfiprintf_r+0x192>
 8009a00:	ab03      	add	r3, sp, #12
 8009a02:	9300      	str	r3, [sp, #0]
 8009a04:	462a      	mov	r2, r5
 8009a06:	4b0f      	ldr	r3, [pc, #60]	; (8009a44 <_svfiprintf_r+0x1f4>)
 8009a08:	a904      	add	r1, sp, #16
 8009a0a:	4638      	mov	r0, r7
 8009a0c:	f7fd f8fe 	bl	8006c0c <_printf_float>
 8009a10:	1c42      	adds	r2, r0, #1
 8009a12:	4606      	mov	r6, r0
 8009a14:	d1d6      	bne.n	80099c4 <_svfiprintf_r+0x174>
 8009a16:	89ab      	ldrh	r3, [r5, #12]
 8009a18:	065b      	lsls	r3, r3, #25
 8009a1a:	f53f af2d 	bmi.w	8009878 <_svfiprintf_r+0x28>
 8009a1e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8009a20:	b01d      	add	sp, #116	; 0x74
 8009a22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009a26:	ab03      	add	r3, sp, #12
 8009a28:	9300      	str	r3, [sp, #0]
 8009a2a:	462a      	mov	r2, r5
 8009a2c:	4b05      	ldr	r3, [pc, #20]	; (8009a44 <_svfiprintf_r+0x1f4>)
 8009a2e:	a904      	add	r1, sp, #16
 8009a30:	4638      	mov	r0, r7
 8009a32:	f7fd fb8f 	bl	8007154 <_printf_i>
 8009a36:	e7eb      	b.n	8009a10 <_svfiprintf_r+0x1c0>
 8009a38:	0800c049 	.word	0x0800c049
 8009a3c:	0800c053 	.word	0x0800c053
 8009a40:	08006c0d 	.word	0x08006c0d
 8009a44:	0800979b 	.word	0x0800979b
 8009a48:	0800c04f 	.word	0x0800c04f

08009a4c <__sfputc_r>:
 8009a4c:	6893      	ldr	r3, [r2, #8]
 8009a4e:	3b01      	subs	r3, #1
 8009a50:	2b00      	cmp	r3, #0
 8009a52:	b410      	push	{r4}
 8009a54:	6093      	str	r3, [r2, #8]
 8009a56:	da08      	bge.n	8009a6a <__sfputc_r+0x1e>
 8009a58:	6994      	ldr	r4, [r2, #24]
 8009a5a:	42a3      	cmp	r3, r4
 8009a5c:	db01      	blt.n	8009a62 <__sfputc_r+0x16>
 8009a5e:	290a      	cmp	r1, #10
 8009a60:	d103      	bne.n	8009a6a <__sfputc_r+0x1e>
 8009a62:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009a66:	f000 bfda 	b.w	800aa1e <__swbuf_r>
 8009a6a:	6813      	ldr	r3, [r2, #0]
 8009a6c:	1c58      	adds	r0, r3, #1
 8009a6e:	6010      	str	r0, [r2, #0]
 8009a70:	7019      	strb	r1, [r3, #0]
 8009a72:	4608      	mov	r0, r1
 8009a74:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009a78:	4770      	bx	lr

08009a7a <__sfputs_r>:
 8009a7a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009a7c:	4606      	mov	r6, r0
 8009a7e:	460f      	mov	r7, r1
 8009a80:	4614      	mov	r4, r2
 8009a82:	18d5      	adds	r5, r2, r3
 8009a84:	42ac      	cmp	r4, r5
 8009a86:	d101      	bne.n	8009a8c <__sfputs_r+0x12>
 8009a88:	2000      	movs	r0, #0
 8009a8a:	e007      	b.n	8009a9c <__sfputs_r+0x22>
 8009a8c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009a90:	463a      	mov	r2, r7
 8009a92:	4630      	mov	r0, r6
 8009a94:	f7ff ffda 	bl	8009a4c <__sfputc_r>
 8009a98:	1c43      	adds	r3, r0, #1
 8009a9a:	d1f3      	bne.n	8009a84 <__sfputs_r+0xa>
 8009a9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08009aa0 <_vfiprintf_r>:
 8009aa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009aa4:	460d      	mov	r5, r1
 8009aa6:	b09d      	sub	sp, #116	; 0x74
 8009aa8:	4614      	mov	r4, r2
 8009aaa:	4698      	mov	r8, r3
 8009aac:	4606      	mov	r6, r0
 8009aae:	b118      	cbz	r0, 8009ab8 <_vfiprintf_r+0x18>
 8009ab0:	6a03      	ldr	r3, [r0, #32]
 8009ab2:	b90b      	cbnz	r3, 8009ab8 <_vfiprintf_r+0x18>
 8009ab4:	f7fd fd0a 	bl	80074cc <__sinit>
 8009ab8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8009aba:	07d9      	lsls	r1, r3, #31
 8009abc:	d405      	bmi.n	8009aca <_vfiprintf_r+0x2a>
 8009abe:	89ab      	ldrh	r3, [r5, #12]
 8009ac0:	059a      	lsls	r2, r3, #22
 8009ac2:	d402      	bmi.n	8009aca <_vfiprintf_r+0x2a>
 8009ac4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8009ac6:	f7fe fc5d 	bl	8008384 <__retarget_lock_acquire_recursive>
 8009aca:	89ab      	ldrh	r3, [r5, #12]
 8009acc:	071b      	lsls	r3, r3, #28
 8009ace:	d501      	bpl.n	8009ad4 <_vfiprintf_r+0x34>
 8009ad0:	692b      	ldr	r3, [r5, #16]
 8009ad2:	b99b      	cbnz	r3, 8009afc <_vfiprintf_r+0x5c>
 8009ad4:	4629      	mov	r1, r5
 8009ad6:	4630      	mov	r0, r6
 8009ad8:	f000 ffde 	bl	800aa98 <__swsetup_r>
 8009adc:	b170      	cbz	r0, 8009afc <_vfiprintf_r+0x5c>
 8009ade:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8009ae0:	07dc      	lsls	r4, r3, #31
 8009ae2:	d504      	bpl.n	8009aee <_vfiprintf_r+0x4e>
 8009ae4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009ae8:	b01d      	add	sp, #116	; 0x74
 8009aea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009aee:	89ab      	ldrh	r3, [r5, #12]
 8009af0:	0598      	lsls	r0, r3, #22
 8009af2:	d4f7      	bmi.n	8009ae4 <_vfiprintf_r+0x44>
 8009af4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8009af6:	f7fe fc46 	bl	8008386 <__retarget_lock_release_recursive>
 8009afa:	e7f3      	b.n	8009ae4 <_vfiprintf_r+0x44>
 8009afc:	2300      	movs	r3, #0
 8009afe:	9309      	str	r3, [sp, #36]	; 0x24
 8009b00:	2320      	movs	r3, #32
 8009b02:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8009b06:	f8cd 800c 	str.w	r8, [sp, #12]
 8009b0a:	2330      	movs	r3, #48	; 0x30
 8009b0c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8009cc0 <_vfiprintf_r+0x220>
 8009b10:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8009b14:	f04f 0901 	mov.w	r9, #1
 8009b18:	4623      	mov	r3, r4
 8009b1a:	469a      	mov	sl, r3
 8009b1c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009b20:	b10a      	cbz	r2, 8009b26 <_vfiprintf_r+0x86>
 8009b22:	2a25      	cmp	r2, #37	; 0x25
 8009b24:	d1f9      	bne.n	8009b1a <_vfiprintf_r+0x7a>
 8009b26:	ebba 0b04 	subs.w	fp, sl, r4
 8009b2a:	d00b      	beq.n	8009b44 <_vfiprintf_r+0xa4>
 8009b2c:	465b      	mov	r3, fp
 8009b2e:	4622      	mov	r2, r4
 8009b30:	4629      	mov	r1, r5
 8009b32:	4630      	mov	r0, r6
 8009b34:	f7ff ffa1 	bl	8009a7a <__sfputs_r>
 8009b38:	3001      	adds	r0, #1
 8009b3a:	f000 80a9 	beq.w	8009c90 <_vfiprintf_r+0x1f0>
 8009b3e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8009b40:	445a      	add	r2, fp
 8009b42:	9209      	str	r2, [sp, #36]	; 0x24
 8009b44:	f89a 3000 	ldrb.w	r3, [sl]
 8009b48:	2b00      	cmp	r3, #0
 8009b4a:	f000 80a1 	beq.w	8009c90 <_vfiprintf_r+0x1f0>
 8009b4e:	2300      	movs	r3, #0
 8009b50:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8009b54:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8009b58:	f10a 0a01 	add.w	sl, sl, #1
 8009b5c:	9304      	str	r3, [sp, #16]
 8009b5e:	9307      	str	r3, [sp, #28]
 8009b60:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8009b64:	931a      	str	r3, [sp, #104]	; 0x68
 8009b66:	4654      	mov	r4, sl
 8009b68:	2205      	movs	r2, #5
 8009b6a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009b6e:	4854      	ldr	r0, [pc, #336]	; (8009cc0 <_vfiprintf_r+0x220>)
 8009b70:	f7f6 fb2e 	bl	80001d0 <memchr>
 8009b74:	9a04      	ldr	r2, [sp, #16]
 8009b76:	b9d8      	cbnz	r0, 8009bb0 <_vfiprintf_r+0x110>
 8009b78:	06d1      	lsls	r1, r2, #27
 8009b7a:	bf44      	itt	mi
 8009b7c:	2320      	movmi	r3, #32
 8009b7e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8009b82:	0713      	lsls	r3, r2, #28
 8009b84:	bf44      	itt	mi
 8009b86:	232b      	movmi	r3, #43	; 0x2b
 8009b88:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8009b8c:	f89a 3000 	ldrb.w	r3, [sl]
 8009b90:	2b2a      	cmp	r3, #42	; 0x2a
 8009b92:	d015      	beq.n	8009bc0 <_vfiprintf_r+0x120>
 8009b94:	9a07      	ldr	r2, [sp, #28]
 8009b96:	4654      	mov	r4, sl
 8009b98:	2000      	movs	r0, #0
 8009b9a:	f04f 0c0a 	mov.w	ip, #10
 8009b9e:	4621      	mov	r1, r4
 8009ba0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8009ba4:	3b30      	subs	r3, #48	; 0x30
 8009ba6:	2b09      	cmp	r3, #9
 8009ba8:	d94d      	bls.n	8009c46 <_vfiprintf_r+0x1a6>
 8009baa:	b1b0      	cbz	r0, 8009bda <_vfiprintf_r+0x13a>
 8009bac:	9207      	str	r2, [sp, #28]
 8009bae:	e014      	b.n	8009bda <_vfiprintf_r+0x13a>
 8009bb0:	eba0 0308 	sub.w	r3, r0, r8
 8009bb4:	fa09 f303 	lsl.w	r3, r9, r3
 8009bb8:	4313      	orrs	r3, r2
 8009bba:	9304      	str	r3, [sp, #16]
 8009bbc:	46a2      	mov	sl, r4
 8009bbe:	e7d2      	b.n	8009b66 <_vfiprintf_r+0xc6>
 8009bc0:	9b03      	ldr	r3, [sp, #12]
 8009bc2:	1d19      	adds	r1, r3, #4
 8009bc4:	681b      	ldr	r3, [r3, #0]
 8009bc6:	9103      	str	r1, [sp, #12]
 8009bc8:	2b00      	cmp	r3, #0
 8009bca:	bfbb      	ittet	lt
 8009bcc:	425b      	neglt	r3, r3
 8009bce:	f042 0202 	orrlt.w	r2, r2, #2
 8009bd2:	9307      	strge	r3, [sp, #28]
 8009bd4:	9307      	strlt	r3, [sp, #28]
 8009bd6:	bfb8      	it	lt
 8009bd8:	9204      	strlt	r2, [sp, #16]
 8009bda:	7823      	ldrb	r3, [r4, #0]
 8009bdc:	2b2e      	cmp	r3, #46	; 0x2e
 8009bde:	d10c      	bne.n	8009bfa <_vfiprintf_r+0x15a>
 8009be0:	7863      	ldrb	r3, [r4, #1]
 8009be2:	2b2a      	cmp	r3, #42	; 0x2a
 8009be4:	d134      	bne.n	8009c50 <_vfiprintf_r+0x1b0>
 8009be6:	9b03      	ldr	r3, [sp, #12]
 8009be8:	1d1a      	adds	r2, r3, #4
 8009bea:	681b      	ldr	r3, [r3, #0]
 8009bec:	9203      	str	r2, [sp, #12]
 8009bee:	2b00      	cmp	r3, #0
 8009bf0:	bfb8      	it	lt
 8009bf2:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8009bf6:	3402      	adds	r4, #2
 8009bf8:	9305      	str	r3, [sp, #20]
 8009bfa:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8009cd0 <_vfiprintf_r+0x230>
 8009bfe:	7821      	ldrb	r1, [r4, #0]
 8009c00:	2203      	movs	r2, #3
 8009c02:	4650      	mov	r0, sl
 8009c04:	f7f6 fae4 	bl	80001d0 <memchr>
 8009c08:	b138      	cbz	r0, 8009c1a <_vfiprintf_r+0x17a>
 8009c0a:	9b04      	ldr	r3, [sp, #16]
 8009c0c:	eba0 000a 	sub.w	r0, r0, sl
 8009c10:	2240      	movs	r2, #64	; 0x40
 8009c12:	4082      	lsls	r2, r0
 8009c14:	4313      	orrs	r3, r2
 8009c16:	3401      	adds	r4, #1
 8009c18:	9304      	str	r3, [sp, #16]
 8009c1a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009c1e:	4829      	ldr	r0, [pc, #164]	; (8009cc4 <_vfiprintf_r+0x224>)
 8009c20:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8009c24:	2206      	movs	r2, #6
 8009c26:	f7f6 fad3 	bl	80001d0 <memchr>
 8009c2a:	2800      	cmp	r0, #0
 8009c2c:	d03f      	beq.n	8009cae <_vfiprintf_r+0x20e>
 8009c2e:	4b26      	ldr	r3, [pc, #152]	; (8009cc8 <_vfiprintf_r+0x228>)
 8009c30:	bb1b      	cbnz	r3, 8009c7a <_vfiprintf_r+0x1da>
 8009c32:	9b03      	ldr	r3, [sp, #12]
 8009c34:	3307      	adds	r3, #7
 8009c36:	f023 0307 	bic.w	r3, r3, #7
 8009c3a:	3308      	adds	r3, #8
 8009c3c:	9303      	str	r3, [sp, #12]
 8009c3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009c40:	443b      	add	r3, r7
 8009c42:	9309      	str	r3, [sp, #36]	; 0x24
 8009c44:	e768      	b.n	8009b18 <_vfiprintf_r+0x78>
 8009c46:	fb0c 3202 	mla	r2, ip, r2, r3
 8009c4a:	460c      	mov	r4, r1
 8009c4c:	2001      	movs	r0, #1
 8009c4e:	e7a6      	b.n	8009b9e <_vfiprintf_r+0xfe>
 8009c50:	2300      	movs	r3, #0
 8009c52:	3401      	adds	r4, #1
 8009c54:	9305      	str	r3, [sp, #20]
 8009c56:	4619      	mov	r1, r3
 8009c58:	f04f 0c0a 	mov.w	ip, #10
 8009c5c:	4620      	mov	r0, r4
 8009c5e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8009c62:	3a30      	subs	r2, #48	; 0x30
 8009c64:	2a09      	cmp	r2, #9
 8009c66:	d903      	bls.n	8009c70 <_vfiprintf_r+0x1d0>
 8009c68:	2b00      	cmp	r3, #0
 8009c6a:	d0c6      	beq.n	8009bfa <_vfiprintf_r+0x15a>
 8009c6c:	9105      	str	r1, [sp, #20]
 8009c6e:	e7c4      	b.n	8009bfa <_vfiprintf_r+0x15a>
 8009c70:	fb0c 2101 	mla	r1, ip, r1, r2
 8009c74:	4604      	mov	r4, r0
 8009c76:	2301      	movs	r3, #1
 8009c78:	e7f0      	b.n	8009c5c <_vfiprintf_r+0x1bc>
 8009c7a:	ab03      	add	r3, sp, #12
 8009c7c:	9300      	str	r3, [sp, #0]
 8009c7e:	462a      	mov	r2, r5
 8009c80:	4b12      	ldr	r3, [pc, #72]	; (8009ccc <_vfiprintf_r+0x22c>)
 8009c82:	a904      	add	r1, sp, #16
 8009c84:	4630      	mov	r0, r6
 8009c86:	f7fc ffc1 	bl	8006c0c <_printf_float>
 8009c8a:	4607      	mov	r7, r0
 8009c8c:	1c78      	adds	r0, r7, #1
 8009c8e:	d1d6      	bne.n	8009c3e <_vfiprintf_r+0x19e>
 8009c90:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8009c92:	07d9      	lsls	r1, r3, #31
 8009c94:	d405      	bmi.n	8009ca2 <_vfiprintf_r+0x202>
 8009c96:	89ab      	ldrh	r3, [r5, #12]
 8009c98:	059a      	lsls	r2, r3, #22
 8009c9a:	d402      	bmi.n	8009ca2 <_vfiprintf_r+0x202>
 8009c9c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8009c9e:	f7fe fb72 	bl	8008386 <__retarget_lock_release_recursive>
 8009ca2:	89ab      	ldrh	r3, [r5, #12]
 8009ca4:	065b      	lsls	r3, r3, #25
 8009ca6:	f53f af1d 	bmi.w	8009ae4 <_vfiprintf_r+0x44>
 8009caa:	9809      	ldr	r0, [sp, #36]	; 0x24
 8009cac:	e71c      	b.n	8009ae8 <_vfiprintf_r+0x48>
 8009cae:	ab03      	add	r3, sp, #12
 8009cb0:	9300      	str	r3, [sp, #0]
 8009cb2:	462a      	mov	r2, r5
 8009cb4:	4b05      	ldr	r3, [pc, #20]	; (8009ccc <_vfiprintf_r+0x22c>)
 8009cb6:	a904      	add	r1, sp, #16
 8009cb8:	4630      	mov	r0, r6
 8009cba:	f7fd fa4b 	bl	8007154 <_printf_i>
 8009cbe:	e7e4      	b.n	8009c8a <_vfiprintf_r+0x1ea>
 8009cc0:	0800c049 	.word	0x0800c049
 8009cc4:	0800c053 	.word	0x0800c053
 8009cc8:	08006c0d 	.word	0x08006c0d
 8009ccc:	08009a7b 	.word	0x08009a7b
 8009cd0:	0800c04f 	.word	0x0800c04f

08009cd4 <malloc>:
 8009cd4:	4b02      	ldr	r3, [pc, #8]	; (8009ce0 <malloc+0xc>)
 8009cd6:	4601      	mov	r1, r0
 8009cd8:	6818      	ldr	r0, [r3, #0]
 8009cda:	f000 b823 	b.w	8009d24 <_malloc_r>
 8009cde:	bf00      	nop
 8009ce0:	200001ec 	.word	0x200001ec

08009ce4 <sbrk_aligned>:
 8009ce4:	b570      	push	{r4, r5, r6, lr}
 8009ce6:	4e0e      	ldr	r6, [pc, #56]	; (8009d20 <sbrk_aligned+0x3c>)
 8009ce8:	460c      	mov	r4, r1
 8009cea:	6831      	ldr	r1, [r6, #0]
 8009cec:	4605      	mov	r5, r0
 8009cee:	b911      	cbnz	r1, 8009cf6 <sbrk_aligned+0x12>
 8009cf0:	f001 f80a 	bl	800ad08 <_sbrk_r>
 8009cf4:	6030      	str	r0, [r6, #0]
 8009cf6:	4621      	mov	r1, r4
 8009cf8:	4628      	mov	r0, r5
 8009cfa:	f001 f805 	bl	800ad08 <_sbrk_r>
 8009cfe:	1c43      	adds	r3, r0, #1
 8009d00:	d00a      	beq.n	8009d18 <sbrk_aligned+0x34>
 8009d02:	1cc4      	adds	r4, r0, #3
 8009d04:	f024 0403 	bic.w	r4, r4, #3
 8009d08:	42a0      	cmp	r0, r4
 8009d0a:	d007      	beq.n	8009d1c <sbrk_aligned+0x38>
 8009d0c:	1a21      	subs	r1, r4, r0
 8009d0e:	4628      	mov	r0, r5
 8009d10:	f000 fffa 	bl	800ad08 <_sbrk_r>
 8009d14:	3001      	adds	r0, #1
 8009d16:	d101      	bne.n	8009d1c <sbrk_aligned+0x38>
 8009d18:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8009d1c:	4620      	mov	r0, r4
 8009d1e:	bd70      	pop	{r4, r5, r6, pc}
 8009d20:	20000f8c 	.word	0x20000f8c

08009d24 <_malloc_r>:
 8009d24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009d28:	1ccd      	adds	r5, r1, #3
 8009d2a:	f025 0503 	bic.w	r5, r5, #3
 8009d2e:	3508      	adds	r5, #8
 8009d30:	2d0c      	cmp	r5, #12
 8009d32:	bf38      	it	cc
 8009d34:	250c      	movcc	r5, #12
 8009d36:	2d00      	cmp	r5, #0
 8009d38:	4607      	mov	r7, r0
 8009d3a:	db01      	blt.n	8009d40 <_malloc_r+0x1c>
 8009d3c:	42a9      	cmp	r1, r5
 8009d3e:	d905      	bls.n	8009d4c <_malloc_r+0x28>
 8009d40:	230c      	movs	r3, #12
 8009d42:	603b      	str	r3, [r7, #0]
 8009d44:	2600      	movs	r6, #0
 8009d46:	4630      	mov	r0, r6
 8009d48:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009d4c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8009e20 <_malloc_r+0xfc>
 8009d50:	f000 f928 	bl	8009fa4 <__malloc_lock>
 8009d54:	f8d8 3000 	ldr.w	r3, [r8]
 8009d58:	461c      	mov	r4, r3
 8009d5a:	bb5c      	cbnz	r4, 8009db4 <_malloc_r+0x90>
 8009d5c:	4629      	mov	r1, r5
 8009d5e:	4638      	mov	r0, r7
 8009d60:	f7ff ffc0 	bl	8009ce4 <sbrk_aligned>
 8009d64:	1c43      	adds	r3, r0, #1
 8009d66:	4604      	mov	r4, r0
 8009d68:	d155      	bne.n	8009e16 <_malloc_r+0xf2>
 8009d6a:	f8d8 4000 	ldr.w	r4, [r8]
 8009d6e:	4626      	mov	r6, r4
 8009d70:	2e00      	cmp	r6, #0
 8009d72:	d145      	bne.n	8009e00 <_malloc_r+0xdc>
 8009d74:	2c00      	cmp	r4, #0
 8009d76:	d048      	beq.n	8009e0a <_malloc_r+0xe6>
 8009d78:	6823      	ldr	r3, [r4, #0]
 8009d7a:	4631      	mov	r1, r6
 8009d7c:	4638      	mov	r0, r7
 8009d7e:	eb04 0903 	add.w	r9, r4, r3
 8009d82:	f000 ffc1 	bl	800ad08 <_sbrk_r>
 8009d86:	4581      	cmp	r9, r0
 8009d88:	d13f      	bne.n	8009e0a <_malloc_r+0xe6>
 8009d8a:	6821      	ldr	r1, [r4, #0]
 8009d8c:	1a6d      	subs	r5, r5, r1
 8009d8e:	4629      	mov	r1, r5
 8009d90:	4638      	mov	r0, r7
 8009d92:	f7ff ffa7 	bl	8009ce4 <sbrk_aligned>
 8009d96:	3001      	adds	r0, #1
 8009d98:	d037      	beq.n	8009e0a <_malloc_r+0xe6>
 8009d9a:	6823      	ldr	r3, [r4, #0]
 8009d9c:	442b      	add	r3, r5
 8009d9e:	6023      	str	r3, [r4, #0]
 8009da0:	f8d8 3000 	ldr.w	r3, [r8]
 8009da4:	2b00      	cmp	r3, #0
 8009da6:	d038      	beq.n	8009e1a <_malloc_r+0xf6>
 8009da8:	685a      	ldr	r2, [r3, #4]
 8009daa:	42a2      	cmp	r2, r4
 8009dac:	d12b      	bne.n	8009e06 <_malloc_r+0xe2>
 8009dae:	2200      	movs	r2, #0
 8009db0:	605a      	str	r2, [r3, #4]
 8009db2:	e00f      	b.n	8009dd4 <_malloc_r+0xb0>
 8009db4:	6822      	ldr	r2, [r4, #0]
 8009db6:	1b52      	subs	r2, r2, r5
 8009db8:	d41f      	bmi.n	8009dfa <_malloc_r+0xd6>
 8009dba:	2a0b      	cmp	r2, #11
 8009dbc:	d917      	bls.n	8009dee <_malloc_r+0xca>
 8009dbe:	1961      	adds	r1, r4, r5
 8009dc0:	42a3      	cmp	r3, r4
 8009dc2:	6025      	str	r5, [r4, #0]
 8009dc4:	bf18      	it	ne
 8009dc6:	6059      	strne	r1, [r3, #4]
 8009dc8:	6863      	ldr	r3, [r4, #4]
 8009dca:	bf08      	it	eq
 8009dcc:	f8c8 1000 	streq.w	r1, [r8]
 8009dd0:	5162      	str	r2, [r4, r5]
 8009dd2:	604b      	str	r3, [r1, #4]
 8009dd4:	4638      	mov	r0, r7
 8009dd6:	f104 060b 	add.w	r6, r4, #11
 8009dda:	f000 f8e9 	bl	8009fb0 <__malloc_unlock>
 8009dde:	f026 0607 	bic.w	r6, r6, #7
 8009de2:	1d23      	adds	r3, r4, #4
 8009de4:	1af2      	subs	r2, r6, r3
 8009de6:	d0ae      	beq.n	8009d46 <_malloc_r+0x22>
 8009de8:	1b9b      	subs	r3, r3, r6
 8009dea:	50a3      	str	r3, [r4, r2]
 8009dec:	e7ab      	b.n	8009d46 <_malloc_r+0x22>
 8009dee:	42a3      	cmp	r3, r4
 8009df0:	6862      	ldr	r2, [r4, #4]
 8009df2:	d1dd      	bne.n	8009db0 <_malloc_r+0x8c>
 8009df4:	f8c8 2000 	str.w	r2, [r8]
 8009df8:	e7ec      	b.n	8009dd4 <_malloc_r+0xb0>
 8009dfa:	4623      	mov	r3, r4
 8009dfc:	6864      	ldr	r4, [r4, #4]
 8009dfe:	e7ac      	b.n	8009d5a <_malloc_r+0x36>
 8009e00:	4634      	mov	r4, r6
 8009e02:	6876      	ldr	r6, [r6, #4]
 8009e04:	e7b4      	b.n	8009d70 <_malloc_r+0x4c>
 8009e06:	4613      	mov	r3, r2
 8009e08:	e7cc      	b.n	8009da4 <_malloc_r+0x80>
 8009e0a:	230c      	movs	r3, #12
 8009e0c:	603b      	str	r3, [r7, #0]
 8009e0e:	4638      	mov	r0, r7
 8009e10:	f000 f8ce 	bl	8009fb0 <__malloc_unlock>
 8009e14:	e797      	b.n	8009d46 <_malloc_r+0x22>
 8009e16:	6025      	str	r5, [r4, #0]
 8009e18:	e7dc      	b.n	8009dd4 <_malloc_r+0xb0>
 8009e1a:	605b      	str	r3, [r3, #4]
 8009e1c:	deff      	udf	#255	; 0xff
 8009e1e:	bf00      	nop
 8009e20:	20000f88 	.word	0x20000f88

08009e24 <__ascii_mbtowc>:
 8009e24:	b082      	sub	sp, #8
 8009e26:	b901      	cbnz	r1, 8009e2a <__ascii_mbtowc+0x6>
 8009e28:	a901      	add	r1, sp, #4
 8009e2a:	b142      	cbz	r2, 8009e3e <__ascii_mbtowc+0x1a>
 8009e2c:	b14b      	cbz	r3, 8009e42 <__ascii_mbtowc+0x1e>
 8009e2e:	7813      	ldrb	r3, [r2, #0]
 8009e30:	600b      	str	r3, [r1, #0]
 8009e32:	7812      	ldrb	r2, [r2, #0]
 8009e34:	1e10      	subs	r0, r2, #0
 8009e36:	bf18      	it	ne
 8009e38:	2001      	movne	r0, #1
 8009e3a:	b002      	add	sp, #8
 8009e3c:	4770      	bx	lr
 8009e3e:	4610      	mov	r0, r2
 8009e40:	e7fb      	b.n	8009e3a <__ascii_mbtowc+0x16>
 8009e42:	f06f 0001 	mvn.w	r0, #1
 8009e46:	e7f8      	b.n	8009e3a <__ascii_mbtowc+0x16>

08009e48 <__sflush_r>:
 8009e48:	898a      	ldrh	r2, [r1, #12]
 8009e4a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009e4e:	4605      	mov	r5, r0
 8009e50:	0710      	lsls	r0, r2, #28
 8009e52:	460c      	mov	r4, r1
 8009e54:	d458      	bmi.n	8009f08 <__sflush_r+0xc0>
 8009e56:	684b      	ldr	r3, [r1, #4]
 8009e58:	2b00      	cmp	r3, #0
 8009e5a:	dc05      	bgt.n	8009e68 <__sflush_r+0x20>
 8009e5c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8009e5e:	2b00      	cmp	r3, #0
 8009e60:	dc02      	bgt.n	8009e68 <__sflush_r+0x20>
 8009e62:	2000      	movs	r0, #0
 8009e64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009e68:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8009e6a:	2e00      	cmp	r6, #0
 8009e6c:	d0f9      	beq.n	8009e62 <__sflush_r+0x1a>
 8009e6e:	2300      	movs	r3, #0
 8009e70:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8009e74:	682f      	ldr	r7, [r5, #0]
 8009e76:	6a21      	ldr	r1, [r4, #32]
 8009e78:	602b      	str	r3, [r5, #0]
 8009e7a:	d032      	beq.n	8009ee2 <__sflush_r+0x9a>
 8009e7c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8009e7e:	89a3      	ldrh	r3, [r4, #12]
 8009e80:	075a      	lsls	r2, r3, #29
 8009e82:	d505      	bpl.n	8009e90 <__sflush_r+0x48>
 8009e84:	6863      	ldr	r3, [r4, #4]
 8009e86:	1ac0      	subs	r0, r0, r3
 8009e88:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8009e8a:	b10b      	cbz	r3, 8009e90 <__sflush_r+0x48>
 8009e8c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009e8e:	1ac0      	subs	r0, r0, r3
 8009e90:	2300      	movs	r3, #0
 8009e92:	4602      	mov	r2, r0
 8009e94:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8009e96:	6a21      	ldr	r1, [r4, #32]
 8009e98:	4628      	mov	r0, r5
 8009e9a:	47b0      	blx	r6
 8009e9c:	1c43      	adds	r3, r0, #1
 8009e9e:	89a3      	ldrh	r3, [r4, #12]
 8009ea0:	d106      	bne.n	8009eb0 <__sflush_r+0x68>
 8009ea2:	6829      	ldr	r1, [r5, #0]
 8009ea4:	291d      	cmp	r1, #29
 8009ea6:	d82b      	bhi.n	8009f00 <__sflush_r+0xb8>
 8009ea8:	4a29      	ldr	r2, [pc, #164]	; (8009f50 <__sflush_r+0x108>)
 8009eaa:	410a      	asrs	r2, r1
 8009eac:	07d6      	lsls	r6, r2, #31
 8009eae:	d427      	bmi.n	8009f00 <__sflush_r+0xb8>
 8009eb0:	2200      	movs	r2, #0
 8009eb2:	6062      	str	r2, [r4, #4]
 8009eb4:	04d9      	lsls	r1, r3, #19
 8009eb6:	6922      	ldr	r2, [r4, #16]
 8009eb8:	6022      	str	r2, [r4, #0]
 8009eba:	d504      	bpl.n	8009ec6 <__sflush_r+0x7e>
 8009ebc:	1c42      	adds	r2, r0, #1
 8009ebe:	d101      	bne.n	8009ec4 <__sflush_r+0x7c>
 8009ec0:	682b      	ldr	r3, [r5, #0]
 8009ec2:	b903      	cbnz	r3, 8009ec6 <__sflush_r+0x7e>
 8009ec4:	6560      	str	r0, [r4, #84]	; 0x54
 8009ec6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8009ec8:	602f      	str	r7, [r5, #0]
 8009eca:	2900      	cmp	r1, #0
 8009ecc:	d0c9      	beq.n	8009e62 <__sflush_r+0x1a>
 8009ece:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8009ed2:	4299      	cmp	r1, r3
 8009ed4:	d002      	beq.n	8009edc <__sflush_r+0x94>
 8009ed6:	4628      	mov	r0, r5
 8009ed8:	f000 ff56 	bl	800ad88 <_free_r>
 8009edc:	2000      	movs	r0, #0
 8009ede:	6360      	str	r0, [r4, #52]	; 0x34
 8009ee0:	e7c0      	b.n	8009e64 <__sflush_r+0x1c>
 8009ee2:	2301      	movs	r3, #1
 8009ee4:	4628      	mov	r0, r5
 8009ee6:	47b0      	blx	r6
 8009ee8:	1c41      	adds	r1, r0, #1
 8009eea:	d1c8      	bne.n	8009e7e <__sflush_r+0x36>
 8009eec:	682b      	ldr	r3, [r5, #0]
 8009eee:	2b00      	cmp	r3, #0
 8009ef0:	d0c5      	beq.n	8009e7e <__sflush_r+0x36>
 8009ef2:	2b1d      	cmp	r3, #29
 8009ef4:	d001      	beq.n	8009efa <__sflush_r+0xb2>
 8009ef6:	2b16      	cmp	r3, #22
 8009ef8:	d101      	bne.n	8009efe <__sflush_r+0xb6>
 8009efa:	602f      	str	r7, [r5, #0]
 8009efc:	e7b1      	b.n	8009e62 <__sflush_r+0x1a>
 8009efe:	89a3      	ldrh	r3, [r4, #12]
 8009f00:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009f04:	81a3      	strh	r3, [r4, #12]
 8009f06:	e7ad      	b.n	8009e64 <__sflush_r+0x1c>
 8009f08:	690f      	ldr	r7, [r1, #16]
 8009f0a:	2f00      	cmp	r7, #0
 8009f0c:	d0a9      	beq.n	8009e62 <__sflush_r+0x1a>
 8009f0e:	0793      	lsls	r3, r2, #30
 8009f10:	680e      	ldr	r6, [r1, #0]
 8009f12:	bf08      	it	eq
 8009f14:	694b      	ldreq	r3, [r1, #20]
 8009f16:	600f      	str	r7, [r1, #0]
 8009f18:	bf18      	it	ne
 8009f1a:	2300      	movne	r3, #0
 8009f1c:	eba6 0807 	sub.w	r8, r6, r7
 8009f20:	608b      	str	r3, [r1, #8]
 8009f22:	f1b8 0f00 	cmp.w	r8, #0
 8009f26:	dd9c      	ble.n	8009e62 <__sflush_r+0x1a>
 8009f28:	6a21      	ldr	r1, [r4, #32]
 8009f2a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8009f2c:	4643      	mov	r3, r8
 8009f2e:	463a      	mov	r2, r7
 8009f30:	4628      	mov	r0, r5
 8009f32:	47b0      	blx	r6
 8009f34:	2800      	cmp	r0, #0
 8009f36:	dc06      	bgt.n	8009f46 <__sflush_r+0xfe>
 8009f38:	89a3      	ldrh	r3, [r4, #12]
 8009f3a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009f3e:	81a3      	strh	r3, [r4, #12]
 8009f40:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009f44:	e78e      	b.n	8009e64 <__sflush_r+0x1c>
 8009f46:	4407      	add	r7, r0
 8009f48:	eba8 0800 	sub.w	r8, r8, r0
 8009f4c:	e7e9      	b.n	8009f22 <__sflush_r+0xda>
 8009f4e:	bf00      	nop
 8009f50:	dfbffffe 	.word	0xdfbffffe

08009f54 <_fflush_r>:
 8009f54:	b538      	push	{r3, r4, r5, lr}
 8009f56:	690b      	ldr	r3, [r1, #16]
 8009f58:	4605      	mov	r5, r0
 8009f5a:	460c      	mov	r4, r1
 8009f5c:	b913      	cbnz	r3, 8009f64 <_fflush_r+0x10>
 8009f5e:	2500      	movs	r5, #0
 8009f60:	4628      	mov	r0, r5
 8009f62:	bd38      	pop	{r3, r4, r5, pc}
 8009f64:	b118      	cbz	r0, 8009f6e <_fflush_r+0x1a>
 8009f66:	6a03      	ldr	r3, [r0, #32]
 8009f68:	b90b      	cbnz	r3, 8009f6e <_fflush_r+0x1a>
 8009f6a:	f7fd faaf 	bl	80074cc <__sinit>
 8009f6e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8009f72:	2b00      	cmp	r3, #0
 8009f74:	d0f3      	beq.n	8009f5e <_fflush_r+0xa>
 8009f76:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8009f78:	07d0      	lsls	r0, r2, #31
 8009f7a:	d404      	bmi.n	8009f86 <_fflush_r+0x32>
 8009f7c:	0599      	lsls	r1, r3, #22
 8009f7e:	d402      	bmi.n	8009f86 <_fflush_r+0x32>
 8009f80:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009f82:	f7fe f9ff 	bl	8008384 <__retarget_lock_acquire_recursive>
 8009f86:	4628      	mov	r0, r5
 8009f88:	4621      	mov	r1, r4
 8009f8a:	f7ff ff5d 	bl	8009e48 <__sflush_r>
 8009f8e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8009f90:	07da      	lsls	r2, r3, #31
 8009f92:	4605      	mov	r5, r0
 8009f94:	d4e4      	bmi.n	8009f60 <_fflush_r+0xc>
 8009f96:	89a3      	ldrh	r3, [r4, #12]
 8009f98:	059b      	lsls	r3, r3, #22
 8009f9a:	d4e1      	bmi.n	8009f60 <_fflush_r+0xc>
 8009f9c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009f9e:	f7fe f9f2 	bl	8008386 <__retarget_lock_release_recursive>
 8009fa2:	e7dd      	b.n	8009f60 <_fflush_r+0xc>

08009fa4 <__malloc_lock>:
 8009fa4:	4801      	ldr	r0, [pc, #4]	; (8009fac <__malloc_lock+0x8>)
 8009fa6:	f7fe b9ed 	b.w	8008384 <__retarget_lock_acquire_recursive>
 8009faa:	bf00      	nop
 8009fac:	20000f84 	.word	0x20000f84

08009fb0 <__malloc_unlock>:
 8009fb0:	4801      	ldr	r0, [pc, #4]	; (8009fb8 <__malloc_unlock+0x8>)
 8009fb2:	f7fe b9e8 	b.w	8008386 <__retarget_lock_release_recursive>
 8009fb6:	bf00      	nop
 8009fb8:	20000f84 	.word	0x20000f84

08009fbc <_Balloc>:
 8009fbc:	b570      	push	{r4, r5, r6, lr}
 8009fbe:	69c6      	ldr	r6, [r0, #28]
 8009fc0:	4604      	mov	r4, r0
 8009fc2:	460d      	mov	r5, r1
 8009fc4:	b976      	cbnz	r6, 8009fe4 <_Balloc+0x28>
 8009fc6:	2010      	movs	r0, #16
 8009fc8:	f7ff fe84 	bl	8009cd4 <malloc>
 8009fcc:	4602      	mov	r2, r0
 8009fce:	61e0      	str	r0, [r4, #28]
 8009fd0:	b920      	cbnz	r0, 8009fdc <_Balloc+0x20>
 8009fd2:	4b18      	ldr	r3, [pc, #96]	; (800a034 <_Balloc+0x78>)
 8009fd4:	4818      	ldr	r0, [pc, #96]	; (800a038 <_Balloc+0x7c>)
 8009fd6:	216b      	movs	r1, #107	; 0x6b
 8009fd8:	f7fe f9ee 	bl	80083b8 <__assert_func>
 8009fdc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8009fe0:	6006      	str	r6, [r0, #0]
 8009fe2:	60c6      	str	r6, [r0, #12]
 8009fe4:	69e6      	ldr	r6, [r4, #28]
 8009fe6:	68f3      	ldr	r3, [r6, #12]
 8009fe8:	b183      	cbz	r3, 800a00c <_Balloc+0x50>
 8009fea:	69e3      	ldr	r3, [r4, #28]
 8009fec:	68db      	ldr	r3, [r3, #12]
 8009fee:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8009ff2:	b9b8      	cbnz	r0, 800a024 <_Balloc+0x68>
 8009ff4:	2101      	movs	r1, #1
 8009ff6:	fa01 f605 	lsl.w	r6, r1, r5
 8009ffa:	1d72      	adds	r2, r6, #5
 8009ffc:	0092      	lsls	r2, r2, #2
 8009ffe:	4620      	mov	r0, r4
 800a000:	f000 feab 	bl	800ad5a <_calloc_r>
 800a004:	b160      	cbz	r0, 800a020 <_Balloc+0x64>
 800a006:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800a00a:	e00e      	b.n	800a02a <_Balloc+0x6e>
 800a00c:	2221      	movs	r2, #33	; 0x21
 800a00e:	2104      	movs	r1, #4
 800a010:	4620      	mov	r0, r4
 800a012:	f000 fea2 	bl	800ad5a <_calloc_r>
 800a016:	69e3      	ldr	r3, [r4, #28]
 800a018:	60f0      	str	r0, [r6, #12]
 800a01a:	68db      	ldr	r3, [r3, #12]
 800a01c:	2b00      	cmp	r3, #0
 800a01e:	d1e4      	bne.n	8009fea <_Balloc+0x2e>
 800a020:	2000      	movs	r0, #0
 800a022:	bd70      	pop	{r4, r5, r6, pc}
 800a024:	6802      	ldr	r2, [r0, #0]
 800a026:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800a02a:	2300      	movs	r3, #0
 800a02c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800a030:	e7f7      	b.n	800a022 <_Balloc+0x66>
 800a032:	bf00      	nop
 800a034:	0800bdbd 	.word	0x0800bdbd
 800a038:	0800c05a 	.word	0x0800c05a

0800a03c <_Bfree>:
 800a03c:	b570      	push	{r4, r5, r6, lr}
 800a03e:	69c6      	ldr	r6, [r0, #28]
 800a040:	4605      	mov	r5, r0
 800a042:	460c      	mov	r4, r1
 800a044:	b976      	cbnz	r6, 800a064 <_Bfree+0x28>
 800a046:	2010      	movs	r0, #16
 800a048:	f7ff fe44 	bl	8009cd4 <malloc>
 800a04c:	4602      	mov	r2, r0
 800a04e:	61e8      	str	r0, [r5, #28]
 800a050:	b920      	cbnz	r0, 800a05c <_Bfree+0x20>
 800a052:	4b09      	ldr	r3, [pc, #36]	; (800a078 <_Bfree+0x3c>)
 800a054:	4809      	ldr	r0, [pc, #36]	; (800a07c <_Bfree+0x40>)
 800a056:	218f      	movs	r1, #143	; 0x8f
 800a058:	f7fe f9ae 	bl	80083b8 <__assert_func>
 800a05c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800a060:	6006      	str	r6, [r0, #0]
 800a062:	60c6      	str	r6, [r0, #12]
 800a064:	b13c      	cbz	r4, 800a076 <_Bfree+0x3a>
 800a066:	69eb      	ldr	r3, [r5, #28]
 800a068:	6862      	ldr	r2, [r4, #4]
 800a06a:	68db      	ldr	r3, [r3, #12]
 800a06c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800a070:	6021      	str	r1, [r4, #0]
 800a072:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800a076:	bd70      	pop	{r4, r5, r6, pc}
 800a078:	0800bdbd 	.word	0x0800bdbd
 800a07c:	0800c05a 	.word	0x0800c05a

0800a080 <__multadd>:
 800a080:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a084:	690d      	ldr	r5, [r1, #16]
 800a086:	4607      	mov	r7, r0
 800a088:	460c      	mov	r4, r1
 800a08a:	461e      	mov	r6, r3
 800a08c:	f101 0c14 	add.w	ip, r1, #20
 800a090:	2000      	movs	r0, #0
 800a092:	f8dc 3000 	ldr.w	r3, [ip]
 800a096:	b299      	uxth	r1, r3
 800a098:	fb02 6101 	mla	r1, r2, r1, r6
 800a09c:	0c1e      	lsrs	r6, r3, #16
 800a09e:	0c0b      	lsrs	r3, r1, #16
 800a0a0:	fb02 3306 	mla	r3, r2, r6, r3
 800a0a4:	b289      	uxth	r1, r1
 800a0a6:	3001      	adds	r0, #1
 800a0a8:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800a0ac:	4285      	cmp	r5, r0
 800a0ae:	f84c 1b04 	str.w	r1, [ip], #4
 800a0b2:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800a0b6:	dcec      	bgt.n	800a092 <__multadd+0x12>
 800a0b8:	b30e      	cbz	r6, 800a0fe <__multadd+0x7e>
 800a0ba:	68a3      	ldr	r3, [r4, #8]
 800a0bc:	42ab      	cmp	r3, r5
 800a0be:	dc19      	bgt.n	800a0f4 <__multadd+0x74>
 800a0c0:	6861      	ldr	r1, [r4, #4]
 800a0c2:	4638      	mov	r0, r7
 800a0c4:	3101      	adds	r1, #1
 800a0c6:	f7ff ff79 	bl	8009fbc <_Balloc>
 800a0ca:	4680      	mov	r8, r0
 800a0cc:	b928      	cbnz	r0, 800a0da <__multadd+0x5a>
 800a0ce:	4602      	mov	r2, r0
 800a0d0:	4b0c      	ldr	r3, [pc, #48]	; (800a104 <__multadd+0x84>)
 800a0d2:	480d      	ldr	r0, [pc, #52]	; (800a108 <__multadd+0x88>)
 800a0d4:	21ba      	movs	r1, #186	; 0xba
 800a0d6:	f7fe f96f 	bl	80083b8 <__assert_func>
 800a0da:	6922      	ldr	r2, [r4, #16]
 800a0dc:	3202      	adds	r2, #2
 800a0de:	f104 010c 	add.w	r1, r4, #12
 800a0e2:	0092      	lsls	r2, r2, #2
 800a0e4:	300c      	adds	r0, #12
 800a0e6:	f7fe f94f 	bl	8008388 <memcpy>
 800a0ea:	4621      	mov	r1, r4
 800a0ec:	4638      	mov	r0, r7
 800a0ee:	f7ff ffa5 	bl	800a03c <_Bfree>
 800a0f2:	4644      	mov	r4, r8
 800a0f4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800a0f8:	3501      	adds	r5, #1
 800a0fa:	615e      	str	r6, [r3, #20]
 800a0fc:	6125      	str	r5, [r4, #16]
 800a0fe:	4620      	mov	r0, r4
 800a100:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a104:	0800bfd8 	.word	0x0800bfd8
 800a108:	0800c05a 	.word	0x0800c05a

0800a10c <__s2b>:
 800a10c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a110:	460c      	mov	r4, r1
 800a112:	4615      	mov	r5, r2
 800a114:	461f      	mov	r7, r3
 800a116:	2209      	movs	r2, #9
 800a118:	3308      	adds	r3, #8
 800a11a:	4606      	mov	r6, r0
 800a11c:	fb93 f3f2 	sdiv	r3, r3, r2
 800a120:	2100      	movs	r1, #0
 800a122:	2201      	movs	r2, #1
 800a124:	429a      	cmp	r2, r3
 800a126:	db09      	blt.n	800a13c <__s2b+0x30>
 800a128:	4630      	mov	r0, r6
 800a12a:	f7ff ff47 	bl	8009fbc <_Balloc>
 800a12e:	b940      	cbnz	r0, 800a142 <__s2b+0x36>
 800a130:	4602      	mov	r2, r0
 800a132:	4b19      	ldr	r3, [pc, #100]	; (800a198 <__s2b+0x8c>)
 800a134:	4819      	ldr	r0, [pc, #100]	; (800a19c <__s2b+0x90>)
 800a136:	21d3      	movs	r1, #211	; 0xd3
 800a138:	f7fe f93e 	bl	80083b8 <__assert_func>
 800a13c:	0052      	lsls	r2, r2, #1
 800a13e:	3101      	adds	r1, #1
 800a140:	e7f0      	b.n	800a124 <__s2b+0x18>
 800a142:	9b08      	ldr	r3, [sp, #32]
 800a144:	6143      	str	r3, [r0, #20]
 800a146:	2d09      	cmp	r5, #9
 800a148:	f04f 0301 	mov.w	r3, #1
 800a14c:	6103      	str	r3, [r0, #16]
 800a14e:	dd16      	ble.n	800a17e <__s2b+0x72>
 800a150:	f104 0909 	add.w	r9, r4, #9
 800a154:	46c8      	mov	r8, r9
 800a156:	442c      	add	r4, r5
 800a158:	f818 3b01 	ldrb.w	r3, [r8], #1
 800a15c:	4601      	mov	r1, r0
 800a15e:	3b30      	subs	r3, #48	; 0x30
 800a160:	220a      	movs	r2, #10
 800a162:	4630      	mov	r0, r6
 800a164:	f7ff ff8c 	bl	800a080 <__multadd>
 800a168:	45a0      	cmp	r8, r4
 800a16a:	d1f5      	bne.n	800a158 <__s2b+0x4c>
 800a16c:	f1a5 0408 	sub.w	r4, r5, #8
 800a170:	444c      	add	r4, r9
 800a172:	1b2d      	subs	r5, r5, r4
 800a174:	1963      	adds	r3, r4, r5
 800a176:	42bb      	cmp	r3, r7
 800a178:	db04      	blt.n	800a184 <__s2b+0x78>
 800a17a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a17e:	340a      	adds	r4, #10
 800a180:	2509      	movs	r5, #9
 800a182:	e7f6      	b.n	800a172 <__s2b+0x66>
 800a184:	f814 3b01 	ldrb.w	r3, [r4], #1
 800a188:	4601      	mov	r1, r0
 800a18a:	3b30      	subs	r3, #48	; 0x30
 800a18c:	220a      	movs	r2, #10
 800a18e:	4630      	mov	r0, r6
 800a190:	f7ff ff76 	bl	800a080 <__multadd>
 800a194:	e7ee      	b.n	800a174 <__s2b+0x68>
 800a196:	bf00      	nop
 800a198:	0800bfd8 	.word	0x0800bfd8
 800a19c:	0800c05a 	.word	0x0800c05a

0800a1a0 <__hi0bits>:
 800a1a0:	0c03      	lsrs	r3, r0, #16
 800a1a2:	041b      	lsls	r3, r3, #16
 800a1a4:	b9d3      	cbnz	r3, 800a1dc <__hi0bits+0x3c>
 800a1a6:	0400      	lsls	r0, r0, #16
 800a1a8:	2310      	movs	r3, #16
 800a1aa:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800a1ae:	bf04      	itt	eq
 800a1b0:	0200      	lsleq	r0, r0, #8
 800a1b2:	3308      	addeq	r3, #8
 800a1b4:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800a1b8:	bf04      	itt	eq
 800a1ba:	0100      	lsleq	r0, r0, #4
 800a1bc:	3304      	addeq	r3, #4
 800a1be:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800a1c2:	bf04      	itt	eq
 800a1c4:	0080      	lsleq	r0, r0, #2
 800a1c6:	3302      	addeq	r3, #2
 800a1c8:	2800      	cmp	r0, #0
 800a1ca:	db05      	blt.n	800a1d8 <__hi0bits+0x38>
 800a1cc:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800a1d0:	f103 0301 	add.w	r3, r3, #1
 800a1d4:	bf08      	it	eq
 800a1d6:	2320      	moveq	r3, #32
 800a1d8:	4618      	mov	r0, r3
 800a1da:	4770      	bx	lr
 800a1dc:	2300      	movs	r3, #0
 800a1de:	e7e4      	b.n	800a1aa <__hi0bits+0xa>

0800a1e0 <__lo0bits>:
 800a1e0:	6803      	ldr	r3, [r0, #0]
 800a1e2:	f013 0207 	ands.w	r2, r3, #7
 800a1e6:	d00c      	beq.n	800a202 <__lo0bits+0x22>
 800a1e8:	07d9      	lsls	r1, r3, #31
 800a1ea:	d422      	bmi.n	800a232 <__lo0bits+0x52>
 800a1ec:	079a      	lsls	r2, r3, #30
 800a1ee:	bf49      	itett	mi
 800a1f0:	085b      	lsrmi	r3, r3, #1
 800a1f2:	089b      	lsrpl	r3, r3, #2
 800a1f4:	6003      	strmi	r3, [r0, #0]
 800a1f6:	2201      	movmi	r2, #1
 800a1f8:	bf5c      	itt	pl
 800a1fa:	6003      	strpl	r3, [r0, #0]
 800a1fc:	2202      	movpl	r2, #2
 800a1fe:	4610      	mov	r0, r2
 800a200:	4770      	bx	lr
 800a202:	b299      	uxth	r1, r3
 800a204:	b909      	cbnz	r1, 800a20a <__lo0bits+0x2a>
 800a206:	0c1b      	lsrs	r3, r3, #16
 800a208:	2210      	movs	r2, #16
 800a20a:	b2d9      	uxtb	r1, r3
 800a20c:	b909      	cbnz	r1, 800a212 <__lo0bits+0x32>
 800a20e:	3208      	adds	r2, #8
 800a210:	0a1b      	lsrs	r3, r3, #8
 800a212:	0719      	lsls	r1, r3, #28
 800a214:	bf04      	itt	eq
 800a216:	091b      	lsreq	r3, r3, #4
 800a218:	3204      	addeq	r2, #4
 800a21a:	0799      	lsls	r1, r3, #30
 800a21c:	bf04      	itt	eq
 800a21e:	089b      	lsreq	r3, r3, #2
 800a220:	3202      	addeq	r2, #2
 800a222:	07d9      	lsls	r1, r3, #31
 800a224:	d403      	bmi.n	800a22e <__lo0bits+0x4e>
 800a226:	085b      	lsrs	r3, r3, #1
 800a228:	f102 0201 	add.w	r2, r2, #1
 800a22c:	d003      	beq.n	800a236 <__lo0bits+0x56>
 800a22e:	6003      	str	r3, [r0, #0]
 800a230:	e7e5      	b.n	800a1fe <__lo0bits+0x1e>
 800a232:	2200      	movs	r2, #0
 800a234:	e7e3      	b.n	800a1fe <__lo0bits+0x1e>
 800a236:	2220      	movs	r2, #32
 800a238:	e7e1      	b.n	800a1fe <__lo0bits+0x1e>
	...

0800a23c <__i2b>:
 800a23c:	b510      	push	{r4, lr}
 800a23e:	460c      	mov	r4, r1
 800a240:	2101      	movs	r1, #1
 800a242:	f7ff febb 	bl	8009fbc <_Balloc>
 800a246:	4602      	mov	r2, r0
 800a248:	b928      	cbnz	r0, 800a256 <__i2b+0x1a>
 800a24a:	4b05      	ldr	r3, [pc, #20]	; (800a260 <__i2b+0x24>)
 800a24c:	4805      	ldr	r0, [pc, #20]	; (800a264 <__i2b+0x28>)
 800a24e:	f240 1145 	movw	r1, #325	; 0x145
 800a252:	f7fe f8b1 	bl	80083b8 <__assert_func>
 800a256:	2301      	movs	r3, #1
 800a258:	6144      	str	r4, [r0, #20]
 800a25a:	6103      	str	r3, [r0, #16]
 800a25c:	bd10      	pop	{r4, pc}
 800a25e:	bf00      	nop
 800a260:	0800bfd8 	.word	0x0800bfd8
 800a264:	0800c05a 	.word	0x0800c05a

0800a268 <__multiply>:
 800a268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a26c:	4691      	mov	r9, r2
 800a26e:	690a      	ldr	r2, [r1, #16]
 800a270:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800a274:	429a      	cmp	r2, r3
 800a276:	bfb8      	it	lt
 800a278:	460b      	movlt	r3, r1
 800a27a:	460c      	mov	r4, r1
 800a27c:	bfbc      	itt	lt
 800a27e:	464c      	movlt	r4, r9
 800a280:	4699      	movlt	r9, r3
 800a282:	6927      	ldr	r7, [r4, #16]
 800a284:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800a288:	68a3      	ldr	r3, [r4, #8]
 800a28a:	6861      	ldr	r1, [r4, #4]
 800a28c:	eb07 060a 	add.w	r6, r7, sl
 800a290:	42b3      	cmp	r3, r6
 800a292:	b085      	sub	sp, #20
 800a294:	bfb8      	it	lt
 800a296:	3101      	addlt	r1, #1
 800a298:	f7ff fe90 	bl	8009fbc <_Balloc>
 800a29c:	b930      	cbnz	r0, 800a2ac <__multiply+0x44>
 800a29e:	4602      	mov	r2, r0
 800a2a0:	4b44      	ldr	r3, [pc, #272]	; (800a3b4 <__multiply+0x14c>)
 800a2a2:	4845      	ldr	r0, [pc, #276]	; (800a3b8 <__multiply+0x150>)
 800a2a4:	f44f 71b1 	mov.w	r1, #354	; 0x162
 800a2a8:	f7fe f886 	bl	80083b8 <__assert_func>
 800a2ac:	f100 0514 	add.w	r5, r0, #20
 800a2b0:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800a2b4:	462b      	mov	r3, r5
 800a2b6:	2200      	movs	r2, #0
 800a2b8:	4543      	cmp	r3, r8
 800a2ba:	d321      	bcc.n	800a300 <__multiply+0x98>
 800a2bc:	f104 0314 	add.w	r3, r4, #20
 800a2c0:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800a2c4:	f109 0314 	add.w	r3, r9, #20
 800a2c8:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800a2cc:	9202      	str	r2, [sp, #8]
 800a2ce:	1b3a      	subs	r2, r7, r4
 800a2d0:	3a15      	subs	r2, #21
 800a2d2:	f022 0203 	bic.w	r2, r2, #3
 800a2d6:	3204      	adds	r2, #4
 800a2d8:	f104 0115 	add.w	r1, r4, #21
 800a2dc:	428f      	cmp	r7, r1
 800a2de:	bf38      	it	cc
 800a2e0:	2204      	movcc	r2, #4
 800a2e2:	9201      	str	r2, [sp, #4]
 800a2e4:	9a02      	ldr	r2, [sp, #8]
 800a2e6:	9303      	str	r3, [sp, #12]
 800a2e8:	429a      	cmp	r2, r3
 800a2ea:	d80c      	bhi.n	800a306 <__multiply+0x9e>
 800a2ec:	2e00      	cmp	r6, #0
 800a2ee:	dd03      	ble.n	800a2f8 <__multiply+0x90>
 800a2f0:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800a2f4:	2b00      	cmp	r3, #0
 800a2f6:	d05b      	beq.n	800a3b0 <__multiply+0x148>
 800a2f8:	6106      	str	r6, [r0, #16]
 800a2fa:	b005      	add	sp, #20
 800a2fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a300:	f843 2b04 	str.w	r2, [r3], #4
 800a304:	e7d8      	b.n	800a2b8 <__multiply+0x50>
 800a306:	f8b3 a000 	ldrh.w	sl, [r3]
 800a30a:	f1ba 0f00 	cmp.w	sl, #0
 800a30e:	d024      	beq.n	800a35a <__multiply+0xf2>
 800a310:	f104 0e14 	add.w	lr, r4, #20
 800a314:	46a9      	mov	r9, r5
 800a316:	f04f 0c00 	mov.w	ip, #0
 800a31a:	f85e 2b04 	ldr.w	r2, [lr], #4
 800a31e:	f8d9 1000 	ldr.w	r1, [r9]
 800a322:	fa1f fb82 	uxth.w	fp, r2
 800a326:	b289      	uxth	r1, r1
 800a328:	fb0a 110b 	mla	r1, sl, fp, r1
 800a32c:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800a330:	f8d9 2000 	ldr.w	r2, [r9]
 800a334:	4461      	add	r1, ip
 800a336:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800a33a:	fb0a c20b 	mla	r2, sl, fp, ip
 800a33e:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800a342:	b289      	uxth	r1, r1
 800a344:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800a348:	4577      	cmp	r7, lr
 800a34a:	f849 1b04 	str.w	r1, [r9], #4
 800a34e:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800a352:	d8e2      	bhi.n	800a31a <__multiply+0xb2>
 800a354:	9a01      	ldr	r2, [sp, #4]
 800a356:	f845 c002 	str.w	ip, [r5, r2]
 800a35a:	9a03      	ldr	r2, [sp, #12]
 800a35c:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800a360:	3304      	adds	r3, #4
 800a362:	f1b9 0f00 	cmp.w	r9, #0
 800a366:	d021      	beq.n	800a3ac <__multiply+0x144>
 800a368:	6829      	ldr	r1, [r5, #0]
 800a36a:	f104 0c14 	add.w	ip, r4, #20
 800a36e:	46ae      	mov	lr, r5
 800a370:	f04f 0a00 	mov.w	sl, #0
 800a374:	f8bc b000 	ldrh.w	fp, [ip]
 800a378:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800a37c:	fb09 220b 	mla	r2, r9, fp, r2
 800a380:	4452      	add	r2, sl
 800a382:	b289      	uxth	r1, r1
 800a384:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800a388:	f84e 1b04 	str.w	r1, [lr], #4
 800a38c:	f85c 1b04 	ldr.w	r1, [ip], #4
 800a390:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800a394:	f8be 1000 	ldrh.w	r1, [lr]
 800a398:	fb09 110a 	mla	r1, r9, sl, r1
 800a39c:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 800a3a0:	4567      	cmp	r7, ip
 800a3a2:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800a3a6:	d8e5      	bhi.n	800a374 <__multiply+0x10c>
 800a3a8:	9a01      	ldr	r2, [sp, #4]
 800a3aa:	50a9      	str	r1, [r5, r2]
 800a3ac:	3504      	adds	r5, #4
 800a3ae:	e799      	b.n	800a2e4 <__multiply+0x7c>
 800a3b0:	3e01      	subs	r6, #1
 800a3b2:	e79b      	b.n	800a2ec <__multiply+0x84>
 800a3b4:	0800bfd8 	.word	0x0800bfd8
 800a3b8:	0800c05a 	.word	0x0800c05a

0800a3bc <__pow5mult>:
 800a3bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a3c0:	4615      	mov	r5, r2
 800a3c2:	f012 0203 	ands.w	r2, r2, #3
 800a3c6:	4606      	mov	r6, r0
 800a3c8:	460f      	mov	r7, r1
 800a3ca:	d007      	beq.n	800a3dc <__pow5mult+0x20>
 800a3cc:	4c25      	ldr	r4, [pc, #148]	; (800a464 <__pow5mult+0xa8>)
 800a3ce:	3a01      	subs	r2, #1
 800a3d0:	2300      	movs	r3, #0
 800a3d2:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800a3d6:	f7ff fe53 	bl	800a080 <__multadd>
 800a3da:	4607      	mov	r7, r0
 800a3dc:	10ad      	asrs	r5, r5, #2
 800a3de:	d03d      	beq.n	800a45c <__pow5mult+0xa0>
 800a3e0:	69f4      	ldr	r4, [r6, #28]
 800a3e2:	b97c      	cbnz	r4, 800a404 <__pow5mult+0x48>
 800a3e4:	2010      	movs	r0, #16
 800a3e6:	f7ff fc75 	bl	8009cd4 <malloc>
 800a3ea:	4602      	mov	r2, r0
 800a3ec:	61f0      	str	r0, [r6, #28]
 800a3ee:	b928      	cbnz	r0, 800a3fc <__pow5mult+0x40>
 800a3f0:	4b1d      	ldr	r3, [pc, #116]	; (800a468 <__pow5mult+0xac>)
 800a3f2:	481e      	ldr	r0, [pc, #120]	; (800a46c <__pow5mult+0xb0>)
 800a3f4:	f240 11b3 	movw	r1, #435	; 0x1b3
 800a3f8:	f7fd ffde 	bl	80083b8 <__assert_func>
 800a3fc:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800a400:	6004      	str	r4, [r0, #0]
 800a402:	60c4      	str	r4, [r0, #12]
 800a404:	f8d6 801c 	ldr.w	r8, [r6, #28]
 800a408:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800a40c:	b94c      	cbnz	r4, 800a422 <__pow5mult+0x66>
 800a40e:	f240 2171 	movw	r1, #625	; 0x271
 800a412:	4630      	mov	r0, r6
 800a414:	f7ff ff12 	bl	800a23c <__i2b>
 800a418:	2300      	movs	r3, #0
 800a41a:	f8c8 0008 	str.w	r0, [r8, #8]
 800a41e:	4604      	mov	r4, r0
 800a420:	6003      	str	r3, [r0, #0]
 800a422:	f04f 0900 	mov.w	r9, #0
 800a426:	07eb      	lsls	r3, r5, #31
 800a428:	d50a      	bpl.n	800a440 <__pow5mult+0x84>
 800a42a:	4639      	mov	r1, r7
 800a42c:	4622      	mov	r2, r4
 800a42e:	4630      	mov	r0, r6
 800a430:	f7ff ff1a 	bl	800a268 <__multiply>
 800a434:	4639      	mov	r1, r7
 800a436:	4680      	mov	r8, r0
 800a438:	4630      	mov	r0, r6
 800a43a:	f7ff fdff 	bl	800a03c <_Bfree>
 800a43e:	4647      	mov	r7, r8
 800a440:	106d      	asrs	r5, r5, #1
 800a442:	d00b      	beq.n	800a45c <__pow5mult+0xa0>
 800a444:	6820      	ldr	r0, [r4, #0]
 800a446:	b938      	cbnz	r0, 800a458 <__pow5mult+0x9c>
 800a448:	4622      	mov	r2, r4
 800a44a:	4621      	mov	r1, r4
 800a44c:	4630      	mov	r0, r6
 800a44e:	f7ff ff0b 	bl	800a268 <__multiply>
 800a452:	6020      	str	r0, [r4, #0]
 800a454:	f8c0 9000 	str.w	r9, [r0]
 800a458:	4604      	mov	r4, r0
 800a45a:	e7e4      	b.n	800a426 <__pow5mult+0x6a>
 800a45c:	4638      	mov	r0, r7
 800a45e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a462:	bf00      	nop
 800a464:	0800c1a8 	.word	0x0800c1a8
 800a468:	0800bdbd 	.word	0x0800bdbd
 800a46c:	0800c05a 	.word	0x0800c05a

0800a470 <__lshift>:
 800a470:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a474:	460c      	mov	r4, r1
 800a476:	6849      	ldr	r1, [r1, #4]
 800a478:	6923      	ldr	r3, [r4, #16]
 800a47a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800a47e:	68a3      	ldr	r3, [r4, #8]
 800a480:	4607      	mov	r7, r0
 800a482:	4691      	mov	r9, r2
 800a484:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800a488:	f108 0601 	add.w	r6, r8, #1
 800a48c:	42b3      	cmp	r3, r6
 800a48e:	db0b      	blt.n	800a4a8 <__lshift+0x38>
 800a490:	4638      	mov	r0, r7
 800a492:	f7ff fd93 	bl	8009fbc <_Balloc>
 800a496:	4605      	mov	r5, r0
 800a498:	b948      	cbnz	r0, 800a4ae <__lshift+0x3e>
 800a49a:	4602      	mov	r2, r0
 800a49c:	4b28      	ldr	r3, [pc, #160]	; (800a540 <__lshift+0xd0>)
 800a49e:	4829      	ldr	r0, [pc, #164]	; (800a544 <__lshift+0xd4>)
 800a4a0:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 800a4a4:	f7fd ff88 	bl	80083b8 <__assert_func>
 800a4a8:	3101      	adds	r1, #1
 800a4aa:	005b      	lsls	r3, r3, #1
 800a4ac:	e7ee      	b.n	800a48c <__lshift+0x1c>
 800a4ae:	2300      	movs	r3, #0
 800a4b0:	f100 0114 	add.w	r1, r0, #20
 800a4b4:	f100 0210 	add.w	r2, r0, #16
 800a4b8:	4618      	mov	r0, r3
 800a4ba:	4553      	cmp	r3, sl
 800a4bc:	db33      	blt.n	800a526 <__lshift+0xb6>
 800a4be:	6920      	ldr	r0, [r4, #16]
 800a4c0:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800a4c4:	f104 0314 	add.w	r3, r4, #20
 800a4c8:	f019 091f 	ands.w	r9, r9, #31
 800a4cc:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800a4d0:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800a4d4:	d02b      	beq.n	800a52e <__lshift+0xbe>
 800a4d6:	f1c9 0e20 	rsb	lr, r9, #32
 800a4da:	468a      	mov	sl, r1
 800a4dc:	2200      	movs	r2, #0
 800a4de:	6818      	ldr	r0, [r3, #0]
 800a4e0:	fa00 f009 	lsl.w	r0, r0, r9
 800a4e4:	4310      	orrs	r0, r2
 800a4e6:	f84a 0b04 	str.w	r0, [sl], #4
 800a4ea:	f853 2b04 	ldr.w	r2, [r3], #4
 800a4ee:	459c      	cmp	ip, r3
 800a4f0:	fa22 f20e 	lsr.w	r2, r2, lr
 800a4f4:	d8f3      	bhi.n	800a4de <__lshift+0x6e>
 800a4f6:	ebac 0304 	sub.w	r3, ip, r4
 800a4fa:	3b15      	subs	r3, #21
 800a4fc:	f023 0303 	bic.w	r3, r3, #3
 800a500:	3304      	adds	r3, #4
 800a502:	f104 0015 	add.w	r0, r4, #21
 800a506:	4584      	cmp	ip, r0
 800a508:	bf38      	it	cc
 800a50a:	2304      	movcc	r3, #4
 800a50c:	50ca      	str	r2, [r1, r3]
 800a50e:	b10a      	cbz	r2, 800a514 <__lshift+0xa4>
 800a510:	f108 0602 	add.w	r6, r8, #2
 800a514:	3e01      	subs	r6, #1
 800a516:	4638      	mov	r0, r7
 800a518:	612e      	str	r6, [r5, #16]
 800a51a:	4621      	mov	r1, r4
 800a51c:	f7ff fd8e 	bl	800a03c <_Bfree>
 800a520:	4628      	mov	r0, r5
 800a522:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a526:	f842 0f04 	str.w	r0, [r2, #4]!
 800a52a:	3301      	adds	r3, #1
 800a52c:	e7c5      	b.n	800a4ba <__lshift+0x4a>
 800a52e:	3904      	subs	r1, #4
 800a530:	f853 2b04 	ldr.w	r2, [r3], #4
 800a534:	f841 2f04 	str.w	r2, [r1, #4]!
 800a538:	459c      	cmp	ip, r3
 800a53a:	d8f9      	bhi.n	800a530 <__lshift+0xc0>
 800a53c:	e7ea      	b.n	800a514 <__lshift+0xa4>
 800a53e:	bf00      	nop
 800a540:	0800bfd8 	.word	0x0800bfd8
 800a544:	0800c05a 	.word	0x0800c05a

0800a548 <__mcmp>:
 800a548:	b530      	push	{r4, r5, lr}
 800a54a:	6902      	ldr	r2, [r0, #16]
 800a54c:	690c      	ldr	r4, [r1, #16]
 800a54e:	1b12      	subs	r2, r2, r4
 800a550:	d10e      	bne.n	800a570 <__mcmp+0x28>
 800a552:	f100 0314 	add.w	r3, r0, #20
 800a556:	3114      	adds	r1, #20
 800a558:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800a55c:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800a560:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800a564:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800a568:	42a5      	cmp	r5, r4
 800a56a:	d003      	beq.n	800a574 <__mcmp+0x2c>
 800a56c:	d305      	bcc.n	800a57a <__mcmp+0x32>
 800a56e:	2201      	movs	r2, #1
 800a570:	4610      	mov	r0, r2
 800a572:	bd30      	pop	{r4, r5, pc}
 800a574:	4283      	cmp	r3, r0
 800a576:	d3f3      	bcc.n	800a560 <__mcmp+0x18>
 800a578:	e7fa      	b.n	800a570 <__mcmp+0x28>
 800a57a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800a57e:	e7f7      	b.n	800a570 <__mcmp+0x28>

0800a580 <__mdiff>:
 800a580:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a584:	460c      	mov	r4, r1
 800a586:	4606      	mov	r6, r0
 800a588:	4611      	mov	r1, r2
 800a58a:	4620      	mov	r0, r4
 800a58c:	4690      	mov	r8, r2
 800a58e:	f7ff ffdb 	bl	800a548 <__mcmp>
 800a592:	1e05      	subs	r5, r0, #0
 800a594:	d110      	bne.n	800a5b8 <__mdiff+0x38>
 800a596:	4629      	mov	r1, r5
 800a598:	4630      	mov	r0, r6
 800a59a:	f7ff fd0f 	bl	8009fbc <_Balloc>
 800a59e:	b930      	cbnz	r0, 800a5ae <__mdiff+0x2e>
 800a5a0:	4b3a      	ldr	r3, [pc, #232]	; (800a68c <__mdiff+0x10c>)
 800a5a2:	4602      	mov	r2, r0
 800a5a4:	f240 2137 	movw	r1, #567	; 0x237
 800a5a8:	4839      	ldr	r0, [pc, #228]	; (800a690 <__mdiff+0x110>)
 800a5aa:	f7fd ff05 	bl	80083b8 <__assert_func>
 800a5ae:	2301      	movs	r3, #1
 800a5b0:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800a5b4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a5b8:	bfa4      	itt	ge
 800a5ba:	4643      	movge	r3, r8
 800a5bc:	46a0      	movge	r8, r4
 800a5be:	4630      	mov	r0, r6
 800a5c0:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800a5c4:	bfa6      	itte	ge
 800a5c6:	461c      	movge	r4, r3
 800a5c8:	2500      	movge	r5, #0
 800a5ca:	2501      	movlt	r5, #1
 800a5cc:	f7ff fcf6 	bl	8009fbc <_Balloc>
 800a5d0:	b920      	cbnz	r0, 800a5dc <__mdiff+0x5c>
 800a5d2:	4b2e      	ldr	r3, [pc, #184]	; (800a68c <__mdiff+0x10c>)
 800a5d4:	4602      	mov	r2, r0
 800a5d6:	f240 2145 	movw	r1, #581	; 0x245
 800a5da:	e7e5      	b.n	800a5a8 <__mdiff+0x28>
 800a5dc:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800a5e0:	6926      	ldr	r6, [r4, #16]
 800a5e2:	60c5      	str	r5, [r0, #12]
 800a5e4:	f104 0914 	add.w	r9, r4, #20
 800a5e8:	f108 0514 	add.w	r5, r8, #20
 800a5ec:	f100 0e14 	add.w	lr, r0, #20
 800a5f0:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800a5f4:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800a5f8:	f108 0210 	add.w	r2, r8, #16
 800a5fc:	46f2      	mov	sl, lr
 800a5fe:	2100      	movs	r1, #0
 800a600:	f859 3b04 	ldr.w	r3, [r9], #4
 800a604:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800a608:	fa11 f88b 	uxtah	r8, r1, fp
 800a60c:	b299      	uxth	r1, r3
 800a60e:	0c1b      	lsrs	r3, r3, #16
 800a610:	eba8 0801 	sub.w	r8, r8, r1
 800a614:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800a618:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800a61c:	fa1f f888 	uxth.w	r8, r8
 800a620:	1419      	asrs	r1, r3, #16
 800a622:	454e      	cmp	r6, r9
 800a624:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800a628:	f84a 3b04 	str.w	r3, [sl], #4
 800a62c:	d8e8      	bhi.n	800a600 <__mdiff+0x80>
 800a62e:	1b33      	subs	r3, r6, r4
 800a630:	3b15      	subs	r3, #21
 800a632:	f023 0303 	bic.w	r3, r3, #3
 800a636:	3304      	adds	r3, #4
 800a638:	3415      	adds	r4, #21
 800a63a:	42a6      	cmp	r6, r4
 800a63c:	bf38      	it	cc
 800a63e:	2304      	movcc	r3, #4
 800a640:	441d      	add	r5, r3
 800a642:	4473      	add	r3, lr
 800a644:	469e      	mov	lr, r3
 800a646:	462e      	mov	r6, r5
 800a648:	4566      	cmp	r6, ip
 800a64a:	d30e      	bcc.n	800a66a <__mdiff+0xea>
 800a64c:	f10c 0203 	add.w	r2, ip, #3
 800a650:	1b52      	subs	r2, r2, r5
 800a652:	f022 0203 	bic.w	r2, r2, #3
 800a656:	3d03      	subs	r5, #3
 800a658:	45ac      	cmp	ip, r5
 800a65a:	bf38      	it	cc
 800a65c:	2200      	movcc	r2, #0
 800a65e:	4413      	add	r3, r2
 800a660:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 800a664:	b17a      	cbz	r2, 800a686 <__mdiff+0x106>
 800a666:	6107      	str	r7, [r0, #16]
 800a668:	e7a4      	b.n	800a5b4 <__mdiff+0x34>
 800a66a:	f856 8b04 	ldr.w	r8, [r6], #4
 800a66e:	fa11 f288 	uxtah	r2, r1, r8
 800a672:	1414      	asrs	r4, r2, #16
 800a674:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800a678:	b292      	uxth	r2, r2
 800a67a:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800a67e:	f84e 2b04 	str.w	r2, [lr], #4
 800a682:	1421      	asrs	r1, r4, #16
 800a684:	e7e0      	b.n	800a648 <__mdiff+0xc8>
 800a686:	3f01      	subs	r7, #1
 800a688:	e7ea      	b.n	800a660 <__mdiff+0xe0>
 800a68a:	bf00      	nop
 800a68c:	0800bfd8 	.word	0x0800bfd8
 800a690:	0800c05a 	.word	0x0800c05a

0800a694 <__ulp>:
 800a694:	b082      	sub	sp, #8
 800a696:	ed8d 0b00 	vstr	d0, [sp]
 800a69a:	9a01      	ldr	r2, [sp, #4]
 800a69c:	4b0f      	ldr	r3, [pc, #60]	; (800a6dc <__ulp+0x48>)
 800a69e:	4013      	ands	r3, r2
 800a6a0:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 800a6a4:	2b00      	cmp	r3, #0
 800a6a6:	dc08      	bgt.n	800a6ba <__ulp+0x26>
 800a6a8:	425b      	negs	r3, r3
 800a6aa:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 800a6ae:	ea4f 5223 	mov.w	r2, r3, asr #20
 800a6b2:	da04      	bge.n	800a6be <__ulp+0x2a>
 800a6b4:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 800a6b8:	4113      	asrs	r3, r2
 800a6ba:	2200      	movs	r2, #0
 800a6bc:	e008      	b.n	800a6d0 <__ulp+0x3c>
 800a6be:	f1a2 0314 	sub.w	r3, r2, #20
 800a6c2:	2b1e      	cmp	r3, #30
 800a6c4:	bfda      	itte	le
 800a6c6:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 800a6ca:	40da      	lsrle	r2, r3
 800a6cc:	2201      	movgt	r2, #1
 800a6ce:	2300      	movs	r3, #0
 800a6d0:	4619      	mov	r1, r3
 800a6d2:	4610      	mov	r0, r2
 800a6d4:	ec41 0b10 	vmov	d0, r0, r1
 800a6d8:	b002      	add	sp, #8
 800a6da:	4770      	bx	lr
 800a6dc:	7ff00000 	.word	0x7ff00000

0800a6e0 <__b2d>:
 800a6e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a6e4:	6906      	ldr	r6, [r0, #16]
 800a6e6:	f100 0814 	add.w	r8, r0, #20
 800a6ea:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800a6ee:	1f37      	subs	r7, r6, #4
 800a6f0:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800a6f4:	4610      	mov	r0, r2
 800a6f6:	f7ff fd53 	bl	800a1a0 <__hi0bits>
 800a6fa:	f1c0 0320 	rsb	r3, r0, #32
 800a6fe:	280a      	cmp	r0, #10
 800a700:	600b      	str	r3, [r1, #0]
 800a702:	491b      	ldr	r1, [pc, #108]	; (800a770 <__b2d+0x90>)
 800a704:	dc15      	bgt.n	800a732 <__b2d+0x52>
 800a706:	f1c0 0c0b 	rsb	ip, r0, #11
 800a70a:	fa22 f30c 	lsr.w	r3, r2, ip
 800a70e:	45b8      	cmp	r8, r7
 800a710:	ea43 0501 	orr.w	r5, r3, r1
 800a714:	bf34      	ite	cc
 800a716:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 800a71a:	2300      	movcs	r3, #0
 800a71c:	3015      	adds	r0, #21
 800a71e:	fa02 f000 	lsl.w	r0, r2, r0
 800a722:	fa23 f30c 	lsr.w	r3, r3, ip
 800a726:	4303      	orrs	r3, r0
 800a728:	461c      	mov	r4, r3
 800a72a:	ec45 4b10 	vmov	d0, r4, r5
 800a72e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a732:	45b8      	cmp	r8, r7
 800a734:	bf3a      	itte	cc
 800a736:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 800a73a:	f1a6 0708 	subcc.w	r7, r6, #8
 800a73e:	2300      	movcs	r3, #0
 800a740:	380b      	subs	r0, #11
 800a742:	d012      	beq.n	800a76a <__b2d+0x8a>
 800a744:	f1c0 0120 	rsb	r1, r0, #32
 800a748:	fa23 f401 	lsr.w	r4, r3, r1
 800a74c:	4082      	lsls	r2, r0
 800a74e:	4322      	orrs	r2, r4
 800a750:	4547      	cmp	r7, r8
 800a752:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
 800a756:	bf8c      	ite	hi
 800a758:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 800a75c:	2200      	movls	r2, #0
 800a75e:	4083      	lsls	r3, r0
 800a760:	40ca      	lsrs	r2, r1
 800a762:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 800a766:	4313      	orrs	r3, r2
 800a768:	e7de      	b.n	800a728 <__b2d+0x48>
 800a76a:	ea42 0501 	orr.w	r5, r2, r1
 800a76e:	e7db      	b.n	800a728 <__b2d+0x48>
 800a770:	3ff00000 	.word	0x3ff00000

0800a774 <__d2b>:
 800a774:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a778:	460f      	mov	r7, r1
 800a77a:	2101      	movs	r1, #1
 800a77c:	ec59 8b10 	vmov	r8, r9, d0
 800a780:	4616      	mov	r6, r2
 800a782:	f7ff fc1b 	bl	8009fbc <_Balloc>
 800a786:	4604      	mov	r4, r0
 800a788:	b930      	cbnz	r0, 800a798 <__d2b+0x24>
 800a78a:	4602      	mov	r2, r0
 800a78c:	4b24      	ldr	r3, [pc, #144]	; (800a820 <__d2b+0xac>)
 800a78e:	4825      	ldr	r0, [pc, #148]	; (800a824 <__d2b+0xb0>)
 800a790:	f240 310f 	movw	r1, #783	; 0x30f
 800a794:	f7fd fe10 	bl	80083b8 <__assert_func>
 800a798:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800a79c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800a7a0:	bb2d      	cbnz	r5, 800a7ee <__d2b+0x7a>
 800a7a2:	9301      	str	r3, [sp, #4]
 800a7a4:	f1b8 0300 	subs.w	r3, r8, #0
 800a7a8:	d026      	beq.n	800a7f8 <__d2b+0x84>
 800a7aa:	4668      	mov	r0, sp
 800a7ac:	9300      	str	r3, [sp, #0]
 800a7ae:	f7ff fd17 	bl	800a1e0 <__lo0bits>
 800a7b2:	e9dd 1200 	ldrd	r1, r2, [sp]
 800a7b6:	b1e8      	cbz	r0, 800a7f4 <__d2b+0x80>
 800a7b8:	f1c0 0320 	rsb	r3, r0, #32
 800a7bc:	fa02 f303 	lsl.w	r3, r2, r3
 800a7c0:	430b      	orrs	r3, r1
 800a7c2:	40c2      	lsrs	r2, r0
 800a7c4:	6163      	str	r3, [r4, #20]
 800a7c6:	9201      	str	r2, [sp, #4]
 800a7c8:	9b01      	ldr	r3, [sp, #4]
 800a7ca:	61a3      	str	r3, [r4, #24]
 800a7cc:	2b00      	cmp	r3, #0
 800a7ce:	bf14      	ite	ne
 800a7d0:	2202      	movne	r2, #2
 800a7d2:	2201      	moveq	r2, #1
 800a7d4:	6122      	str	r2, [r4, #16]
 800a7d6:	b1bd      	cbz	r5, 800a808 <__d2b+0x94>
 800a7d8:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800a7dc:	4405      	add	r5, r0
 800a7de:	603d      	str	r5, [r7, #0]
 800a7e0:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800a7e4:	6030      	str	r0, [r6, #0]
 800a7e6:	4620      	mov	r0, r4
 800a7e8:	b003      	add	sp, #12
 800a7ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a7ee:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800a7f2:	e7d6      	b.n	800a7a2 <__d2b+0x2e>
 800a7f4:	6161      	str	r1, [r4, #20]
 800a7f6:	e7e7      	b.n	800a7c8 <__d2b+0x54>
 800a7f8:	a801      	add	r0, sp, #4
 800a7fa:	f7ff fcf1 	bl	800a1e0 <__lo0bits>
 800a7fe:	9b01      	ldr	r3, [sp, #4]
 800a800:	6163      	str	r3, [r4, #20]
 800a802:	3020      	adds	r0, #32
 800a804:	2201      	movs	r2, #1
 800a806:	e7e5      	b.n	800a7d4 <__d2b+0x60>
 800a808:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800a80c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800a810:	6038      	str	r0, [r7, #0]
 800a812:	6918      	ldr	r0, [r3, #16]
 800a814:	f7ff fcc4 	bl	800a1a0 <__hi0bits>
 800a818:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800a81c:	e7e2      	b.n	800a7e4 <__d2b+0x70>
 800a81e:	bf00      	nop
 800a820:	0800bfd8 	.word	0x0800bfd8
 800a824:	0800c05a 	.word	0x0800c05a

0800a828 <__ratio>:
 800a828:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a82c:	4688      	mov	r8, r1
 800a82e:	4669      	mov	r1, sp
 800a830:	4681      	mov	r9, r0
 800a832:	f7ff ff55 	bl	800a6e0 <__b2d>
 800a836:	a901      	add	r1, sp, #4
 800a838:	4640      	mov	r0, r8
 800a83a:	ec55 4b10 	vmov	r4, r5, d0
 800a83e:	f7ff ff4f 	bl	800a6e0 <__b2d>
 800a842:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800a846:	f8d8 2010 	ldr.w	r2, [r8, #16]
 800a84a:	eba3 0c02 	sub.w	ip, r3, r2
 800a84e:	e9dd 3200 	ldrd	r3, r2, [sp]
 800a852:	1a9b      	subs	r3, r3, r2
 800a854:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800a858:	ec51 0b10 	vmov	r0, r1, d0
 800a85c:	2b00      	cmp	r3, #0
 800a85e:	bfd6      	itet	le
 800a860:	460a      	movle	r2, r1
 800a862:	462a      	movgt	r2, r5
 800a864:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800a868:	468b      	mov	fp, r1
 800a86a:	462f      	mov	r7, r5
 800a86c:	bfd4      	ite	le
 800a86e:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800a872:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800a876:	4620      	mov	r0, r4
 800a878:	ee10 2a10 	vmov	r2, s0
 800a87c:	465b      	mov	r3, fp
 800a87e:	4639      	mov	r1, r7
 800a880:	f7f5 ffee 	bl	8000860 <__aeabi_ddiv>
 800a884:	ec41 0b10 	vmov	d0, r0, r1
 800a888:	b003      	add	sp, #12
 800a88a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800a88e <__copybits>:
 800a88e:	3901      	subs	r1, #1
 800a890:	b570      	push	{r4, r5, r6, lr}
 800a892:	1149      	asrs	r1, r1, #5
 800a894:	6914      	ldr	r4, [r2, #16]
 800a896:	3101      	adds	r1, #1
 800a898:	f102 0314 	add.w	r3, r2, #20
 800a89c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800a8a0:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800a8a4:	1f05      	subs	r5, r0, #4
 800a8a6:	42a3      	cmp	r3, r4
 800a8a8:	d30c      	bcc.n	800a8c4 <__copybits+0x36>
 800a8aa:	1aa3      	subs	r3, r4, r2
 800a8ac:	3b11      	subs	r3, #17
 800a8ae:	f023 0303 	bic.w	r3, r3, #3
 800a8b2:	3211      	adds	r2, #17
 800a8b4:	42a2      	cmp	r2, r4
 800a8b6:	bf88      	it	hi
 800a8b8:	2300      	movhi	r3, #0
 800a8ba:	4418      	add	r0, r3
 800a8bc:	2300      	movs	r3, #0
 800a8be:	4288      	cmp	r0, r1
 800a8c0:	d305      	bcc.n	800a8ce <__copybits+0x40>
 800a8c2:	bd70      	pop	{r4, r5, r6, pc}
 800a8c4:	f853 6b04 	ldr.w	r6, [r3], #4
 800a8c8:	f845 6f04 	str.w	r6, [r5, #4]!
 800a8cc:	e7eb      	b.n	800a8a6 <__copybits+0x18>
 800a8ce:	f840 3b04 	str.w	r3, [r0], #4
 800a8d2:	e7f4      	b.n	800a8be <__copybits+0x30>

0800a8d4 <__any_on>:
 800a8d4:	f100 0214 	add.w	r2, r0, #20
 800a8d8:	6900      	ldr	r0, [r0, #16]
 800a8da:	114b      	asrs	r3, r1, #5
 800a8dc:	4298      	cmp	r0, r3
 800a8de:	b510      	push	{r4, lr}
 800a8e0:	db11      	blt.n	800a906 <__any_on+0x32>
 800a8e2:	dd0a      	ble.n	800a8fa <__any_on+0x26>
 800a8e4:	f011 011f 	ands.w	r1, r1, #31
 800a8e8:	d007      	beq.n	800a8fa <__any_on+0x26>
 800a8ea:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800a8ee:	fa24 f001 	lsr.w	r0, r4, r1
 800a8f2:	fa00 f101 	lsl.w	r1, r0, r1
 800a8f6:	428c      	cmp	r4, r1
 800a8f8:	d10b      	bne.n	800a912 <__any_on+0x3e>
 800a8fa:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800a8fe:	4293      	cmp	r3, r2
 800a900:	d803      	bhi.n	800a90a <__any_on+0x36>
 800a902:	2000      	movs	r0, #0
 800a904:	bd10      	pop	{r4, pc}
 800a906:	4603      	mov	r3, r0
 800a908:	e7f7      	b.n	800a8fa <__any_on+0x26>
 800a90a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800a90e:	2900      	cmp	r1, #0
 800a910:	d0f5      	beq.n	800a8fe <__any_on+0x2a>
 800a912:	2001      	movs	r0, #1
 800a914:	e7f6      	b.n	800a904 <__any_on+0x30>

0800a916 <__sread>:
 800a916:	b510      	push	{r4, lr}
 800a918:	460c      	mov	r4, r1
 800a91a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a91e:	f000 f9e1 	bl	800ace4 <_read_r>
 800a922:	2800      	cmp	r0, #0
 800a924:	bfab      	itete	ge
 800a926:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800a928:	89a3      	ldrhlt	r3, [r4, #12]
 800a92a:	181b      	addge	r3, r3, r0
 800a92c:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800a930:	bfac      	ite	ge
 800a932:	6563      	strge	r3, [r4, #84]	; 0x54
 800a934:	81a3      	strhlt	r3, [r4, #12]
 800a936:	bd10      	pop	{r4, pc}

0800a938 <__swrite>:
 800a938:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a93c:	461f      	mov	r7, r3
 800a93e:	898b      	ldrh	r3, [r1, #12]
 800a940:	05db      	lsls	r3, r3, #23
 800a942:	4605      	mov	r5, r0
 800a944:	460c      	mov	r4, r1
 800a946:	4616      	mov	r6, r2
 800a948:	d505      	bpl.n	800a956 <__swrite+0x1e>
 800a94a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a94e:	2302      	movs	r3, #2
 800a950:	2200      	movs	r2, #0
 800a952:	f000 f9b5 	bl	800acc0 <_lseek_r>
 800a956:	89a3      	ldrh	r3, [r4, #12]
 800a958:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800a95c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800a960:	81a3      	strh	r3, [r4, #12]
 800a962:	4632      	mov	r2, r6
 800a964:	463b      	mov	r3, r7
 800a966:	4628      	mov	r0, r5
 800a968:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a96c:	f000 b9dc 	b.w	800ad28 <_write_r>

0800a970 <__sseek>:
 800a970:	b510      	push	{r4, lr}
 800a972:	460c      	mov	r4, r1
 800a974:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a978:	f000 f9a2 	bl	800acc0 <_lseek_r>
 800a97c:	1c43      	adds	r3, r0, #1
 800a97e:	89a3      	ldrh	r3, [r4, #12]
 800a980:	bf15      	itete	ne
 800a982:	6560      	strne	r0, [r4, #84]	; 0x54
 800a984:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800a988:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800a98c:	81a3      	strheq	r3, [r4, #12]
 800a98e:	bf18      	it	ne
 800a990:	81a3      	strhne	r3, [r4, #12]
 800a992:	bd10      	pop	{r4, pc}

0800a994 <__sclose>:
 800a994:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a998:	f000 b960 	b.w	800ac5c <_close_r>

0800a99c <fiprintf>:
 800a99c:	b40e      	push	{r1, r2, r3}
 800a99e:	b503      	push	{r0, r1, lr}
 800a9a0:	4601      	mov	r1, r0
 800a9a2:	ab03      	add	r3, sp, #12
 800a9a4:	4805      	ldr	r0, [pc, #20]	; (800a9bc <fiprintf+0x20>)
 800a9a6:	f853 2b04 	ldr.w	r2, [r3], #4
 800a9aa:	6800      	ldr	r0, [r0, #0]
 800a9ac:	9301      	str	r3, [sp, #4]
 800a9ae:	f7ff f877 	bl	8009aa0 <_vfiprintf_r>
 800a9b2:	b002      	add	sp, #8
 800a9b4:	f85d eb04 	ldr.w	lr, [sp], #4
 800a9b8:	b003      	add	sp, #12
 800a9ba:	4770      	bx	lr
 800a9bc:	200001ec 	.word	0x200001ec

0800a9c0 <_realloc_r>:
 800a9c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a9c4:	4680      	mov	r8, r0
 800a9c6:	4614      	mov	r4, r2
 800a9c8:	460e      	mov	r6, r1
 800a9ca:	b921      	cbnz	r1, 800a9d6 <_realloc_r+0x16>
 800a9cc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a9d0:	4611      	mov	r1, r2
 800a9d2:	f7ff b9a7 	b.w	8009d24 <_malloc_r>
 800a9d6:	b92a      	cbnz	r2, 800a9e4 <_realloc_r+0x24>
 800a9d8:	f000 f9d6 	bl	800ad88 <_free_r>
 800a9dc:	4625      	mov	r5, r4
 800a9de:	4628      	mov	r0, r5
 800a9e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a9e4:	f000 fa1c 	bl	800ae20 <_malloc_usable_size_r>
 800a9e8:	4284      	cmp	r4, r0
 800a9ea:	4607      	mov	r7, r0
 800a9ec:	d802      	bhi.n	800a9f4 <_realloc_r+0x34>
 800a9ee:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800a9f2:	d812      	bhi.n	800aa1a <_realloc_r+0x5a>
 800a9f4:	4621      	mov	r1, r4
 800a9f6:	4640      	mov	r0, r8
 800a9f8:	f7ff f994 	bl	8009d24 <_malloc_r>
 800a9fc:	4605      	mov	r5, r0
 800a9fe:	2800      	cmp	r0, #0
 800aa00:	d0ed      	beq.n	800a9de <_realloc_r+0x1e>
 800aa02:	42bc      	cmp	r4, r7
 800aa04:	4622      	mov	r2, r4
 800aa06:	4631      	mov	r1, r6
 800aa08:	bf28      	it	cs
 800aa0a:	463a      	movcs	r2, r7
 800aa0c:	f7fd fcbc 	bl	8008388 <memcpy>
 800aa10:	4631      	mov	r1, r6
 800aa12:	4640      	mov	r0, r8
 800aa14:	f000 f9b8 	bl	800ad88 <_free_r>
 800aa18:	e7e1      	b.n	800a9de <_realloc_r+0x1e>
 800aa1a:	4635      	mov	r5, r6
 800aa1c:	e7df      	b.n	800a9de <_realloc_r+0x1e>

0800aa1e <__swbuf_r>:
 800aa1e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800aa20:	460e      	mov	r6, r1
 800aa22:	4614      	mov	r4, r2
 800aa24:	4605      	mov	r5, r0
 800aa26:	b118      	cbz	r0, 800aa30 <__swbuf_r+0x12>
 800aa28:	6a03      	ldr	r3, [r0, #32]
 800aa2a:	b90b      	cbnz	r3, 800aa30 <__swbuf_r+0x12>
 800aa2c:	f7fc fd4e 	bl	80074cc <__sinit>
 800aa30:	69a3      	ldr	r3, [r4, #24]
 800aa32:	60a3      	str	r3, [r4, #8]
 800aa34:	89a3      	ldrh	r3, [r4, #12]
 800aa36:	071a      	lsls	r2, r3, #28
 800aa38:	d525      	bpl.n	800aa86 <__swbuf_r+0x68>
 800aa3a:	6923      	ldr	r3, [r4, #16]
 800aa3c:	b31b      	cbz	r3, 800aa86 <__swbuf_r+0x68>
 800aa3e:	6823      	ldr	r3, [r4, #0]
 800aa40:	6922      	ldr	r2, [r4, #16]
 800aa42:	1a98      	subs	r0, r3, r2
 800aa44:	6963      	ldr	r3, [r4, #20]
 800aa46:	b2f6      	uxtb	r6, r6
 800aa48:	4283      	cmp	r3, r0
 800aa4a:	4637      	mov	r7, r6
 800aa4c:	dc04      	bgt.n	800aa58 <__swbuf_r+0x3a>
 800aa4e:	4621      	mov	r1, r4
 800aa50:	4628      	mov	r0, r5
 800aa52:	f7ff fa7f 	bl	8009f54 <_fflush_r>
 800aa56:	b9e0      	cbnz	r0, 800aa92 <__swbuf_r+0x74>
 800aa58:	68a3      	ldr	r3, [r4, #8]
 800aa5a:	3b01      	subs	r3, #1
 800aa5c:	60a3      	str	r3, [r4, #8]
 800aa5e:	6823      	ldr	r3, [r4, #0]
 800aa60:	1c5a      	adds	r2, r3, #1
 800aa62:	6022      	str	r2, [r4, #0]
 800aa64:	701e      	strb	r6, [r3, #0]
 800aa66:	6962      	ldr	r2, [r4, #20]
 800aa68:	1c43      	adds	r3, r0, #1
 800aa6a:	429a      	cmp	r2, r3
 800aa6c:	d004      	beq.n	800aa78 <__swbuf_r+0x5a>
 800aa6e:	89a3      	ldrh	r3, [r4, #12]
 800aa70:	07db      	lsls	r3, r3, #31
 800aa72:	d506      	bpl.n	800aa82 <__swbuf_r+0x64>
 800aa74:	2e0a      	cmp	r6, #10
 800aa76:	d104      	bne.n	800aa82 <__swbuf_r+0x64>
 800aa78:	4621      	mov	r1, r4
 800aa7a:	4628      	mov	r0, r5
 800aa7c:	f7ff fa6a 	bl	8009f54 <_fflush_r>
 800aa80:	b938      	cbnz	r0, 800aa92 <__swbuf_r+0x74>
 800aa82:	4638      	mov	r0, r7
 800aa84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800aa86:	4621      	mov	r1, r4
 800aa88:	4628      	mov	r0, r5
 800aa8a:	f000 f805 	bl	800aa98 <__swsetup_r>
 800aa8e:	2800      	cmp	r0, #0
 800aa90:	d0d5      	beq.n	800aa3e <__swbuf_r+0x20>
 800aa92:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 800aa96:	e7f4      	b.n	800aa82 <__swbuf_r+0x64>

0800aa98 <__swsetup_r>:
 800aa98:	b538      	push	{r3, r4, r5, lr}
 800aa9a:	4b2a      	ldr	r3, [pc, #168]	; (800ab44 <__swsetup_r+0xac>)
 800aa9c:	4605      	mov	r5, r0
 800aa9e:	6818      	ldr	r0, [r3, #0]
 800aaa0:	460c      	mov	r4, r1
 800aaa2:	b118      	cbz	r0, 800aaac <__swsetup_r+0x14>
 800aaa4:	6a03      	ldr	r3, [r0, #32]
 800aaa6:	b90b      	cbnz	r3, 800aaac <__swsetup_r+0x14>
 800aaa8:	f7fc fd10 	bl	80074cc <__sinit>
 800aaac:	89a3      	ldrh	r3, [r4, #12]
 800aaae:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800aab2:	0718      	lsls	r0, r3, #28
 800aab4:	d422      	bmi.n	800aafc <__swsetup_r+0x64>
 800aab6:	06d9      	lsls	r1, r3, #27
 800aab8:	d407      	bmi.n	800aaca <__swsetup_r+0x32>
 800aaba:	2309      	movs	r3, #9
 800aabc:	602b      	str	r3, [r5, #0]
 800aabe:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800aac2:	81a3      	strh	r3, [r4, #12]
 800aac4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800aac8:	e034      	b.n	800ab34 <__swsetup_r+0x9c>
 800aaca:	0758      	lsls	r0, r3, #29
 800aacc:	d512      	bpl.n	800aaf4 <__swsetup_r+0x5c>
 800aace:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800aad0:	b141      	cbz	r1, 800aae4 <__swsetup_r+0x4c>
 800aad2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800aad6:	4299      	cmp	r1, r3
 800aad8:	d002      	beq.n	800aae0 <__swsetup_r+0x48>
 800aada:	4628      	mov	r0, r5
 800aadc:	f000 f954 	bl	800ad88 <_free_r>
 800aae0:	2300      	movs	r3, #0
 800aae2:	6363      	str	r3, [r4, #52]	; 0x34
 800aae4:	89a3      	ldrh	r3, [r4, #12]
 800aae6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800aaea:	81a3      	strh	r3, [r4, #12]
 800aaec:	2300      	movs	r3, #0
 800aaee:	6063      	str	r3, [r4, #4]
 800aaf0:	6923      	ldr	r3, [r4, #16]
 800aaf2:	6023      	str	r3, [r4, #0]
 800aaf4:	89a3      	ldrh	r3, [r4, #12]
 800aaf6:	f043 0308 	orr.w	r3, r3, #8
 800aafa:	81a3      	strh	r3, [r4, #12]
 800aafc:	6923      	ldr	r3, [r4, #16]
 800aafe:	b94b      	cbnz	r3, 800ab14 <__swsetup_r+0x7c>
 800ab00:	89a3      	ldrh	r3, [r4, #12]
 800ab02:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800ab06:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ab0a:	d003      	beq.n	800ab14 <__swsetup_r+0x7c>
 800ab0c:	4621      	mov	r1, r4
 800ab0e:	4628      	mov	r0, r5
 800ab10:	f000 f84d 	bl	800abae <__smakebuf_r>
 800ab14:	89a0      	ldrh	r0, [r4, #12]
 800ab16:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800ab1a:	f010 0301 	ands.w	r3, r0, #1
 800ab1e:	d00a      	beq.n	800ab36 <__swsetup_r+0x9e>
 800ab20:	2300      	movs	r3, #0
 800ab22:	60a3      	str	r3, [r4, #8]
 800ab24:	6963      	ldr	r3, [r4, #20]
 800ab26:	425b      	negs	r3, r3
 800ab28:	61a3      	str	r3, [r4, #24]
 800ab2a:	6923      	ldr	r3, [r4, #16]
 800ab2c:	b943      	cbnz	r3, 800ab40 <__swsetup_r+0xa8>
 800ab2e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800ab32:	d1c4      	bne.n	800aabe <__swsetup_r+0x26>
 800ab34:	bd38      	pop	{r3, r4, r5, pc}
 800ab36:	0781      	lsls	r1, r0, #30
 800ab38:	bf58      	it	pl
 800ab3a:	6963      	ldrpl	r3, [r4, #20]
 800ab3c:	60a3      	str	r3, [r4, #8]
 800ab3e:	e7f4      	b.n	800ab2a <__swsetup_r+0x92>
 800ab40:	2000      	movs	r0, #0
 800ab42:	e7f7      	b.n	800ab34 <__swsetup_r+0x9c>
 800ab44:	200001ec 	.word	0x200001ec

0800ab48 <__ascii_wctomb>:
 800ab48:	b149      	cbz	r1, 800ab5e <__ascii_wctomb+0x16>
 800ab4a:	2aff      	cmp	r2, #255	; 0xff
 800ab4c:	bf85      	ittet	hi
 800ab4e:	238a      	movhi	r3, #138	; 0x8a
 800ab50:	6003      	strhi	r3, [r0, #0]
 800ab52:	700a      	strbls	r2, [r1, #0]
 800ab54:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 800ab58:	bf98      	it	ls
 800ab5a:	2001      	movls	r0, #1
 800ab5c:	4770      	bx	lr
 800ab5e:	4608      	mov	r0, r1
 800ab60:	4770      	bx	lr

0800ab62 <__swhatbuf_r>:
 800ab62:	b570      	push	{r4, r5, r6, lr}
 800ab64:	460c      	mov	r4, r1
 800ab66:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ab6a:	2900      	cmp	r1, #0
 800ab6c:	b096      	sub	sp, #88	; 0x58
 800ab6e:	4615      	mov	r5, r2
 800ab70:	461e      	mov	r6, r3
 800ab72:	da0d      	bge.n	800ab90 <__swhatbuf_r+0x2e>
 800ab74:	89a3      	ldrh	r3, [r4, #12]
 800ab76:	f013 0f80 	tst.w	r3, #128	; 0x80
 800ab7a:	f04f 0100 	mov.w	r1, #0
 800ab7e:	bf0c      	ite	eq
 800ab80:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800ab84:	2340      	movne	r3, #64	; 0x40
 800ab86:	2000      	movs	r0, #0
 800ab88:	6031      	str	r1, [r6, #0]
 800ab8a:	602b      	str	r3, [r5, #0]
 800ab8c:	b016      	add	sp, #88	; 0x58
 800ab8e:	bd70      	pop	{r4, r5, r6, pc}
 800ab90:	466a      	mov	r2, sp
 800ab92:	f000 f873 	bl	800ac7c <_fstat_r>
 800ab96:	2800      	cmp	r0, #0
 800ab98:	dbec      	blt.n	800ab74 <__swhatbuf_r+0x12>
 800ab9a:	9901      	ldr	r1, [sp, #4]
 800ab9c:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800aba0:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800aba4:	4259      	negs	r1, r3
 800aba6:	4159      	adcs	r1, r3
 800aba8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800abac:	e7eb      	b.n	800ab86 <__swhatbuf_r+0x24>

0800abae <__smakebuf_r>:
 800abae:	898b      	ldrh	r3, [r1, #12]
 800abb0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800abb2:	079d      	lsls	r5, r3, #30
 800abb4:	4606      	mov	r6, r0
 800abb6:	460c      	mov	r4, r1
 800abb8:	d507      	bpl.n	800abca <__smakebuf_r+0x1c>
 800abba:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800abbe:	6023      	str	r3, [r4, #0]
 800abc0:	6123      	str	r3, [r4, #16]
 800abc2:	2301      	movs	r3, #1
 800abc4:	6163      	str	r3, [r4, #20]
 800abc6:	b002      	add	sp, #8
 800abc8:	bd70      	pop	{r4, r5, r6, pc}
 800abca:	ab01      	add	r3, sp, #4
 800abcc:	466a      	mov	r2, sp
 800abce:	f7ff ffc8 	bl	800ab62 <__swhatbuf_r>
 800abd2:	9900      	ldr	r1, [sp, #0]
 800abd4:	4605      	mov	r5, r0
 800abd6:	4630      	mov	r0, r6
 800abd8:	f7ff f8a4 	bl	8009d24 <_malloc_r>
 800abdc:	b948      	cbnz	r0, 800abf2 <__smakebuf_r+0x44>
 800abde:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800abe2:	059a      	lsls	r2, r3, #22
 800abe4:	d4ef      	bmi.n	800abc6 <__smakebuf_r+0x18>
 800abe6:	f023 0303 	bic.w	r3, r3, #3
 800abea:	f043 0302 	orr.w	r3, r3, #2
 800abee:	81a3      	strh	r3, [r4, #12]
 800abf0:	e7e3      	b.n	800abba <__smakebuf_r+0xc>
 800abf2:	89a3      	ldrh	r3, [r4, #12]
 800abf4:	6020      	str	r0, [r4, #0]
 800abf6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800abfa:	81a3      	strh	r3, [r4, #12]
 800abfc:	9b00      	ldr	r3, [sp, #0]
 800abfe:	6163      	str	r3, [r4, #20]
 800ac00:	9b01      	ldr	r3, [sp, #4]
 800ac02:	6120      	str	r0, [r4, #16]
 800ac04:	b15b      	cbz	r3, 800ac1e <__smakebuf_r+0x70>
 800ac06:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800ac0a:	4630      	mov	r0, r6
 800ac0c:	f000 f848 	bl	800aca0 <_isatty_r>
 800ac10:	b128      	cbz	r0, 800ac1e <__smakebuf_r+0x70>
 800ac12:	89a3      	ldrh	r3, [r4, #12]
 800ac14:	f023 0303 	bic.w	r3, r3, #3
 800ac18:	f043 0301 	orr.w	r3, r3, #1
 800ac1c:	81a3      	strh	r3, [r4, #12]
 800ac1e:	89a3      	ldrh	r3, [r4, #12]
 800ac20:	431d      	orrs	r5, r3
 800ac22:	81a5      	strh	r5, [r4, #12]
 800ac24:	e7cf      	b.n	800abc6 <__smakebuf_r+0x18>

0800ac26 <memmove>:
 800ac26:	4288      	cmp	r0, r1
 800ac28:	b510      	push	{r4, lr}
 800ac2a:	eb01 0402 	add.w	r4, r1, r2
 800ac2e:	d902      	bls.n	800ac36 <memmove+0x10>
 800ac30:	4284      	cmp	r4, r0
 800ac32:	4623      	mov	r3, r4
 800ac34:	d807      	bhi.n	800ac46 <memmove+0x20>
 800ac36:	1e43      	subs	r3, r0, #1
 800ac38:	42a1      	cmp	r1, r4
 800ac3a:	d008      	beq.n	800ac4e <memmove+0x28>
 800ac3c:	f811 2b01 	ldrb.w	r2, [r1], #1
 800ac40:	f803 2f01 	strb.w	r2, [r3, #1]!
 800ac44:	e7f8      	b.n	800ac38 <memmove+0x12>
 800ac46:	4402      	add	r2, r0
 800ac48:	4601      	mov	r1, r0
 800ac4a:	428a      	cmp	r2, r1
 800ac4c:	d100      	bne.n	800ac50 <memmove+0x2a>
 800ac4e:	bd10      	pop	{r4, pc}
 800ac50:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800ac54:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800ac58:	e7f7      	b.n	800ac4a <memmove+0x24>
	...

0800ac5c <_close_r>:
 800ac5c:	b538      	push	{r3, r4, r5, lr}
 800ac5e:	4d06      	ldr	r5, [pc, #24]	; (800ac78 <_close_r+0x1c>)
 800ac60:	2300      	movs	r3, #0
 800ac62:	4604      	mov	r4, r0
 800ac64:	4608      	mov	r0, r1
 800ac66:	602b      	str	r3, [r5, #0]
 800ac68:	f7f8 f823 	bl	8002cb2 <_close>
 800ac6c:	1c43      	adds	r3, r0, #1
 800ac6e:	d102      	bne.n	800ac76 <_close_r+0x1a>
 800ac70:	682b      	ldr	r3, [r5, #0]
 800ac72:	b103      	cbz	r3, 800ac76 <_close_r+0x1a>
 800ac74:	6023      	str	r3, [r4, #0]
 800ac76:	bd38      	pop	{r3, r4, r5, pc}
 800ac78:	20000f90 	.word	0x20000f90

0800ac7c <_fstat_r>:
 800ac7c:	b538      	push	{r3, r4, r5, lr}
 800ac7e:	4d07      	ldr	r5, [pc, #28]	; (800ac9c <_fstat_r+0x20>)
 800ac80:	2300      	movs	r3, #0
 800ac82:	4604      	mov	r4, r0
 800ac84:	4608      	mov	r0, r1
 800ac86:	4611      	mov	r1, r2
 800ac88:	602b      	str	r3, [r5, #0]
 800ac8a:	f7f8 f81e 	bl	8002cca <_fstat>
 800ac8e:	1c43      	adds	r3, r0, #1
 800ac90:	d102      	bne.n	800ac98 <_fstat_r+0x1c>
 800ac92:	682b      	ldr	r3, [r5, #0]
 800ac94:	b103      	cbz	r3, 800ac98 <_fstat_r+0x1c>
 800ac96:	6023      	str	r3, [r4, #0]
 800ac98:	bd38      	pop	{r3, r4, r5, pc}
 800ac9a:	bf00      	nop
 800ac9c:	20000f90 	.word	0x20000f90

0800aca0 <_isatty_r>:
 800aca0:	b538      	push	{r3, r4, r5, lr}
 800aca2:	4d06      	ldr	r5, [pc, #24]	; (800acbc <_isatty_r+0x1c>)
 800aca4:	2300      	movs	r3, #0
 800aca6:	4604      	mov	r4, r0
 800aca8:	4608      	mov	r0, r1
 800acaa:	602b      	str	r3, [r5, #0]
 800acac:	f7f8 f81d 	bl	8002cea <_isatty>
 800acb0:	1c43      	adds	r3, r0, #1
 800acb2:	d102      	bne.n	800acba <_isatty_r+0x1a>
 800acb4:	682b      	ldr	r3, [r5, #0]
 800acb6:	b103      	cbz	r3, 800acba <_isatty_r+0x1a>
 800acb8:	6023      	str	r3, [r4, #0]
 800acba:	bd38      	pop	{r3, r4, r5, pc}
 800acbc:	20000f90 	.word	0x20000f90

0800acc0 <_lseek_r>:
 800acc0:	b538      	push	{r3, r4, r5, lr}
 800acc2:	4d07      	ldr	r5, [pc, #28]	; (800ace0 <_lseek_r+0x20>)
 800acc4:	4604      	mov	r4, r0
 800acc6:	4608      	mov	r0, r1
 800acc8:	4611      	mov	r1, r2
 800acca:	2200      	movs	r2, #0
 800accc:	602a      	str	r2, [r5, #0]
 800acce:	461a      	mov	r2, r3
 800acd0:	f7f8 f816 	bl	8002d00 <_lseek>
 800acd4:	1c43      	adds	r3, r0, #1
 800acd6:	d102      	bne.n	800acde <_lseek_r+0x1e>
 800acd8:	682b      	ldr	r3, [r5, #0]
 800acda:	b103      	cbz	r3, 800acde <_lseek_r+0x1e>
 800acdc:	6023      	str	r3, [r4, #0]
 800acde:	bd38      	pop	{r3, r4, r5, pc}
 800ace0:	20000f90 	.word	0x20000f90

0800ace4 <_read_r>:
 800ace4:	b538      	push	{r3, r4, r5, lr}
 800ace6:	4d07      	ldr	r5, [pc, #28]	; (800ad04 <_read_r+0x20>)
 800ace8:	4604      	mov	r4, r0
 800acea:	4608      	mov	r0, r1
 800acec:	4611      	mov	r1, r2
 800acee:	2200      	movs	r2, #0
 800acf0:	602a      	str	r2, [r5, #0]
 800acf2:	461a      	mov	r2, r3
 800acf4:	f7f7 ffa4 	bl	8002c40 <_read>
 800acf8:	1c43      	adds	r3, r0, #1
 800acfa:	d102      	bne.n	800ad02 <_read_r+0x1e>
 800acfc:	682b      	ldr	r3, [r5, #0]
 800acfe:	b103      	cbz	r3, 800ad02 <_read_r+0x1e>
 800ad00:	6023      	str	r3, [r4, #0]
 800ad02:	bd38      	pop	{r3, r4, r5, pc}
 800ad04:	20000f90 	.word	0x20000f90

0800ad08 <_sbrk_r>:
 800ad08:	b538      	push	{r3, r4, r5, lr}
 800ad0a:	4d06      	ldr	r5, [pc, #24]	; (800ad24 <_sbrk_r+0x1c>)
 800ad0c:	2300      	movs	r3, #0
 800ad0e:	4604      	mov	r4, r0
 800ad10:	4608      	mov	r0, r1
 800ad12:	602b      	str	r3, [r5, #0]
 800ad14:	f7f8 f802 	bl	8002d1c <_sbrk>
 800ad18:	1c43      	adds	r3, r0, #1
 800ad1a:	d102      	bne.n	800ad22 <_sbrk_r+0x1a>
 800ad1c:	682b      	ldr	r3, [r5, #0]
 800ad1e:	b103      	cbz	r3, 800ad22 <_sbrk_r+0x1a>
 800ad20:	6023      	str	r3, [r4, #0]
 800ad22:	bd38      	pop	{r3, r4, r5, pc}
 800ad24:	20000f90 	.word	0x20000f90

0800ad28 <_write_r>:
 800ad28:	b538      	push	{r3, r4, r5, lr}
 800ad2a:	4d07      	ldr	r5, [pc, #28]	; (800ad48 <_write_r+0x20>)
 800ad2c:	4604      	mov	r4, r0
 800ad2e:	4608      	mov	r0, r1
 800ad30:	4611      	mov	r1, r2
 800ad32:	2200      	movs	r2, #0
 800ad34:	602a      	str	r2, [r5, #0]
 800ad36:	461a      	mov	r2, r3
 800ad38:	f7f7 ff9f 	bl	8002c7a <_write>
 800ad3c:	1c43      	adds	r3, r0, #1
 800ad3e:	d102      	bne.n	800ad46 <_write_r+0x1e>
 800ad40:	682b      	ldr	r3, [r5, #0]
 800ad42:	b103      	cbz	r3, 800ad46 <_write_r+0x1e>
 800ad44:	6023      	str	r3, [r4, #0]
 800ad46:	bd38      	pop	{r3, r4, r5, pc}
 800ad48:	20000f90 	.word	0x20000f90

0800ad4c <abort>:
 800ad4c:	b508      	push	{r3, lr}
 800ad4e:	2006      	movs	r0, #6
 800ad50:	f000 f896 	bl	800ae80 <raise>
 800ad54:	2001      	movs	r0, #1
 800ad56:	f7f7 ff69 	bl	8002c2c <_exit>

0800ad5a <_calloc_r>:
 800ad5a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ad5c:	fba1 2402 	umull	r2, r4, r1, r2
 800ad60:	b94c      	cbnz	r4, 800ad76 <_calloc_r+0x1c>
 800ad62:	4611      	mov	r1, r2
 800ad64:	9201      	str	r2, [sp, #4]
 800ad66:	f7fe ffdd 	bl	8009d24 <_malloc_r>
 800ad6a:	9a01      	ldr	r2, [sp, #4]
 800ad6c:	4605      	mov	r5, r0
 800ad6e:	b930      	cbnz	r0, 800ad7e <_calloc_r+0x24>
 800ad70:	4628      	mov	r0, r5
 800ad72:	b003      	add	sp, #12
 800ad74:	bd30      	pop	{r4, r5, pc}
 800ad76:	220c      	movs	r2, #12
 800ad78:	6002      	str	r2, [r0, #0]
 800ad7a:	2500      	movs	r5, #0
 800ad7c:	e7f8      	b.n	800ad70 <_calloc_r+0x16>
 800ad7e:	4621      	mov	r1, r4
 800ad80:	f7fd faca 	bl	8008318 <memset>
 800ad84:	e7f4      	b.n	800ad70 <_calloc_r+0x16>
	...

0800ad88 <_free_r>:
 800ad88:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ad8a:	2900      	cmp	r1, #0
 800ad8c:	d044      	beq.n	800ae18 <_free_r+0x90>
 800ad8e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800ad92:	9001      	str	r0, [sp, #4]
 800ad94:	2b00      	cmp	r3, #0
 800ad96:	f1a1 0404 	sub.w	r4, r1, #4
 800ad9a:	bfb8      	it	lt
 800ad9c:	18e4      	addlt	r4, r4, r3
 800ad9e:	f7ff f901 	bl	8009fa4 <__malloc_lock>
 800ada2:	4a1e      	ldr	r2, [pc, #120]	; (800ae1c <_free_r+0x94>)
 800ada4:	9801      	ldr	r0, [sp, #4]
 800ada6:	6813      	ldr	r3, [r2, #0]
 800ada8:	b933      	cbnz	r3, 800adb8 <_free_r+0x30>
 800adaa:	6063      	str	r3, [r4, #4]
 800adac:	6014      	str	r4, [r2, #0]
 800adae:	b003      	add	sp, #12
 800adb0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800adb4:	f7ff b8fc 	b.w	8009fb0 <__malloc_unlock>
 800adb8:	42a3      	cmp	r3, r4
 800adba:	d908      	bls.n	800adce <_free_r+0x46>
 800adbc:	6825      	ldr	r5, [r4, #0]
 800adbe:	1961      	adds	r1, r4, r5
 800adc0:	428b      	cmp	r3, r1
 800adc2:	bf01      	itttt	eq
 800adc4:	6819      	ldreq	r1, [r3, #0]
 800adc6:	685b      	ldreq	r3, [r3, #4]
 800adc8:	1949      	addeq	r1, r1, r5
 800adca:	6021      	streq	r1, [r4, #0]
 800adcc:	e7ed      	b.n	800adaa <_free_r+0x22>
 800adce:	461a      	mov	r2, r3
 800add0:	685b      	ldr	r3, [r3, #4]
 800add2:	b10b      	cbz	r3, 800add8 <_free_r+0x50>
 800add4:	42a3      	cmp	r3, r4
 800add6:	d9fa      	bls.n	800adce <_free_r+0x46>
 800add8:	6811      	ldr	r1, [r2, #0]
 800adda:	1855      	adds	r5, r2, r1
 800addc:	42a5      	cmp	r5, r4
 800adde:	d10b      	bne.n	800adf8 <_free_r+0x70>
 800ade0:	6824      	ldr	r4, [r4, #0]
 800ade2:	4421      	add	r1, r4
 800ade4:	1854      	adds	r4, r2, r1
 800ade6:	42a3      	cmp	r3, r4
 800ade8:	6011      	str	r1, [r2, #0]
 800adea:	d1e0      	bne.n	800adae <_free_r+0x26>
 800adec:	681c      	ldr	r4, [r3, #0]
 800adee:	685b      	ldr	r3, [r3, #4]
 800adf0:	6053      	str	r3, [r2, #4]
 800adf2:	440c      	add	r4, r1
 800adf4:	6014      	str	r4, [r2, #0]
 800adf6:	e7da      	b.n	800adae <_free_r+0x26>
 800adf8:	d902      	bls.n	800ae00 <_free_r+0x78>
 800adfa:	230c      	movs	r3, #12
 800adfc:	6003      	str	r3, [r0, #0]
 800adfe:	e7d6      	b.n	800adae <_free_r+0x26>
 800ae00:	6825      	ldr	r5, [r4, #0]
 800ae02:	1961      	adds	r1, r4, r5
 800ae04:	428b      	cmp	r3, r1
 800ae06:	bf04      	itt	eq
 800ae08:	6819      	ldreq	r1, [r3, #0]
 800ae0a:	685b      	ldreq	r3, [r3, #4]
 800ae0c:	6063      	str	r3, [r4, #4]
 800ae0e:	bf04      	itt	eq
 800ae10:	1949      	addeq	r1, r1, r5
 800ae12:	6021      	streq	r1, [r4, #0]
 800ae14:	6054      	str	r4, [r2, #4]
 800ae16:	e7ca      	b.n	800adae <_free_r+0x26>
 800ae18:	b003      	add	sp, #12
 800ae1a:	bd30      	pop	{r4, r5, pc}
 800ae1c:	20000f88 	.word	0x20000f88

0800ae20 <_malloc_usable_size_r>:
 800ae20:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800ae24:	1f18      	subs	r0, r3, #4
 800ae26:	2b00      	cmp	r3, #0
 800ae28:	bfbc      	itt	lt
 800ae2a:	580b      	ldrlt	r3, [r1, r0]
 800ae2c:	18c0      	addlt	r0, r0, r3
 800ae2e:	4770      	bx	lr

0800ae30 <_raise_r>:
 800ae30:	291f      	cmp	r1, #31
 800ae32:	b538      	push	{r3, r4, r5, lr}
 800ae34:	4604      	mov	r4, r0
 800ae36:	460d      	mov	r5, r1
 800ae38:	d904      	bls.n	800ae44 <_raise_r+0x14>
 800ae3a:	2316      	movs	r3, #22
 800ae3c:	6003      	str	r3, [r0, #0]
 800ae3e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ae42:	bd38      	pop	{r3, r4, r5, pc}
 800ae44:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800ae46:	b112      	cbz	r2, 800ae4e <_raise_r+0x1e>
 800ae48:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800ae4c:	b94b      	cbnz	r3, 800ae62 <_raise_r+0x32>
 800ae4e:	4620      	mov	r0, r4
 800ae50:	f000 f830 	bl	800aeb4 <_getpid_r>
 800ae54:	462a      	mov	r2, r5
 800ae56:	4601      	mov	r1, r0
 800ae58:	4620      	mov	r0, r4
 800ae5a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ae5e:	f000 b817 	b.w	800ae90 <_kill_r>
 800ae62:	2b01      	cmp	r3, #1
 800ae64:	d00a      	beq.n	800ae7c <_raise_r+0x4c>
 800ae66:	1c59      	adds	r1, r3, #1
 800ae68:	d103      	bne.n	800ae72 <_raise_r+0x42>
 800ae6a:	2316      	movs	r3, #22
 800ae6c:	6003      	str	r3, [r0, #0]
 800ae6e:	2001      	movs	r0, #1
 800ae70:	e7e7      	b.n	800ae42 <_raise_r+0x12>
 800ae72:	2400      	movs	r4, #0
 800ae74:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800ae78:	4628      	mov	r0, r5
 800ae7a:	4798      	blx	r3
 800ae7c:	2000      	movs	r0, #0
 800ae7e:	e7e0      	b.n	800ae42 <_raise_r+0x12>

0800ae80 <raise>:
 800ae80:	4b02      	ldr	r3, [pc, #8]	; (800ae8c <raise+0xc>)
 800ae82:	4601      	mov	r1, r0
 800ae84:	6818      	ldr	r0, [r3, #0]
 800ae86:	f7ff bfd3 	b.w	800ae30 <_raise_r>
 800ae8a:	bf00      	nop
 800ae8c:	200001ec 	.word	0x200001ec

0800ae90 <_kill_r>:
 800ae90:	b538      	push	{r3, r4, r5, lr}
 800ae92:	4d07      	ldr	r5, [pc, #28]	; (800aeb0 <_kill_r+0x20>)
 800ae94:	2300      	movs	r3, #0
 800ae96:	4604      	mov	r4, r0
 800ae98:	4608      	mov	r0, r1
 800ae9a:	4611      	mov	r1, r2
 800ae9c:	602b      	str	r3, [r5, #0]
 800ae9e:	f7f7 feb5 	bl	8002c0c <_kill>
 800aea2:	1c43      	adds	r3, r0, #1
 800aea4:	d102      	bne.n	800aeac <_kill_r+0x1c>
 800aea6:	682b      	ldr	r3, [r5, #0]
 800aea8:	b103      	cbz	r3, 800aeac <_kill_r+0x1c>
 800aeaa:	6023      	str	r3, [r4, #0]
 800aeac:	bd38      	pop	{r3, r4, r5, pc}
 800aeae:	bf00      	nop
 800aeb0:	20000f90 	.word	0x20000f90

0800aeb4 <_getpid_r>:
 800aeb4:	f7f7 bea2 	b.w	8002bfc <_getpid>

0800aeb8 <roundf>:
 800aeb8:	ee10 0a10 	vmov	r0, s0
 800aebc:	f3c0 52c7 	ubfx	r2, r0, #23, #8
 800aec0:	3a7f      	subs	r2, #127	; 0x7f
 800aec2:	2a16      	cmp	r2, #22
 800aec4:	dc15      	bgt.n	800aef2 <roundf+0x3a>
 800aec6:	2a00      	cmp	r2, #0
 800aec8:	da08      	bge.n	800aedc <roundf+0x24>
 800aeca:	3201      	adds	r2, #1
 800aecc:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 800aed0:	d101      	bne.n	800aed6 <roundf+0x1e>
 800aed2:	f043 537e 	orr.w	r3, r3, #1065353216	; 0x3f800000
 800aed6:	ee00 3a10 	vmov	s0, r3
 800aeda:	4770      	bx	lr
 800aedc:	4907      	ldr	r1, [pc, #28]	; (800aefc <roundf+0x44>)
 800aede:	4111      	asrs	r1, r2
 800aee0:	4208      	tst	r0, r1
 800aee2:	d0fa      	beq.n	800aeda <roundf+0x22>
 800aee4:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800aee8:	4113      	asrs	r3, r2
 800aeea:	4403      	add	r3, r0
 800aeec:	ea23 0301 	bic.w	r3, r3, r1
 800aef0:	e7f1      	b.n	800aed6 <roundf+0x1e>
 800aef2:	2a80      	cmp	r2, #128	; 0x80
 800aef4:	d1f1      	bne.n	800aeda <roundf+0x22>
 800aef6:	ee30 0a00 	vadd.f32	s0, s0, s0
 800aefa:	4770      	bx	lr
 800aefc:	007fffff 	.word	0x007fffff

0800af00 <_init>:
 800af00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800af02:	bf00      	nop
 800af04:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800af06:	bc08      	pop	{r3}
 800af08:	469e      	mov	lr, r3
 800af0a:	4770      	bx	lr

0800af0c <_fini>:
 800af0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800af0e:	bf00      	nop
 800af10:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800af12:	bc08      	pop	{r3}
 800af14:	469e      	mov	lr, r3
 800af16:	4770      	bx	lr
